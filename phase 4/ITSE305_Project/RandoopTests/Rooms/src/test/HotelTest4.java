import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class HotelTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2001");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) ' ');
        Hotel hotel7 = new Hotel((int) 'a');
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        hotel5.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel1.reserveRoom(room14);
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Room room20 = hotel17.findAvailableRoom();
        Room room21 = hotel17.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Room room26 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        hotel23.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (short) 0);
        Room room31 = hotel30.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) 'a');
        hotel33.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel33.reserveRoom(room41);
        Room room44 = hotel33.findAvailableRoom();
        Room room45 = hotel33.findAvailableRoom();
        hotel30.reserveRoom(room45);
        hotel23.reserveRoom(room45);
        hotel17.reserveRoom(room45);
        Hotel hotel50 = new Hotel((int) 'a');
        hotel50.displayRoomStatus();
        Room room52 = hotel50.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (short) 0);
        Room room55 = hotel54.findAvailableRoom();
        Hotel hotel57 = new Hotel((int) 'a');
        hotel57.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        hotel57.reserveRoom(room65);
        Room room68 = hotel57.findAvailableRoom();
        Room room69 = hotel57.findAvailableRoom();
        hotel54.reserveRoom(room69);
        hotel50.reserveRoom(room69);
        Room room72 = hotel50.findAvailableRoom();
        hotel17.reserveRoom(room72);
        hotel1.reserveRoom(room72);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room72);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2002");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Room room23 = hotel1.findAvailableRoom();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Room room28 = hotel25.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        hotel30.displayRoomStatus();
        Room room32 = hotel30.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel30.reserveRoom(room52);
        hotel30.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel67.reserveRoom(room76);
        hotel58.reserveRoom(room76);
        hotel30.reserveRoom(room76);
        hotel25.reserveRoom(room76);
        hotel1.reserveRoom(room76);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass85 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2003");
        Hotel hotel1 = new Hotel((int) (short) 10);
        Hotel hotel3 = new Hotel(10);
        hotel3.displayRoomStatus();
        Hotel hotel6 = new Hotel((int) 'a');
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        hotel6.reserveRoom(room37);
        hotel3.reserveRoom(room37);
        hotel1.reserveRoom(room37);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2004");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        Room room35 = hotel1.findAvailableRoom();
        Room room36 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2005");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) 'a');
        hotel7.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel7.reserveRoom(room15);
        hotel7.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        hotel24.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel24.reserveRoom(room42);
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel24.reserveRoom(room55);
        hotel20.reserveRoom(room55);
        hotel7.reserveRoom(room55);
        Hotel hotel61 = new Hotel((int) (short) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel7.reserveRoom(room62);
        hotel1.reserveRoom(room62);
        hotel1.displayRoomStatus();
        Hotel hotel67 = new Hotel(0);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        hotel67.displayRoomStatus();
        Hotel hotel72 = new Hotel(0);
        hotel72.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel72.reserveRoom(room76);
        hotel67.reserveRoom(room76);
        Hotel hotel80 = new Hotel((int) (short) 0);
        Room room81 = hotel80.findAvailableRoom();
        Hotel hotel83 = new Hotel(10);
        Room room84 = hotel83.findAvailableRoom();
        hotel80.reserveRoom(room84);
        Hotel hotel87 = new Hotel((int) (byte) 1);
        Room room88 = hotel87.findAvailableRoom();
        hotel87.displayRoomStatus();
        Room room90 = hotel87.findAvailableRoom();
        hotel80.reserveRoom(room90);
        hotel67.reserveRoom(room90);
        Hotel hotel94 = new Hotel((int) 'a');
        Room room95 = hotel94.findAvailableRoom();
        Room room96 = hotel94.findAvailableRoom();
        hotel67.reserveRoom(room96);
        hotel1.reserveRoom(room96);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room81);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room95);
        org.junit.Assert.assertNotNull(room96);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2006");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Hotel hotel31 = new Hotel((int) (byte) 10);
        hotel31.displayRoomStatus();
        hotel31.displayRoomStatus();
        Room room34 = hotel31.findAvailableRoom();
        hotel1.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        hotel37.displayRoomStatus();
        Room room39 = hotel37.findAvailableRoom();
        Room room40 = hotel37.findAvailableRoom();
        Hotel hotel42 = new Hotel(1);
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        hotel55.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel64.reserveRoom(room73);
        hotel55.reserveRoom(room73);
        hotel46.reserveRoom(room73);
        hotel42.reserveRoom(room73);
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        Room room80 = hotel42.findAvailableRoom();
        hotel37.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        Room room83 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room83);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2007");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        hotel4.reserveRoom(room26);
        hotel4.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel4.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        Hotel hotel46 = new Hotel((int) (byte) -1);
        hotel46.displayRoomStatus();
        Room room48 = hotel46.findAvailableRoom();
        Room room49 = hotel46.findAvailableRoom();
        Room room50 = hotel46.findAvailableRoom();
        Room room51 = hotel46.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        hotel53.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel62.reserveRoom(room71);
        hotel53.reserveRoom(room71);
        Hotel hotel75 = new Hotel((int) 'a');
        hotel75.displayRoomStatus();
        Room room77 = hotel75.findAvailableRoom();
        hotel53.reserveRoom(room77);
        hotel53.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (short) 10);
        Room room82 = hotel81.findAvailableRoom();
        hotel53.reserveRoom(room82);
        hotel46.reserveRoom(room82);
        hotel46.displayRoomStatus();
        hotel46.displayRoomStatus();
        Hotel hotel88 = new Hotel((int) 'a');
        hotel88.displayRoomStatus();
        Room room90 = hotel88.findAvailableRoom();
        hotel46.reserveRoom(room90);
        hotel1.reserveRoom(room90);
        java.lang.Class<?> wildcardClass93 = room90.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2008");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel(1);
        hotel7.displayRoomStatus();
        Hotel hotel10 = new Hotel(10);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        hotel30.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel39.reserveRoom(room48);
        hotel30.reserveRoom(room48);
        hotel21.reserveRoom(room48);
        hotel13.reserveRoom(room48);
        hotel10.reserveRoom(room48);
        hotel7.reserveRoom(room48);
        hotel1.reserveRoom(room48);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room48);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2009");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) 'a');
        hotel43.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel43.reserveRoom(room51);
        hotel43.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        hotel60.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel69.reserveRoom(room78);
        hotel60.reserveRoom(room78);
        Hotel hotel82 = new Hotel((int) (byte) -1);
        Room room83 = hotel82.findAvailableRoom();
        hotel82.displayRoomStatus();
        Hotel hotel86 = new Hotel((int) (byte) 1);
        Room room87 = hotel86.findAvailableRoom();
        hotel82.reserveRoom(room87);
        Hotel hotel90 = new Hotel((int) (byte) 1);
        Room room91 = hotel90.findAvailableRoom();
        hotel82.reserveRoom(room91);
        hotel60.reserveRoom(room91);
        hotel56.reserveRoom(room91);
        hotel43.reserveRoom(room91);
        hotel1.reserveRoom(room91);
        hotel1.displayRoomStatus();
        Room room98 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room91);
        org.junit.Assert.assertNull(room98);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2010");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel20.reserveRoom(room38);
        hotel16.reserveRoom(room38);
        hotel16.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel16.reserveRoom(room53);
        hotel13.reserveRoom(room53);
        Hotel hotel58 = new Hotel(10);
        hotel58.displayRoomStatus();
        Room room60 = hotel58.findAvailableRoom();
        hotel13.reserveRoom(room60);
        hotel1.reserveRoom(room60);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room60);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2011");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        hotel1.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (short) 0);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Room room16 = hotel12.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel18.reserveRoom(room36);
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel40.reserveRoom(room49);
        hotel18.reserveRoom(room49);
        hotel12.reserveRoom(room49);
        hotel1.reserveRoom(room49);
        Room room54 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room54);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2012");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass49 = hotel1.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2013");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        hotel1.reserveRoom(room14);
        Room room18 = hotel1.findAvailableRoom();
        Room room19 = hotel1.findAvailableRoom();
        Room room20 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass24 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2014");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel(10);
        Room room8 = hotel7.findAvailableRoom();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (short) 0);
        Room room12 = hotel11.findAvailableRoom();
        Room room13 = hotel11.findAvailableRoom();
        Room room14 = hotel11.findAvailableRoom();
        Room room15 = hotel11.findAvailableRoom();
        Hotel hotel17 = new Hotel(0);
        hotel17.displayRoomStatus();
        Room room19 = hotel17.findAvailableRoom();
        Room room20 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        hotel17.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) ' ');
        Hotel hotel26 = new Hotel((int) (short) 0);
        Room room27 = hotel26.findAvailableRoom();
        Hotel hotel29 = new Hotel(10);
        Room room30 = hotel29.findAvailableRoom();
        hotel26.reserveRoom(room30);
        hotel24.reserveRoom(room30);
        hotel17.reserveRoom(room30);
        hotel11.reserveRoom(room30);
        hotel7.reserveRoom(room30);
        hotel1.reserveRoom(room30);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Room room41 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        Room room45 = hotel38.findAvailableRoom();
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2015");
        Hotel hotel1 = new Hotel((int) '4');
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        Room room43 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass44 = hotel1.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2016");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room64 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room66 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room66);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2017");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel(1);
        hotel10.displayRoomStatus();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel23.reserveRoom(room41);
        hotel14.reserveRoom(room41);
        hotel10.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        Room room47 = hotel1.findAvailableRoom();
        Hotel hotel49 = new Hotel(10);
        Room room50 = hotel49.findAvailableRoom();
        Room room51 = hotel49.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        hotel53.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        hotel62.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) -1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel71.reserveRoom(room76);
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel71.reserveRoom(room80);
        hotel62.reserveRoom(room80);
        hotel53.reserveRoom(room80);
        hotel49.reserveRoom(room80);
        Room room85 = hotel49.findAvailableRoom();
        hotel1.reserveRoom(room85);
        java.lang.Class<?> wildcardClass87 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2018");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room29 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (short) 100);
        hotel34.displayRoomStatus();
        Room room36 = hotel34.findAvailableRoom();
        hotel1.reserveRoom(room36);
        Room room38 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room38);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2019");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel9.reserveRoom(room46);
        hotel6.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel1.reserveRoom(room55);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass58 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2020");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room8);
        Hotel hotel11 = new Hotel((int) (byte) -1);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        hotel11.reserveRoom(room33);
        hotel11.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Room room42 = hotel39.findAvailableRoom();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        hotel44.displayRoomStatus();
        Room room46 = hotel44.findAvailableRoom();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel44.reserveRoom(room66);
        hotel44.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        hotel72.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel81.reserveRoom(room90);
        hotel72.reserveRoom(room90);
        hotel44.reserveRoom(room90);
        hotel39.reserveRoom(room90);
        hotel11.reserveRoom(room90);
        hotel1.reserveRoom(room90);
        Room room97 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room97);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2021");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        hotel1.reserveRoom(room14);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room20 = hotel1.findAvailableRoom();
        Room room21 = hotel1.findAvailableRoom();
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 1);
        Hotel hotel26 = new Hotel((int) (byte) -1);
        hotel26.displayRoomStatus();
        Room room28 = hotel26.findAvailableRoom();
        Room room29 = hotel26.findAvailableRoom();
        Room room30 = hotel26.findAvailableRoom();
        Room room31 = hotel26.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel33.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel42.reserveRoom(room51);
        hotel33.reserveRoom(room51);
        Hotel hotel55 = new Hotel((int) 'a');
        hotel55.displayRoomStatus();
        Room room57 = hotel55.findAvailableRoom();
        hotel33.reserveRoom(room57);
        hotel33.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (short) 10);
        Room room62 = hotel61.findAvailableRoom();
        hotel33.reserveRoom(room62);
        hotel26.reserveRoom(room62);
        hotel24.reserveRoom(room62);
        hotel1.reserveRoom(room62);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room62);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2022");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2023");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        java.lang.Class<?> wildcardClass12 = hotel1.getClass();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2024");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Room room6 = hotel3.findAvailableRoom();
        Room room7 = hotel3.findAvailableRoom();
        Room room8 = hotel3.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        Hotel hotel32 = new Hotel((int) 'a');
        hotel32.displayRoomStatus();
        Room room34 = hotel32.findAvailableRoom();
        hotel10.reserveRoom(room34);
        hotel10.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (short) 10);
        Room room39 = hotel38.findAvailableRoom();
        hotel10.reserveRoom(room39);
        hotel3.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        hotel1.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (short) 0);
        Room room46 = hotel45.findAvailableRoom();
        Room room47 = hotel45.findAvailableRoom();
        Room room48 = hotel45.findAvailableRoom();
        Room room49 = hotel45.findAvailableRoom();
        Hotel hotel51 = new Hotel(0);
        hotel51.displayRoomStatus();
        Room room53 = hotel51.findAvailableRoom();
        Room room54 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        hotel51.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) ' ');
        Hotel hotel60 = new Hotel((int) (short) 0);
        Room room61 = hotel60.findAvailableRoom();
        Hotel hotel63 = new Hotel(10);
        Room room64 = hotel63.findAvailableRoom();
        hotel60.reserveRoom(room64);
        hotel58.reserveRoom(room64);
        hotel51.reserveRoom(room64);
        hotel45.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        Room room70 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass71 = hotel1.getClass();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2025");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room7);
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Room room13 = hotel10.findAvailableRoom();
        Room room14 = hotel10.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel10.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Room room28 = hotel21.findAvailableRoom();
        Room room29 = hotel21.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (short) 0);
        Room room32 = hotel31.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel38.reserveRoom(room69);
        hotel34.reserveRoom(room69);
        hotel31.reserveRoom(room69);
        hotel21.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        java.lang.Class<?> wildcardClass76 = room69.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2026");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Room room30 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room35 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass36 = room35.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room35);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2027");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        hotel1.reserveRoom(room14);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room20 = hotel1.findAvailableRoom();
        Room room21 = hotel1.findAvailableRoom();
        Room room22 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = room22.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room22);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2028");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Hotel hotel31 = new Hotel(0);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Room room34 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        hotel31.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) ' ');
        Hotel hotel40 = new Hotel((int) (short) 0);
        Room room41 = hotel40.findAvailableRoom();
        Hotel hotel43 = new Hotel(10);
        Room room44 = hotel43.findAvailableRoom();
        hotel40.reserveRoom(room44);
        hotel38.reserveRoom(room44);
        hotel31.reserveRoom(room44);
        hotel1.reserveRoom(room44);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room44);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2029");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room38 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room38);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2030");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Room room6 = hotel3.findAvailableRoom();
        Room room7 = hotel3.findAvailableRoom();
        Room room8 = hotel3.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        Hotel hotel32 = new Hotel((int) 'a');
        hotel32.displayRoomStatus();
        Room room34 = hotel32.findAvailableRoom();
        hotel10.reserveRoom(room34);
        hotel10.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (short) 10);
        Room room39 = hotel38.findAvailableRoom();
        hotel10.reserveRoom(room39);
        hotel3.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        hotel1.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (short) 0);
        Room room46 = hotel45.findAvailableRoom();
        Room room47 = hotel45.findAvailableRoom();
        Room room48 = hotel45.findAvailableRoom();
        Room room49 = hotel45.findAvailableRoom();
        Hotel hotel51 = new Hotel(0);
        hotel51.displayRoomStatus();
        Room room53 = hotel51.findAvailableRoom();
        Room room54 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        hotel51.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) ' ');
        Hotel hotel60 = new Hotel((int) (short) 0);
        Room room61 = hotel60.findAvailableRoom();
        Hotel hotel63 = new Hotel(10);
        Room room64 = hotel63.findAvailableRoom();
        hotel60.reserveRoom(room64);
        hotel58.reserveRoom(room64);
        hotel51.reserveRoom(room64);
        hotel45.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        hotel1.displayRoomStatus();
        Room room71 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room71);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2031");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room61 = hotel1.findAvailableRoom();
        Room room62 = hotel1.findAvailableRoom();
        Room room63 = hotel1.findAvailableRoom();
        Room room64 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room64);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2032");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room39);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2033");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2034");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel(0);
        hotel13.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel13.reserveRoom(room17);
        hotel13.displayRoomStatus();
        Hotel hotel21 = new Hotel(10);
        hotel21.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) 'a');
        hotel24.displayRoomStatus();
        Room room26 = hotel24.findAvailableRoom();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel28.reserveRoom(room55);
        hotel24.reserveRoom(room55);
        hotel21.reserveRoom(room55);
        hotel13.reserveRoom(room55);
        Room room62 = hotel13.findAvailableRoom();
        Hotel hotel64 = new Hotel((int) (short) 10);
        Room room65 = hotel64.findAvailableRoom();
        Room room66 = hotel64.findAvailableRoom();
        hotel13.reserveRoom(room66);
        hotel9.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room66);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2035");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel28.reserveRoom(room55);
        hotel6.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room61 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room61);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2036");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) 'a');
        hotel5.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel5.reserveRoom(room13);
        Room room16 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room16);
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        hotel19.reserveRoom(room46);
        Room room50 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        hotel59.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) -1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel68.reserveRoom(room73);
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel68.reserveRoom(room77);
        hotel59.reserveRoom(room77);
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel81.reserveRoom(room90);
        hotel59.reserveRoom(room90);
        hotel55.reserveRoom(room90);
        hotel53.reserveRoom(room90);
        hotel53.displayRoomStatus();
        hotel53.displayRoomStatus();
        Room room97 = hotel53.findAvailableRoom();
        hotel19.reserveRoom(room97);
        hotel1.reserveRoom(room97);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room97);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2037");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel1.reserveRoom(room9);
        hotel1.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel26.reserveRoom(room57);
        hotel22.reserveRoom(room57);
        hotel13.reserveRoom(room57);
        Room room62 = hotel13.findAvailableRoom();
        Hotel hotel64 = new Hotel((int) (short) 1);
        Hotel hotel66 = new Hotel((int) (short) 0);
        Room room67 = hotel66.findAvailableRoom();
        Hotel hotel69 = new Hotel(10);
        Room room70 = hotel69.findAvailableRoom();
        hotel66.reserveRoom(room70);
        hotel64.reserveRoom(room70);
        Room room73 = hotel64.findAvailableRoom();
        hotel13.reserveRoom(room73);
        Hotel hotel76 = new Hotel(0);
        hotel76.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel76.reserveRoom(room80);
        hotel13.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room80);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2038");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel7.reserveRoom(room16);
        hotel1.reserveRoom(room16);
        Room room19 = hotel1.findAvailableRoom();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel21.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        Hotel hotel34 = new Hotel(1);
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) ' ');
        Hotel hotel44 = new Hotel((int) (short) 0);
        Room room45 = hotel44.findAvailableRoom();
        Hotel hotel47 = new Hotel(10);
        Room room48 = hotel47.findAvailableRoom();
        hotel44.reserveRoom(room48);
        hotel42.reserveRoom(room48);
        Room room51 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        Room room55 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2039");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel3.reserveRoom(room8);
        hotel1.reserveRoom(room8);
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Room room15 = hotel12.findAvailableRoom();
        Room room16 = hotel12.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel12.reserveRoom(room19);
        Room room21 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        hotel25.displayRoomStatus();
        Room room27 = hotel25.findAvailableRoom();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel25.reserveRoom(room47);
        Room room51 = hotel25.findAvailableRoom();
        Room room52 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        hotel25.displayRoomStatus();
        Room room55 = hotel25.findAvailableRoom();
        Hotel hotel57 = new Hotel((int) ' ');
        Hotel hotel59 = new Hotel((int) 'a');
        hotel59.displayRoomStatus();
        Room room61 = hotel59.findAvailableRoom();
        hotel57.reserveRoom(room61);
        hotel25.reserveRoom(room61);
        hotel12.reserveRoom(room61);
        hotel1.reserveRoom(room61);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room61);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2040");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room65 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass66 = room65.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2041");
        Hotel hotel1 = new Hotel((int) (short) 10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass6 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2042");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel(10);
        Room room12 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room12);
        hotel8.displayRoomStatus();
        Hotel hotel16 = new Hotel(10);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        hotel19.displayRoomStatus();
        Room room21 = hotel19.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel23.reserveRoom(room41);
        hotel19.reserveRoom(room41);
        hotel19.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel19.reserveRoom(room56);
        hotel16.reserveRoom(room56);
        Room room60 = hotel16.findAvailableRoom();
        hotel8.reserveRoom(room60);
        hotel1.reserveRoom(room60);
        Room room63 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room63);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2043");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        Hotel hotel32 = new Hotel((int) 'a');
        hotel32.displayRoomStatus();
        Room room34 = hotel32.findAvailableRoom();
        hotel10.reserveRoom(room34);
        hotel1.reserveRoom(room34);
        java.lang.Class<?> wildcardClass37 = room34.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2044");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) 1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel12.reserveRoom(room30);
        hotel8.reserveRoom(room30);
        hotel8.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        hotel8.reserveRoom(room54);
        hotel3.reserveRoom(room54);
        Room room59 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room61 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room61);
        Room room63 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room65 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room65);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2045");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) ' ');
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Room room13 = hotel10.findAvailableRoom();
        Hotel hotel15 = new Hotel(1);
        hotel15.displayRoomStatus();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        hotel19.reserveRoom(room46);
        hotel15.reserveRoom(room46);
        hotel15.displayRoomStatus();
        hotel15.displayRoomStatus();
        Room room53 = hotel15.findAvailableRoom();
        hotel10.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        Room room56 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass58 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2046");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel(10);
        Room room8 = hotel7.findAvailableRoom();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (short) 0);
        Room room12 = hotel11.findAvailableRoom();
        Room room13 = hotel11.findAvailableRoom();
        Room room14 = hotel11.findAvailableRoom();
        Room room15 = hotel11.findAvailableRoom();
        Hotel hotel17 = new Hotel(0);
        hotel17.displayRoomStatus();
        Room room19 = hotel17.findAvailableRoom();
        Room room20 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        hotel17.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) ' ');
        Hotel hotel26 = new Hotel((int) (short) 0);
        Room room27 = hotel26.findAvailableRoom();
        Hotel hotel29 = new Hotel(10);
        Room room30 = hotel29.findAvailableRoom();
        hotel26.reserveRoom(room30);
        hotel24.reserveRoom(room30);
        hotel17.reserveRoom(room30);
        hotel11.reserveRoom(room30);
        hotel7.reserveRoom(room30);
        hotel1.reserveRoom(room30);
        Room room37 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass38 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2047");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (short) 0);
        Room room8 = hotel7.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) 'a');
        hotel10.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel10.reserveRoom(room18);
        hotel10.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel27.reserveRoom(room58);
        hotel23.reserveRoom(room58);
        hotel10.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        hotel1.reserveRoom(room58);
        Room room65 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room65);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2048");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room58 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass61 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2049");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Hotel hotel37 = new Hotel((int) 'a');
        hotel37.displayRoomStatus();
        Room room39 = hotel37.findAvailableRoom();
        hotel15.reserveRoom(room39);
        Room room41 = hotel15.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) 'a');
        hotel43.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel43.reserveRoom(room51);
        Room room54 = hotel43.findAvailableRoom();
        Room room55 = hotel43.findAvailableRoom();
        hotel15.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        java.lang.Class<?> wildcardClass58 = room55.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2050");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        Hotel hotel48 = new Hotel((-1));
        Hotel hotel50 = new Hotel((int) (byte) -1);
        hotel50.displayRoomStatus();
        Room room52 = hotel50.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        hotel54.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel63.reserveRoom(room72);
        hotel54.reserveRoom(room72);
        hotel50.reserveRoom(room72);
        hotel48.reserveRoom(room72);
        Hotel hotel78 = new Hotel((int) (byte) 10);
        hotel78.displayRoomStatus();
        hotel78.displayRoomStatus();
        Room room81 = hotel78.findAvailableRoom();
        hotel48.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        Room room84 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room84);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2051");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Room room14 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Room room17 = hotel11.findAvailableRoom();
        hotel1.reserveRoom(room17);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2052");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room7);
        Room room9 = hotel1.findAvailableRoom();
        Room room10 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2053");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel(0);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Room room12 = hotel9.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Room room35 = hotel14.findAvailableRoom();
        Room room36 = hotel14.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Room room41 = hotel38.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        hotel43.displayRoomStatus();
        Room room45 = hotel43.findAvailableRoom();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        hotel47.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel56.reserveRoom(room61);
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel56.reserveRoom(room65);
        hotel47.reserveRoom(room65);
        hotel43.reserveRoom(room65);
        hotel43.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) -1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel71.reserveRoom(room76);
        hotel71.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) -1);
        Room room81 = hotel80.findAvailableRoom();
        hotel80.displayRoomStatus();
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel80.reserveRoom(room85);
        Hotel hotel88 = new Hotel((int) (byte) 1);
        Room room89 = hotel88.findAvailableRoom();
        hotel80.reserveRoom(room89);
        hotel71.reserveRoom(room89);
        hotel43.reserveRoom(room89);
        hotel38.reserveRoom(room89);
        hotel14.reserveRoom(room89);
        hotel9.reserveRoom(room89);
        hotel1.reserveRoom(room89);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room89);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2054");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 10);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(0);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel17 = new Hotel(10);
        Room room18 = hotel17.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        hotel20.displayRoomStatus();
        Room room22 = hotel20.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        hotel24.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel24.reserveRoom(room42);
        hotel20.reserveRoom(room42);
        hotel20.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel20.reserveRoom(room57);
        hotel17.reserveRoom(room57);
        hotel12.reserveRoom(room57);
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel12.reserveRoom(room66);
        hotel9.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        java.lang.Class<?> wildcardClass70 = room66.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2055");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Room room8 = hotel1.findAvailableRoom();
        Hotel hotel10 = new Hotel(10);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Hotel hotel14 = new Hotel((-1));
        Hotel hotel16 = new Hotel(1);
        hotel16.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        hotel19.displayRoomStatus();
        Room room21 = hotel19.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel23.reserveRoom(room41);
        hotel19.reserveRoom(room41);
        hotel19.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel19.reserveRoom(room56);
        Hotel hotel60 = new Hotel(0);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Room room65 = hotel62.findAvailableRoom();
        hotel60.reserveRoom(room65);
        hotel19.reserveRoom(room65);
        hotel16.reserveRoom(room65);
        hotel14.reserveRoom(room65);
        hotel10.reserveRoom(room65);
        hotel1.reserveRoom(room65);
        hotel1.displayRoomStatus();
        Hotel hotel74 = new Hotel(0);
        hotel74.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel74.reserveRoom(room78);
        hotel74.displayRoomStatus();
        Hotel hotel82 = new Hotel((int) (short) 0);
        Room room83 = hotel82.findAvailableRoom();
        Hotel hotel85 = new Hotel(10);
        Room room86 = hotel85.findAvailableRoom();
        hotel82.reserveRoom(room86);
        hotel74.reserveRoom(room86);
        Room room89 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Room room91 = hotel74.findAvailableRoom();
        Room room92 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Hotel hotel95 = new Hotel((int) 'a');
        hotel95.displayRoomStatus();
        Room room97 = hotel95.findAvailableRoom();
        hotel74.reserveRoom(room97);
        hotel1.reserveRoom(room97);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNull(room89);
        org.junit.Assert.assertNull(room91);
        org.junit.Assert.assertNull(room92);
        org.junit.Assert.assertNotNull(room97);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2056");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room61 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room61);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2057");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) ' ');
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel4.reserveRoom(room10);
        Room room13 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room13);
        Hotel hotel16 = new Hotel((int) 'a');
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel20.reserveRoom(room47);
        hotel16.reserveRoom(room47);
        hotel1.reserveRoom(room47);
        Hotel hotel54 = new Hotel((int) '4');
        Hotel hotel56 = new Hotel(0);
        Room room57 = hotel56.findAvailableRoom();
        Hotel hotel59 = new Hotel((int) ' ');
        Hotel hotel61 = new Hotel((int) (short) 0);
        Room room62 = hotel61.findAvailableRoom();
        Hotel hotel64 = new Hotel(10);
        Room room65 = hotel64.findAvailableRoom();
        hotel61.reserveRoom(room65);
        hotel59.reserveRoom(room65);
        Room room68 = hotel59.findAvailableRoom();
        hotel56.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) 'a');
        hotel71.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) -1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel74.reserveRoom(room79);
        hotel71.reserveRoom(room79);
        Room room82 = hotel71.findAvailableRoom();
        Room room83 = hotel71.findAvailableRoom();
        Room room84 = hotel71.findAvailableRoom();
        hotel56.reserveRoom(room84);
        hotel54.reserveRoom(room84);
        hotel1.reserveRoom(room84);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass89 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2058");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) 'a');
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (short) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel(0);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Room room37 = hotel34.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel28.reserveRoom(room37);
        hotel1.reserveRoom(room37);
        java.lang.Class<?> wildcardClass41 = room37.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2059");
        Hotel hotel1 = new Hotel((int) '#');
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel3.displayRoomStatus();
        hotel3.displayRoomStatus();
        Room room31 = hotel3.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        hotel33.displayRoomStatus();
        Room room35 = hotel33.findAvailableRoom();
        Room room36 = hotel33.findAvailableRoom();
        Hotel hotel38 = new Hotel(1);
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel42.reserveRoom(room69);
        hotel38.reserveRoom(room69);
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        Room room76 = hotel38.findAvailableRoom();
        hotel33.reserveRoom(room76);
        Room room78 = hotel33.findAvailableRoom();
        hotel3.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        Room room81 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass82 = hotel1.getClass();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2060");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2061");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        Room room51 = hotel1.findAvailableRoom();
        Room room52 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room54 = hotel1.findAvailableRoom();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        hotel56.displayRoomStatus();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) 'a');
        hotel60.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel60.reserveRoom(room68);
        Room room71 = hotel60.findAvailableRoom();
        hotel56.reserveRoom(room71);
        Room room73 = hotel56.findAvailableRoom();
        Room room74 = hotel56.findAvailableRoom();
        hotel1.reserveRoom(room74);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room74);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2062");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Room room30 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass35 = room34.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2063");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (short) 0);
        Room room6 = hotel5.findAvailableRoom();
        Room room7 = hotel5.findAvailableRoom();
        Room room8 = hotel5.findAvailableRoom();
        Room room9 = hotel5.findAvailableRoom();
        Hotel hotel11 = new Hotel(0);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Room room14 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) ' ');
        Hotel hotel20 = new Hotel((int) (short) 0);
        Room room21 = hotel20.findAvailableRoom();
        Hotel hotel23 = new Hotel(10);
        Room room24 = hotel23.findAvailableRoom();
        hotel20.reserveRoom(room24);
        hotel18.reserveRoom(room24);
        hotel11.reserveRoom(room24);
        hotel5.reserveRoom(room24);
        hotel1.reserveRoom(room24);
        Room room30 = hotel1.findAvailableRoom();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel1.reserveRoom(room33);
        Room room35 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room35);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2064");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (short) 0);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Room room17 = hotel14.findAvailableRoom();
        Hotel hotel19 = new Hotel(1);
        hotel19.displayRoomStatus();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel19.reserveRoom(room50);
        hotel19.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Room room60 = hotel57.findAvailableRoom();
        Room room61 = hotel57.findAvailableRoom();
        hotel19.reserveRoom(room61);
        hotel14.reserveRoom(room61);
        hotel1.reserveRoom(room61);
        Room room65 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room65);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2065");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel(10);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel(0);
        Room room12 = hotel11.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) ' ');
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel(10);
        Room room20 = hotel19.findAvailableRoom();
        hotel16.reserveRoom(room20);
        hotel14.reserveRoom(room20);
        Room room23 = hotel14.findAvailableRoom();
        hotel11.reserveRoom(room23);
        hotel7.reserveRoom(room23);
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (short) 1);
        Hotel hotel31 = new Hotel((int) (byte) -1);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Room room34 = hotel31.findAvailableRoom();
        Room room35 = hotel31.findAvailableRoom();
        Room room36 = hotel31.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        Hotel hotel60 = new Hotel((int) 'a');
        hotel60.displayRoomStatus();
        Room room62 = hotel60.findAvailableRoom();
        hotel38.reserveRoom(room62);
        hotel38.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (short) 10);
        Room room67 = hotel66.findAvailableRoom();
        hotel38.reserveRoom(room67);
        hotel31.reserveRoom(room67);
        hotel29.reserveRoom(room67);
        hotel7.reserveRoom(room67);
        hotel1.reserveRoom(room67);
        Hotel hotel74 = new Hotel((int) (short) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Room room77 = hotel74.findAvailableRoom();
        Hotel hotel79 = new Hotel((int) (byte) -1);
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        hotel79.reserveRoom(room86);
        hotel74.reserveRoom(room86);
        Room room90 = hotel74.findAvailableRoom();
        hotel1.reserveRoom(room90);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2066");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel13.reserveRoom(room44);
        hotel9.reserveRoom(room44);
        hotel1.reserveRoom(room44);
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room58 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass59 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2067");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room24 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        hotel27.displayRoomStatus();
        Room room29 = hotel27.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        hotel31.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel40.reserveRoom(room49);
        hotel31.reserveRoom(room49);
        hotel27.reserveRoom(room49);
        Room room53 = hotel27.findAvailableRoom();
        Room room54 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        hotel27.displayRoomStatus();
        Room room57 = hotel27.findAvailableRoom();
        Hotel hotel59 = new Hotel((int) ' ');
        Hotel hotel61 = new Hotel((int) 'a');
        hotel61.displayRoomStatus();
        Room room63 = hotel61.findAvailableRoom();
        hotel59.reserveRoom(room63);
        hotel27.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        java.lang.Class<?> wildcardClass67 = room63.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2068");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        hotel5.displayRoomStatus();
        Room room7 = hotel5.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel9.reserveRoom(room14);
        hotel9.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel18.reserveRoom(room27);
        hotel9.reserveRoom(room27);
        hotel5.reserveRoom(room27);
        Room room31 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        Room room34 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Room room45 = hotel42.findAvailableRoom();
        hotel39.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Room room51 = hotel48.findAvailableRoom();
        Room room52 = hotel48.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel48.reserveRoom(room55);
        hotel39.reserveRoom(room55);
        hotel5.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room55);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2069");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Hotel hotel27 = new Hotel(10);
        Room room28 = hotel27.findAvailableRoom();
        hotel24.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room31 = hotel1.findAvailableRoom();
        Room room32 = hotel1.findAvailableRoom();
        Hotel hotel34 = new Hotel(1);
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        Room room42 = hotel34.findAvailableRoom();
        hotel1.reserveRoom(room42);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room42);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2070");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        hotel31.reserveRoom(room53);
        hotel31.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel59.reserveRoom(room68);
        hotel31.reserveRoom(room68);
        hotel1.reserveRoom(room68);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room74 = hotel1.findAvailableRoom();
        Room room75 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room77 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNull(room77);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2071");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel(1);
        hotel7.displayRoomStatus();
        Hotel hotel10 = new Hotel(10);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        hotel30.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel39.reserveRoom(room48);
        hotel30.reserveRoom(room48);
        hotel21.reserveRoom(room48);
        hotel13.reserveRoom(room48);
        hotel10.reserveRoom(room48);
        hotel7.reserveRoom(room48);
        hotel1.reserveRoom(room48);
        Room room56 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room58 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room58);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2072");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Room room27 = hotel6.findAvailableRoom();
        Room room28 = hotel6.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Room room33 = hotel30.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        hotel35.displayRoomStatus();
        Room room37 = hotel35.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel35.reserveRoom(room57);
        hotel35.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel63.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel63.reserveRoom(room81);
        hotel35.reserveRoom(room81);
        hotel30.reserveRoom(room81);
        hotel6.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        Hotel hotel89 = new Hotel(0);
        hotel89.displayRoomStatus();
        hotel89.displayRoomStatus();
        Hotel hotel93 = new Hotel((int) ' ');
        Room room94 = hotel93.findAvailableRoom();
        hotel89.reserveRoom(room94);
        hotel1.reserveRoom(room94);
        Room room97 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass99 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room94);
        org.junit.Assert.assertNull(room97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2073");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Hotel hotel11 = new Hotel((int) (byte) -1);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        hotel11.reserveRoom(room33);
        hotel11.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel11.reserveRoom(room57);
        hotel9.reserveRoom(room57);
        hotel1.reserveRoom(room57);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2074");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) 'a');
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room25);
        Room room27 = hotel1.findAvailableRoom();
        Hotel hotel29 = new Hotel((int) 'a');
        hotel29.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel29.reserveRoom(room37);
        Room room40 = hotel29.findAvailableRoom();
        Room room41 = hotel29.findAvailableRoom();
        hotel1.reserveRoom(room41);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass45 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2075");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) 'a');
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel8.reserveRoom(room17);
        Room room19 = hotel8.findAvailableRoom();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel8.reserveRoom(room30);
        hotel6.reserveRoom(room30);
        Room room34 = hotel6.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        hotel44.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        hotel53.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel62.reserveRoom(room71);
        hotel53.reserveRoom(room71);
        hotel44.reserveRoom(room71);
        hotel36.reserveRoom(room71);
        hotel6.reserveRoom(room71);
        Room room77 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room77);
        java.lang.Class<?> wildcardClass79 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2076");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room43 = hotel1.findAvailableRoom();
        Room room44 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass45 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2077");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room46 = hotel1.findAvailableRoom();
        Hotel hotel48 = new Hotel(1);
        hotel48.displayRoomStatus();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        hotel52.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel70.reserveRoom(room79);
        hotel61.reserveRoom(room79);
        hotel52.reserveRoom(room79);
        hotel48.reserveRoom(room79);
        hotel48.displayRoomStatus();
        hotel48.displayRoomStatus();
        Room room86 = hotel48.findAvailableRoom();
        Hotel hotel88 = new Hotel(0);
        hotel88.displayRoomStatus();
        Hotel hotel91 = new Hotel((int) (byte) 1);
        Room room92 = hotel91.findAvailableRoom();
        hotel88.reserveRoom(room92);
        hotel48.reserveRoom(room92);
        hotel1.reserveRoom(room92);
        java.lang.Class<?> wildcardClass96 = room92.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2078");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (short) 0);
        Room room12 = hotel11.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel18.reserveRoom(room36);
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel40.reserveRoom(room49);
        hotel18.reserveRoom(room49);
        hotel14.reserveRoom(room49);
        hotel11.reserveRoom(room49);
        hotel1.reserveRoom(room49);
        java.lang.Class<?> wildcardClass55 = room49.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2079");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room12 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room12);
        hotel1.displayRoomStatus();
        Room room15 = hotel1.findAvailableRoom();
        Room room16 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room16);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2080");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(0);
        hotel6.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        Room room14 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass15 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2081");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) 'a');
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel9.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        hotel1.displayRoomStatus();
        Hotel hotel23 = new Hotel(10);
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        Room room26 = hotel23.findAvailableRoom();
        Hotel hotel28 = new Hotel((int) (short) 1);
        hotel28.displayRoomStatus();
        hotel28.displayRoomStatus();
        hotel28.displayRoomStatus();
        Room room32 = hotel28.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        hotel43.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel52.reserveRoom(room61);
        hotel43.reserveRoom(room61);
        hotel34.reserveRoom(room61);
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (short) 0);
        Room room70 = hotel69.findAvailableRoom();
        Hotel hotel72 = new Hotel(10);
        Room room73 = hotel72.findAvailableRoom();
        hotel69.reserveRoom(room73);
        hotel34.reserveRoom(room73);
        hotel28.reserveRoom(room73);
        hotel23.reserveRoom(room73);
        hotel1.reserveRoom(room73);
        java.lang.Class<?> wildcardClass79 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2082");
        Hotel hotel1 = new Hotel((int) 'a');
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Hotel hotel5 = new Hotel((int) (byte) -1);
        hotel5.displayRoomStatus();
        Room room7 = hotel5.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel9.reserveRoom(room14);
        hotel9.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel18.reserveRoom(room27);
        hotel9.reserveRoom(room27);
        hotel5.reserveRoom(room27);
        hotel5.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel33.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel42.reserveRoom(room51);
        hotel33.reserveRoom(room51);
        hotel5.reserveRoom(room51);
        hotel3.reserveRoom(room51);
        hotel1.reserveRoom(room51);
        java.lang.Class<?> wildcardClass57 = hotel1.getClass();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2083");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) ' ');
        Hotel hotel28 = new Hotel((int) (short) 0);
        Room room29 = hotel28.findAvailableRoom();
        Hotel hotel31 = new Hotel(10);
        Room room32 = hotel31.findAvailableRoom();
        hotel28.reserveRoom(room32);
        hotel26.reserveRoom(room32);
        Room room35 = hotel26.findAvailableRoom();
        hotel1.reserveRoom(room35);
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        hotel40.displayRoomStatus();
        Room room42 = hotel40.findAvailableRoom();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        hotel44.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel53.reserveRoom(room62);
        hotel44.reserveRoom(room62);
        hotel40.reserveRoom(room62);
        hotel40.displayRoomStatus();
        hotel40.displayRoomStatus();
        Room room68 = hotel40.findAvailableRoom();
        Room room69 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Room room78 = hotel75.findAvailableRoom();
        hotel72.reserveRoom(room78);
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Room room84 = hotel81.findAvailableRoom();
        Room room85 = hotel81.findAvailableRoom();
        Hotel hotel87 = new Hotel((int) (byte) 1);
        Room room88 = hotel87.findAvailableRoom();
        hotel81.reserveRoom(room88);
        hotel72.reserveRoom(room88);
        hotel40.reserveRoom(room88);
        hotel1.reserveRoom(room88);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room88);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2084");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Hotel hotel27 = new Hotel(10);
        Room room28 = hotel27.findAvailableRoom();
        hotel24.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        hotel45.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel54.reserveRoom(room63);
        hotel45.reserveRoom(room63);
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel67.reserveRoom(room76);
        hotel45.reserveRoom(room76);
        hotel41.reserveRoom(room76);
        hotel32.reserveRoom(room76);
        Room room81 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel84.displayRoomStatus();
        Room room87 = hotel84.findAvailableRoom();
        hotel84.displayRoomStatus();
        Room room89 = hotel84.findAvailableRoom();
        hotel32.reserveRoom(room89);
        hotel1.reserveRoom(room89);
        java.lang.Class<?> wildcardClass92 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2085");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room43 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass46 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2086");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel28.reserveRoom(room55);
        hotel6.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Room room65 = hotel62.findAvailableRoom();
        Room room66 = hotel62.findAvailableRoom();
        Room room67 = hotel62.findAvailableRoom();
        Room room68 = hotel62.findAvailableRoom();
        hotel1.reserveRoom(room68);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room68);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2087");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) 'a');
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room8);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2088");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room30 = hotel1.findAvailableRoom();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2089");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room52 = hotel1.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Room room57 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Room room60 = hotel54.findAvailableRoom();
        hotel1.reserveRoom(room60);
        Room room62 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass64 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2090");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel4.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel4.reserveRoom(room31);
        Hotel hotel36 = new Hotel((int) (short) 0);
        hotel36.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel39.reserveRoom(room66);
        hotel36.reserveRoom(room66);
        hotel4.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        Room room73 = hotel1.findAvailableRoom();
        Room room74 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room74);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2091");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Hotel hotel3 = new Hotel(100);
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        hotel27.reserveRoom(room54);
        hotel5.reserveRoom(room54);
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Room room63 = hotel60.findAvailableRoom();
        hotel5.reserveRoom(room63);
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        hotel5.reserveRoom(room74);
        hotel3.reserveRoom(room74);
        hotel1.reserveRoom(room74);
        hotel1.displayRoomStatus();
        Room room80 = hotel1.findAvailableRoom();
        Room room81 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass82 = room81.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNull(room81);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2092");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass10 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2093");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room12 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room12);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2094");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        Room room50 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        hotel53.displayRoomStatus();
        Room room55 = hotel53.findAvailableRoom();
        hotel1.reserveRoom(room55);
        Room room57 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass58 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2095");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room64 = hotel1.findAvailableRoom();
        Room room65 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass66 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2096");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        hotel27.reserveRoom(room54);
        hotel5.reserveRoom(room54);
        hotel1.reserveRoom(room54);
        Hotel hotel61 = new Hotel((int) ' ');
        Hotel hotel63 = new Hotel((int) 'a');
        hotel63.displayRoomStatus();
        Room room65 = hotel63.findAvailableRoom();
        hotel61.reserveRoom(room65);
        hotel1.reserveRoom(room65);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room65);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2097");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel9.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        hotel1.displayRoomStatus();
        Room room61 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2098");
        Hotel hotel1 = new Hotel((int) (short) -1);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (short) 0);
        hotel5.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel8.reserveRoom(room35);
        hotel5.reserveRoom(room35);
        hotel1.reserveRoom(room35);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2099");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        Room room40 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room42);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2100");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2101");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel22 = new Hotel(0);
        hotel22.displayRoomStatus();
        Room room24 = hotel22.findAvailableRoom();
        Room room25 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Room room31 = hotel28.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        hotel33.displayRoomStatus();
        Room room35 = hotel33.findAvailableRoom();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel33.reserveRoom(room55);
        hotel33.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel70.reserveRoom(room79);
        hotel61.reserveRoom(room79);
        hotel33.reserveRoom(room79);
        hotel28.reserveRoom(room79);
        Room room84 = hotel28.findAvailableRoom();
        hotel22.reserveRoom(room84);
        hotel22.displayRoomStatus();
        hotel22.displayRoomStatus();
        hotel22.displayRoomStatus();
        Hotel hotel90 = new Hotel((int) 'a');
        hotel90.displayRoomStatus();
        Room room92 = hotel90.findAvailableRoom();
        hotel22.reserveRoom(room92);
        hotel1.reserveRoom(room92);
        Room room95 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNull(room95);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2102");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel9.reserveRoom(room46);
        hotel6.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel1.reserveRoom(room55);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room57);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2103");
        Hotel hotel1 = new Hotel((-1));
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel(0);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        hotel4.displayRoomStatus();
        Hotel hotel9 = new Hotel(0);
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel4.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        Room room23 = hotel18.findAvailableRoom();
        Hotel hotel25 = new Hotel(10);
        Room room26 = hotel25.findAvailableRoom();
        hotel18.reserveRoom(room26);
        hotel18.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel58.reserveRoom(room67);
        hotel36.reserveRoom(room67);
        hotel32.reserveRoom(room67);
        hotel30.reserveRoom(room67);
        hotel30.displayRoomStatus();
        hotel30.displayRoomStatus();
        Room room74 = hotel30.findAvailableRoom();
        Room room75 = hotel30.findAvailableRoom();
        hotel18.reserveRoom(room75);
        hotel1.reserveRoom(room75);
        Room room78 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room78);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2104");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        Room room44 = hotel33.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel33.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Hotel hotel60 = new Hotel(10);
        Room room61 = hotel60.findAvailableRoom();
        Room room62 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel65 = new Hotel(10);
        hotel65.displayRoomStatus();
        Room room67 = hotel65.findAvailableRoom();
        Hotel hotel69 = new Hotel(0);
        hotel69.displayRoomStatus();
        Room room71 = hotel69.findAvailableRoom();
        Room room72 = hotel69.findAvailableRoom();
        Room room73 = hotel69.findAvailableRoom();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        hotel75.displayRoomStatus();
        Room room77 = hotel75.findAvailableRoom();
        Room room78 = hotel75.findAvailableRoom();
        Hotel hotel80 = new Hotel((int) (byte) -1);
        Room room81 = hotel80.findAvailableRoom();
        hotel80.displayRoomStatus();
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel80.reserveRoom(room85);
        hotel75.reserveRoom(room85);
        hotel69.reserveRoom(room85);
        hotel65.reserveRoom(room85);
        hotel60.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        Room room92 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNull(room92);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2105");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) 'a');
        hotel11.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel11.reserveRoom(room19);
        Room room22 = hotel11.findAvailableRoom();
        Room room23 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Room room30 = hotel27.findAvailableRoom();
        hotel1.reserveRoom(room30);
        hotel1.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) 'a');
        hotel34.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel34.reserveRoom(room42);
        hotel34.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        Hotel hotel73 = new Hotel((int) (byte) -1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel73.reserveRoom(room78);
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel73.reserveRoom(room82);
        hotel51.reserveRoom(room82);
        hotel47.reserveRoom(room82);
        hotel34.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        Room room88 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass89 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2106");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        hotel1.displayRoomStatus();
        Room room23 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room23);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2107");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room32 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room35 = hotel1.findAvailableRoom();
        Room room36 = hotel1.findAvailableRoom();
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room38);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2108");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass40 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2109");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel8.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        Hotel hotel45 = new Hotel(0);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        hotel45.displayRoomStatus();
        Hotel hotel50 = new Hotel(0);
        hotel50.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel50.reserveRoom(room54);
        hotel45.reserveRoom(room54);
        hotel1.reserveRoom(room54);
        Room room58 = hotel1.findAvailableRoom();
        Hotel hotel60 = new Hotel((int) (short) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Room room63 = hotel60.findAvailableRoom();
        hotel1.reserveRoom(room63);
        java.lang.Class<?> wildcardClass65 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2110");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room32 = hotel1.findAvailableRoom();
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel38 = new Hotel(0);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        Hotel hotel43 = new Hotel(0);
        hotel43.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel43.reserveRoom(room47);
        hotel38.reserveRoom(room47);
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        hotel53.displayRoomStatus();
        Room room55 = hotel53.findAvailableRoom();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        hotel57.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) -1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel66.reserveRoom(room71);
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel66.reserveRoom(room75);
        hotel57.reserveRoom(room75);
        hotel53.reserveRoom(room75);
        Room room79 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel82 = new Hotel((int) ' ');
        Hotel hotel84 = new Hotel((int) 'a');
        hotel84.displayRoomStatus();
        Room room86 = hotel84.findAvailableRoom();
        hotel82.reserveRoom(room86);
        hotel53.reserveRoom(room86);
        hotel38.reserveRoom(room86);
        hotel1.reserveRoom(room86);
        Room room91 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room79);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNull(room91);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2111");
        Hotel hotel1 = new Hotel((int) '#');
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel(0);
        hotel5.displayRoomStatus();
        Room room7 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel11.reserveRoom(room20);
        hotel5.reserveRoom(room20);
        Room room23 = hotel5.findAvailableRoom();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel25.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2112");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Hotel hotel31 = new Hotel(0);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Room room34 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        hotel31.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) ' ');
        Hotel hotel40 = new Hotel((int) (short) 0);
        Room room41 = hotel40.findAvailableRoom();
        Hotel hotel43 = new Hotel(10);
        Room room44 = hotel43.findAvailableRoom();
        hotel40.reserveRoom(room44);
        hotel38.reserveRoom(room44);
        hotel31.reserveRoom(room44);
        hotel1.reserveRoom(room44);
        Hotel hotel50 = new Hotel(10);
        Room room51 = hotel50.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        hotel53.displayRoomStatus();
        Room room55 = hotel53.findAvailableRoom();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        hotel57.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) -1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel66.reserveRoom(room71);
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel66.reserveRoom(room75);
        hotel57.reserveRoom(room75);
        hotel53.reserveRoom(room75);
        hotel53.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel81.reserveRoom(room90);
        hotel53.reserveRoom(room90);
        hotel50.reserveRoom(room90);
        Room room94 = hotel50.findAvailableRoom();
        hotel1.reserveRoom(room94);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room94);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2113");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room8);
        hotel1.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (short) 0);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Hotel hotel19 = new Hotel(0);
        hotel19.displayRoomStatus();
        Room room21 = hotel19.findAvailableRoom();
        Room room22 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        hotel19.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) ' ');
        Hotel hotel28 = new Hotel((int) (short) 0);
        Room room29 = hotel28.findAvailableRoom();
        Hotel hotel31 = new Hotel(10);
        Room room32 = hotel31.findAvailableRoom();
        hotel28.reserveRoom(room32);
        hotel26.reserveRoom(room32);
        hotel19.reserveRoom(room32);
        hotel19.displayRoomStatus();
        Hotel hotel38 = new Hotel((-1));
        Hotel hotel40 = new Hotel((int) (byte) -1);
        hotel40.displayRoomStatus();
        Room room42 = hotel40.findAvailableRoom();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        hotel44.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel53.reserveRoom(room62);
        hotel44.reserveRoom(room62);
        hotel40.reserveRoom(room62);
        hotel38.reserveRoom(room62);
        Hotel hotel68 = new Hotel(0);
        hotel68.displayRoomStatus();
        Room room70 = hotel68.findAvailableRoom();
        Room room71 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        hotel68.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) ' ');
        Hotel hotel77 = new Hotel((int) (short) 0);
        Room room78 = hotel77.findAvailableRoom();
        Hotel hotel80 = new Hotel(10);
        Room room81 = hotel80.findAvailableRoom();
        hotel77.reserveRoom(room81);
        hotel75.reserveRoom(room81);
        hotel68.reserveRoom(room81);
        hotel38.reserveRoom(room81);
        hotel19.reserveRoom(room81);
        hotel12.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room91 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room91);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2114");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) 1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Room room9 = hotel6.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        hotel11.reserveRoom(room33);
        hotel11.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel11.reserveRoom(room57);
        hotel6.reserveRoom(room57);
        Room room62 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Room room64 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Room room70 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        hotel67.displayRoomStatus();
        hotel67.displayRoomStatus();
        Room room74 = hotel67.findAvailableRoom();
        hotel6.reserveRoom(room74);
        hotel1.reserveRoom(room74);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass79 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2115");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((-1));
        hotel4.displayRoomStatus();
        Hotel hotel7 = new Hotel(0);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Hotel hotel12 = new Hotel(0);
        hotel12.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel12.reserveRoom(room16);
        hotel7.reserveRoom(room16);
        hotel4.reserveRoom(room16);
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        hotel21.displayRoomStatus();
        hotel21.displayRoomStatus();
        Room room26 = hotel21.findAvailableRoom();
        Hotel hotel28 = new Hotel(10);
        Room room29 = hotel28.findAvailableRoom();
        hotel21.reserveRoom(room29);
        hotel21.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        Hotel hotel69 = new Hotel((int) (byte) 1);
        Room room70 = hotel69.findAvailableRoom();
        hotel61.reserveRoom(room70);
        hotel39.reserveRoom(room70);
        hotel35.reserveRoom(room70);
        hotel33.reserveRoom(room70);
        hotel33.displayRoomStatus();
        hotel33.displayRoomStatus();
        Room room77 = hotel33.findAvailableRoom();
        Room room78 = hotel33.findAvailableRoom();
        hotel21.reserveRoom(room78);
        hotel4.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        Hotel hotel83 = new Hotel((int) (short) 10);
        Hotel hotel85 = new Hotel((int) (short) 10);
        Room room86 = hotel85.findAvailableRoom();
        hotel83.reserveRoom(room86);
        hotel1.reserveRoom(room86);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room86);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2116");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Hotel hotel37 = new Hotel((int) 'a');
        hotel37.displayRoomStatus();
        Room room39 = hotel37.findAvailableRoom();
        hotel15.reserveRoom(room39);
        Room room41 = hotel15.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) 'a');
        hotel43.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel43.reserveRoom(room51);
        Room room54 = hotel43.findAvailableRoom();
        Room room55 = hotel43.findAvailableRoom();
        hotel15.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        hotel1.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (short) 1);
        Hotel hotel62 = new Hotel((int) (short) 0);
        Room room63 = hotel62.findAvailableRoom();
        Hotel hotel65 = new Hotel(10);
        Room room66 = hotel65.findAvailableRoom();
        hotel62.reserveRoom(room66);
        hotel60.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        Room room70 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room70);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2117");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2118");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room8);
        Hotel hotel11 = new Hotel((int) 'a');
        hotel11.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel11.reserveRoom(room19);
        hotel11.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel28.reserveRoom(room59);
        hotel24.reserveRoom(room59);
        hotel11.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        java.lang.Class<?> wildcardClass65 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2119");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) 'a');
        hotel4.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel4.reserveRoom(room12);
        hotel4.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel21.reserveRoom(room52);
        hotel17.reserveRoom(room52);
        hotel4.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room58 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room58);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2120");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room64 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room64);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2121");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel20.reserveRoom(room38);
        hotel11.reserveRoom(room38);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Room room44 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        Hotel hotel70 = new Hotel((int) 'a');
        hotel70.displayRoomStatus();
        Room room72 = hotel70.findAvailableRoom();
        hotel48.reserveRoom(room72);
        hotel11.reserveRoom(room72);
        hotel1.reserveRoom(room72);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room72);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2122");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        hotel1.displayRoomStatus();
        Room room13 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass14 = hotel1.getClass();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2123");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) 'a');
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) 'a');
        hotel13.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel13.reserveRoom(room21);
        Room room24 = hotel13.findAvailableRoom();
        Room room25 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room25);
        hotel6.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Hotel hotel30 = new Hotel((int) 'a');
        hotel30.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel30.reserveRoom(room38);
        hotel30.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        hotel47.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel56.reserveRoom(room61);
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel56.reserveRoom(room65);
        hotel47.reserveRoom(room65);
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel69.reserveRoom(room78);
        hotel47.reserveRoom(room78);
        hotel43.reserveRoom(room78);
        hotel30.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room78);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2124");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel(10);
        Room room8 = hotel7.findAvailableRoom();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (short) 0);
        Room room12 = hotel11.findAvailableRoom();
        Room room13 = hotel11.findAvailableRoom();
        Room room14 = hotel11.findAvailableRoom();
        Room room15 = hotel11.findAvailableRoom();
        Hotel hotel17 = new Hotel(0);
        hotel17.displayRoomStatus();
        Room room19 = hotel17.findAvailableRoom();
        Room room20 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        hotel17.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) ' ');
        Hotel hotel26 = new Hotel((int) (short) 0);
        Room room27 = hotel26.findAvailableRoom();
        Hotel hotel29 = new Hotel(10);
        Room room30 = hotel29.findAvailableRoom();
        hotel26.reserveRoom(room30);
        hotel24.reserveRoom(room30);
        hotel17.reserveRoom(room30);
        hotel11.reserveRoom(room30);
        hotel7.reserveRoom(room30);
        hotel1.reserveRoom(room30);
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        Hotel hotel40 = new Hotel((int) '4');
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        Hotel hotel68 = new Hotel((int) (byte) -1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel68.reserveRoom(room73);
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel68.reserveRoom(room77);
        hotel46.reserveRoom(room77);
        hotel42.reserveRoom(room77);
        hotel40.reserveRoom(room77);
        Room room82 = hotel40.findAvailableRoom();
        hotel1.reserveRoom(room82);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room82);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2125");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        Room room63 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room67 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room69 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room69);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2126");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        hotel42.displayRoomStatus();
        Room room44 = hotel42.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        hotel42.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        Room room69 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room71 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room73 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room73);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2127");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room14 = hotel1.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) ' ');
        Hotel hotel18 = new Hotel((int) 'a');
        hotel18.displayRoomStatus();
        Room room20 = hotel18.findAvailableRoom();
        hotel16.reserveRoom(room20);
        Hotel hotel23 = new Hotel(0);
        hotel23.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel23.reserveRoom(room27);
        Room room29 = hotel23.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel35.reserveRoom(room66);
        hotel31.reserveRoom(room66);
        hotel23.reserveRoom(room66);
        hotel16.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        Room room73 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room73);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2128");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel3.reserveRoom(room8);
        hotel1.reserveRoom(room8);
        Hotel hotel12 = new Hotel((int) (short) 1);
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Room room16 = hotel12.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        hotel18.reserveRoom(room45);
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (short) 0);
        Room room54 = hotel53.findAvailableRoom();
        Hotel hotel56 = new Hotel(10);
        Room room57 = hotel56.findAvailableRoom();
        hotel53.reserveRoom(room57);
        hotel18.reserveRoom(room57);
        hotel12.reserveRoom(room57);
        hotel1.reserveRoom(room57);
        Room room62 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room64 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room64);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2129");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Room room65 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Room room67 = hotel62.findAvailableRoom();
        Room room68 = hotel62.findAvailableRoom();
        hotel1.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) (short) 1);
        Hotel hotel73 = new Hotel((int) (short) 0);
        Room room74 = hotel73.findAvailableRoom();
        Hotel hotel76 = new Hotel(10);
        Room room77 = hotel76.findAvailableRoom();
        hotel73.reserveRoom(room77);
        hotel71.reserveRoom(room77);
        hotel71.displayRoomStatus();
        hotel71.displayRoomStatus();
        hotel71.displayRoomStatus();
        hotel71.displayRoomStatus();
        hotel71.displayRoomStatus();
        Room room85 = hotel71.findAvailableRoom();
        hotel1.reserveRoom(room85);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room85);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2130");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room8);
        Room room10 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        hotel14.displayRoomStatus();
        Room room16 = hotel14.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel18.reserveRoom(room36);
        hotel14.reserveRoom(room36);
        Room room40 = hotel14.findAvailableRoom();
        Room room41 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        hotel14.displayRoomStatus();
        Room room44 = hotel14.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) ' ');
        Hotel hotel48 = new Hotel((int) 'a');
        hotel48.displayRoomStatus();
        Room room50 = hotel48.findAvailableRoom();
        hotel46.reserveRoom(room50);
        hotel14.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        Room room54 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass55 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2131");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) ' ');
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel4.reserveRoom(room10);
        Room room13 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room13);
        hotel1.displayRoomStatus();
        Room room16 = hotel1.findAvailableRoom();
        Room room17 = hotel1.findAvailableRoom();
        Room room18 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room18);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2132");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        Room room11 = hotel1.findAvailableRoom();
        Hotel hotel13 = new Hotel(1);
        hotel13.displayRoomStatus();
        Hotel hotel16 = new Hotel(10);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        hotel27.reserveRoom(room54);
        hotel19.reserveRoom(room54);
        hotel16.reserveRoom(room54);
        hotel13.reserveRoom(room54);
        hotel1.reserveRoom(room54);
        Hotel hotel63 = new Hotel(0);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        Hotel hotel68 = new Hotel(0);
        hotel68.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel68.reserveRoom(room72);
        hotel63.reserveRoom(room72);
        Hotel hotel76 = new Hotel((int) (short) 0);
        Room room77 = hotel76.findAvailableRoom();
        Hotel hotel79 = new Hotel(10);
        Room room80 = hotel79.findAvailableRoom();
        hotel76.reserveRoom(room80);
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel83.displayRoomStatus();
        Room room86 = hotel83.findAvailableRoom();
        hotel76.reserveRoom(room86);
        hotel63.reserveRoom(room86);
        hotel1.reserveRoom(room86);
        hotel1.displayRoomStatus();
        Room room91 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room91);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2133");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        hotel27.reserveRoom(room54);
        hotel5.reserveRoom(room54);
        hotel1.reserveRoom(room54);
        Room room60 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass62 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2134");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room41 = hotel1.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        hotel43.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel56.reserveRoom(room61);
        hotel56.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) -1);
        Room room66 = hotel65.findAvailableRoom();
        hotel65.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) 1);
        Room room70 = hotel69.findAvailableRoom();
        hotel65.reserveRoom(room70);
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel65.reserveRoom(room74);
        hotel56.reserveRoom(room74);
        Hotel hotel78 = new Hotel((int) (byte) -1);
        Room room79 = hotel78.findAvailableRoom();
        hotel78.displayRoomStatus();
        Hotel hotel82 = new Hotel((int) (byte) 1);
        Room room83 = hotel82.findAvailableRoom();
        hotel78.reserveRoom(room83);
        Hotel hotel86 = new Hotel((int) (byte) 1);
        Room room87 = hotel86.findAvailableRoom();
        hotel78.reserveRoom(room87);
        hotel56.reserveRoom(room87);
        hotel52.reserveRoom(room87);
        hotel43.reserveRoom(room87);
        hotel1.reserveRoom(room87);
        hotel1.displayRoomStatus();
        Room room94 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNull(room79);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room94);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2135");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        Hotel hotel10 = new Hotel(0);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Room room13 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        hotel10.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Room room20 = hotel17.findAvailableRoom();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        hotel22.displayRoomStatus();
        Room room24 = hotel22.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        hotel22.reserveRoom(room44);
        hotel22.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        hotel50.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel59.reserveRoom(room68);
        hotel50.reserveRoom(room68);
        hotel22.reserveRoom(room68);
        hotel17.reserveRoom(room68);
        hotel10.reserveRoom(room68);
        hotel10.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (short) 0);
        Room room77 = hotel76.findAvailableRoom();
        Hotel hotel79 = new Hotel(10);
        Room room80 = hotel79.findAvailableRoom();
        hotel76.reserveRoom(room80);
        hotel10.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        Room room84 = hotel1.findAvailableRoom();
        Room room85 = hotel1.findAvailableRoom();
        Room room86 = hotel1.findAvailableRoom();
        Room room87 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNull(room85);
        org.junit.Assert.assertNull(room86);
        org.junit.Assert.assertNull(room87);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2136");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        Room room39 = hotel1.findAvailableRoom();
        Hotel hotel41 = new Hotel(0);
        hotel41.displayRoomStatus();
        Room room43 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel46 = new Hotel(0);
        hotel46.displayRoomStatus();
        Room room48 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        hotel46.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel52.reserveRoom(room61);
        hotel46.reserveRoom(room61);
        hotel41.reserveRoom(room61);
        Hotel hotel66 = new Hotel((int) (byte) -1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel66.reserveRoom(room71);
        hotel66.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        hotel75.displayRoomStatus();
        Hotel hotel84 = new Hotel((int) (byte) -1);
        Room room85 = hotel84.findAvailableRoom();
        hotel84.displayRoomStatus();
        Hotel hotel88 = new Hotel((int) (byte) 1);
        Room room89 = hotel88.findAvailableRoom();
        hotel84.reserveRoom(room89);
        Hotel hotel92 = new Hotel((int) (byte) 1);
        Room room93 = hotel92.findAvailableRoom();
        hotel84.reserveRoom(room93);
        hotel75.reserveRoom(room93);
        hotel66.reserveRoom(room93);
        hotel41.reserveRoom(room93);
        hotel1.reserveRoom(room93);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room85);
        org.junit.Assert.assertNotNull(room89);
        org.junit.Assert.assertNotNull(room93);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2137");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room36 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel39 = new Hotel(100);
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        hotel41.reserveRoom(room48);
        hotel39.reserveRoom(room48);
        hotel1.reserveRoom(room48);
        java.lang.Class<?> wildcardClass53 = room48.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2138");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        hotel42.displayRoomStatus();
        Room room44 = hotel42.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        hotel42.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        Hotel hotel70 = new Hotel(10);
        hotel70.displayRoomStatus();
        Room room72 = hotel70.findAvailableRoom();
        Room room73 = hotel70.findAvailableRoom();
        Room room74 = hotel70.findAvailableRoom();
        hotel1.reserveRoom(room74);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass77 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2139");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        hotel4.reserveRoom(room26);
        hotel4.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel4.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2140");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2141");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        Hotel hotel10 = new Hotel(0);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Room room13 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        hotel10.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Room room20 = hotel17.findAvailableRoom();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        hotel22.displayRoomStatus();
        Room room24 = hotel22.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        hotel22.reserveRoom(room44);
        hotel22.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        hotel50.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel59.reserveRoom(room68);
        hotel50.reserveRoom(room68);
        hotel22.reserveRoom(room68);
        hotel17.reserveRoom(room68);
        hotel10.reserveRoom(room68);
        hotel10.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (short) 0);
        Room room77 = hotel76.findAvailableRoom();
        Hotel hotel79 = new Hotel(10);
        Room room80 = hotel79.findAvailableRoom();
        hotel76.reserveRoom(room80);
        hotel10.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        Room room84 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room84);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2142");
        Hotel hotel1 = new Hotel((int) ' ');
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2143");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel(1);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        hotel6.reserveRoom(room37);
        hotel6.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Room room47 = hotel44.findAvailableRoom();
        Room room48 = hotel44.findAvailableRoom();
        hotel6.reserveRoom(room48);
        hotel1.reserveRoom(room48);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass52 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2144");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room7);
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Room room13 = hotel10.findAvailableRoom();
        Room room14 = hotel10.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel10.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        Hotel hotel21 = new Hotel((int) (short) 0);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Room room24 = hotel21.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (short) 0);
        Room room27 = hotel26.findAvailableRoom();
        Hotel hotel29 = new Hotel((int) 'a');
        hotel29.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel29.reserveRoom(room37);
        hotel29.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        Hotel hotel68 = new Hotel((int) (byte) -1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel68.reserveRoom(room73);
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel68.reserveRoom(room77);
        hotel46.reserveRoom(room77);
        hotel42.reserveRoom(room77);
        hotel29.reserveRoom(room77);
        hotel26.reserveRoom(room77);
        hotel21.reserveRoom(room77);
        hotel1.reserveRoom(room77);
        hotel1.displayRoomStatus();
        Room room86 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room86);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2145");
        Hotel hotel1 = new Hotel((int) 'a');
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2146");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room32 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        Room room35 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass36 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2147");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass5 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2148");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel1.reserveRoom(room9);
        Hotel hotel12 = new Hotel(0);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Hotel hotel17 = new Hotel((-1));
        Room room18 = hotel17.findAvailableRoom();
        Hotel hotel20 = new Hotel(0);
        Room room21 = hotel20.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) ' ');
        Hotel hotel25 = new Hotel((int) (short) 0);
        Room room26 = hotel25.findAvailableRoom();
        Hotel hotel28 = new Hotel(10);
        Room room29 = hotel28.findAvailableRoom();
        hotel25.reserveRoom(room29);
        hotel23.reserveRoom(room29);
        Room room32 = hotel23.findAvailableRoom();
        hotel20.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) 'a');
        hotel35.displayRoomStatus();
        Room room37 = hotel35.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel39.reserveRoom(room66);
        hotel35.reserveRoom(room66);
        hotel20.reserveRoom(room66);
        hotel17.reserveRoom(room66);
        hotel12.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        Room room75 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass76 = room75.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2149");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) 'a');
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Hotel hotel39 = new Hotel((int) (byte) -1);
        hotel39.displayRoomStatus();
        Room room41 = hotel39.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        hotel43.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel52.reserveRoom(room61);
        hotel43.reserveRoom(room61);
        hotel39.reserveRoom(room61);
        hotel39.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        hotel67.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel67.reserveRoom(room85);
        hotel39.reserveRoom(room85);
        hotel37.reserveRoom(room85);
        hotel35.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        java.lang.Class<?> wildcardClass92 = room85.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2150");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel(0);
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        Room room11 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) ' ');
        Hotel hotel17 = new Hotel((int) (short) 0);
        Room room18 = hotel17.findAvailableRoom();
        Hotel hotel20 = new Hotel(10);
        Room room21 = hotel20.findAvailableRoom();
        hotel17.reserveRoom(room21);
        hotel15.reserveRoom(room21);
        hotel8.reserveRoom(room21);
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Room room29 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel32.reserveRoom(room59);
        Hotel hotel64 = new Hotel((int) 'a');
        hotel64.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        hotel64.reserveRoom(room72);
        Room room75 = hotel64.findAvailableRoom();
        hotel32.reserveRoom(room75);
        hotel26.reserveRoom(room75);
        hotel8.reserveRoom(room75);
        hotel1.reserveRoom(room75);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room75);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2151");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Room room20 = hotel17.findAvailableRoom();
        Room room21 = hotel17.findAvailableRoom();
        Hotel hotel23 = new Hotel(0);
        hotel23.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel23.reserveRoom(room27);
        Room room29 = hotel23.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel35.reserveRoom(room66);
        hotel31.reserveRoom(room66);
        hotel23.reserveRoom(room66);
        hotel17.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        Hotel hotel74 = new Hotel((int) (short) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Room room77 = hotel74.findAvailableRoom();
        hotel1.reserveRoom(room77);
        hotel1.displayRoomStatus();
        Room room80 = hotel1.findAvailableRoom();
        Hotel hotel82 = new Hotel((int) (short) 100);
        Room room83 = hotel82.findAvailableRoom();
        hotel1.reserveRoom(room83);
        java.lang.Class<?> wildcardClass85 = room83.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2152");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        hotel24.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel24.reserveRoom(room42);
        hotel15.reserveRoom(room42);
        hotel7.reserveRoom(room42);
        hotel4.reserveRoom(room42);
        hotel1.reserveRoom(room42);
        Room room49 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass51 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2153");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room29 = hotel1.findAvailableRoom();
        Room room30 = hotel1.findAvailableRoom();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) 10);
        hotel35.displayRoomStatus();
        hotel35.displayRoomStatus();
        Room room38 = hotel35.findAvailableRoom();
        hotel1.reserveRoom(room38);
        Room room40 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room40);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2154");
        Hotel hotel1 = new Hotel((int) (short) 1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel7.reserveRoom(room34);
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (short) 0);
        Room room43 = hotel42.findAvailableRoom();
        Hotel hotel45 = new Hotel(10);
        Room room46 = hotel45.findAvailableRoom();
        hotel42.reserveRoom(room46);
        hotel7.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room46);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2155");
        Hotel hotel1 = new Hotel(0);
        Hotel hotel3 = new Hotel((int) (byte) 1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel1.reserveRoom(room16);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2156");
        Hotel hotel1 = new Hotel((int) (short) 100);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) 1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Room room9 = hotel6.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        hotel11.reserveRoom(room33);
        hotel11.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel11.reserveRoom(room57);
        hotel6.reserveRoom(room57);
        Room room62 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Room room64 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Room room68 = hotel6.findAvailableRoom();
        Room room69 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room69);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room69);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2157");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2158");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel(0);
        hotel5.displayRoomStatus();
        Room room7 = hotel5.findAvailableRoom();
        Room room8 = hotel5.findAvailableRoom();
        Room room9 = hotel5.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Room room14 = hotel11.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel11.reserveRoom(room21);
        hotel5.reserveRoom(room21);
        hotel1.reserveRoom(room21);
        java.lang.Class<?> wildcardClass26 = room21.getClass();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2159");
        Hotel hotel1 = new Hotel((int) (short) -1);
        Hotel hotel3 = new Hotel((int) (byte) 10);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        Hotel hotel8 = new Hotel(0);
        hotel8.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room12);
        hotel8.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel(10);
        Room room20 = hotel19.findAvailableRoom();
        hotel16.reserveRoom(room20);
        hotel8.reserveRoom(room20);
        Room room23 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room25 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        Hotel hotel29 = new Hotel(1);
        hotel29.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        hotel32.displayRoomStatus();
        Room room34 = hotel32.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        hotel32.reserveRoom(room54);
        hotel32.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel32.reserveRoom(room69);
        Hotel hotel73 = new Hotel(0);
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Room room78 = hotel75.findAvailableRoom();
        hotel73.reserveRoom(room78);
        hotel32.reserveRoom(room78);
        hotel29.reserveRoom(room78);
        hotel8.reserveRoom(room78);
        hotel3.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        Room room85 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room78);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2160");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) 'a');
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room25);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel(10);
        hotel29.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) 'a');
        hotel32.displayRoomStatus();
        Room room34 = hotel32.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        hotel45.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel54.reserveRoom(room63);
        hotel45.reserveRoom(room63);
        hotel36.reserveRoom(room63);
        hotel32.reserveRoom(room63);
        hotel29.reserveRoom(room63);
        Room room69 = hotel29.findAvailableRoom();
        hotel1.reserveRoom(room69);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room69);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2161");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel4.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel4.reserveRoom(room31);
        Hotel hotel36 = new Hotel((int) (short) 0);
        hotel36.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel39.reserveRoom(room66);
        hotel36.reserveRoom(room66);
        hotel4.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        hotel1.displayRoomStatus();
        Room room74 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room74);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2162");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room20 = hotel1.findAvailableRoom();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        hotel22.displayRoomStatus();
        Room room24 = hotel22.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        hotel22.reserveRoom(room44);
        Room room48 = hotel22.findAvailableRoom();
        Room room49 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        hotel22.displayRoomStatus();
        Room room52 = hotel22.findAvailableRoom();
        Room room53 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (short) 1);
        Hotel hotel58 = new Hotel((int) (short) 0);
        Room room59 = hotel58.findAvailableRoom();
        Hotel hotel61 = new Hotel(10);
        Room room62 = hotel61.findAvailableRoom();
        hotel58.reserveRoom(room62);
        hotel56.reserveRoom(room62);
        hotel22.reserveRoom(room62);
        hotel1.reserveRoom(room62);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room62);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2163");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass7 = hotel1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2164");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass15 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2165");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room7);
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Room room13 = hotel10.findAvailableRoom();
        Room room14 = hotel10.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel10.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room22 = hotel1.findAvailableRoom();
        Room room23 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2166");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Hotel hotel7 = new Hotel(100);
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel9.reserveRoom(room14);
        hotel9.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel18.reserveRoom(room27);
        hotel9.reserveRoom(room27);
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        hotel31.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel31.reserveRoom(room58);
        hotel9.reserveRoom(room58);
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Room room67 = hotel64.findAvailableRoom();
        hotel9.reserveRoom(room67);
        hotel9.displayRoomStatus();
        hotel9.displayRoomStatus();
        hotel9.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) -1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel73.reserveRoom(room78);
        hotel9.reserveRoom(room78);
        hotel7.reserveRoom(room78);
        hotel5.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        Room room84 = hotel1.findAvailableRoom();
        Room room85 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNull(room85);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2167");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Room room23 = hotel1.findAvailableRoom();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Room room28 = hotel25.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        hotel30.displayRoomStatus();
        Room room32 = hotel30.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel30.reserveRoom(room52);
        hotel30.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel67.reserveRoom(room76);
        hotel58.reserveRoom(room76);
        hotel30.reserveRoom(room76);
        hotel25.reserveRoom(room76);
        hotel1.reserveRoom(room76);
        hotel1.displayRoomStatus();
        Room room83 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room85 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNull(room85);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2168");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) 'a');
        hotel36.displayRoomStatus();
        Room room38 = hotel36.findAvailableRoom();
        hotel14.reserveRoom(room38);
        Room room40 = hotel14.findAvailableRoom();
        Hotel hotel42 = new Hotel((int) 'a');
        hotel42.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        hotel42.reserveRoom(room50);
        Room room53 = hotel42.findAvailableRoom();
        Room room54 = hotel42.findAvailableRoom();
        hotel14.reserveRoom(room54);
        hotel14.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) 'a');
        hotel58.displayRoomStatus();
        Room room60 = hotel58.findAvailableRoom();
        hotel14.reserveRoom(room60);
        hotel1.reserveRoom(room60);
        java.lang.Class<?> wildcardClass63 = hotel1.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2169");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel11.reserveRoom(room18);
        hotel1.reserveRoom(room18);
        Room room22 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass23 = room22.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2170");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        hotel1.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        hotel24.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel24.reserveRoom(room42);
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel24.reserveRoom(room55);
        hotel20.reserveRoom(room55);
        hotel20.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        hotel61.displayRoomStatus();
        Room room63 = hotel61.findAvailableRoom();
        Hotel hotel65 = new Hotel((int) (byte) -1);
        Room room66 = hotel65.findAvailableRoom();
        hotel65.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) 1);
        Room room70 = hotel69.findAvailableRoom();
        hotel65.reserveRoom(room70);
        hotel65.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) -1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel74.reserveRoom(room79);
        Hotel hotel82 = new Hotel((int) (byte) 1);
        Room room83 = hotel82.findAvailableRoom();
        hotel74.reserveRoom(room83);
        hotel65.reserveRoom(room83);
        hotel61.reserveRoom(room83);
        hotel20.reserveRoom(room83);
        hotel18.reserveRoom(room83);
        hotel1.reserveRoom(room83);
        java.lang.Class<?> wildcardClass90 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2171");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2172");
        Hotel hotel1 = new Hotel((int) ' ');
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2173");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel6.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room17 = hotel1.findAvailableRoom();
        Room room18 = hotel1.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (short) 0);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Room room23 = hotel20.findAvailableRoom();
        Hotel hotel25 = new Hotel(1);
        hotel25.displayRoomStatus();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        hotel29.reserveRoom(room56);
        hotel25.reserveRoom(room56);
        hotel25.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Room room66 = hotel63.findAvailableRoom();
        Room room67 = hotel63.findAvailableRoom();
        hotel25.reserveRoom(room67);
        hotel20.reserveRoom(room67);
        hotel1.reserveRoom(room67);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room67);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2174");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) 'a');
        hotel4.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel4.reserveRoom(room12);
        Room room15 = hotel4.findAvailableRoom();
        Room room16 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room16);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel21.displayRoomStatus();
        hotel21.displayRoomStatus();
        Room room34 = hotel21.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) ' ');
        Hotel hotel38 = new Hotel((int) 'a');
        hotel38.displayRoomStatus();
        Room room40 = hotel38.findAvailableRoom();
        hotel36.reserveRoom(room40);
        Hotel hotel43 = new Hotel(0);
        hotel43.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel43.reserveRoom(room47);
        Room room49 = hotel43.findAvailableRoom();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        hotel55.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel64.reserveRoom(room73);
        hotel55.reserveRoom(room73);
        Hotel hotel77 = new Hotel((int) (byte) -1);
        Room room78 = hotel77.findAvailableRoom();
        hotel77.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel77.reserveRoom(room82);
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel77.reserveRoom(room86);
        hotel55.reserveRoom(room86);
        hotel51.reserveRoom(room86);
        hotel43.reserveRoom(room86);
        hotel36.reserveRoom(room86);
        hotel21.reserveRoom(room86);
        hotel1.reserveRoom(room86);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room86);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2175");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        hotel1.reserveRoom(room14);
        Hotel hotel19 = new Hotel((int) (byte) -1);
        hotel19.displayRoomStatus();
        Room room21 = hotel19.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel23.reserveRoom(room41);
        hotel19.reserveRoom(room41);
        hotel19.displayRoomStatus();
        hotel19.displayRoomStatus();
        Room room47 = hotel19.findAvailableRoom();
        Hotel hotel49 = new Hotel((int) (short) 0);
        Room room50 = hotel49.findAvailableRoom();
        Hotel hotel52 = new Hotel((int) 'a');
        hotel52.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        hotel52.reserveRoom(room60);
        Room room63 = hotel52.findAvailableRoom();
        Room room64 = hotel52.findAvailableRoom();
        hotel49.reserveRoom(room64);
        hotel19.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        Room room68 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room68);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2176");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room20 = hotel1.findAvailableRoom();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Room room25 = hotel22.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        hotel27.displayRoomStatus();
        Room room29 = hotel27.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        hotel31.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel40.reserveRoom(room49);
        hotel31.reserveRoom(room49);
        hotel27.reserveRoom(room49);
        hotel27.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        hotel55.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel64.reserveRoom(room73);
        hotel55.reserveRoom(room73);
        hotel27.reserveRoom(room73);
        hotel22.reserveRoom(room73);
        Room room78 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Room room80 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel83.displayRoomStatus();
        Room room86 = hotel83.findAvailableRoom();
        hotel83.displayRoomStatus();
        hotel83.displayRoomStatus();
        hotel83.displayRoomStatus();
        Room room90 = hotel83.findAvailableRoom();
        hotel22.reserveRoom(room90);
        Room room92 = hotel22.findAvailableRoom();
        hotel1.reserveRoom(room92);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room92);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2177");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Room room32 = hotel29.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        hotel34.displayRoomStatus();
        Room room36 = hotel34.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        hotel34.reserveRoom(room56);
        hotel34.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        hotel62.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) -1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel71.reserveRoom(room76);
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel71.reserveRoom(room80);
        hotel62.reserveRoom(room80);
        hotel34.reserveRoom(room80);
        hotel29.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        Room room86 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass87 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2178");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel32 = new Hotel(10);
        Room room33 = hotel32.findAvailableRoom();
        hotel1.reserveRoom(room33);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room35);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2179");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel(1);
        hotel5.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel12.reserveRoom(room30);
        hotel8.reserveRoom(room30);
        hotel8.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel8.reserveRoom(room45);
        Hotel hotel49 = new Hotel(0);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Room room54 = hotel51.findAvailableRoom();
        hotel49.reserveRoom(room54);
        hotel8.reserveRoom(room54);
        hotel5.reserveRoom(room54);
        hotel1.reserveRoom(room54);
        hotel1.displayRoomStatus();
        Room room60 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room60);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2180");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        hotel24.displayRoomStatus();
        Room room26 = hotel24.findAvailableRoom();
        Room room27 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        hotel30.displayRoomStatus();
        Room room32 = hotel30.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel30.reserveRoom(room52);
        hotel30.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel58.reserveRoom(room67);
        hotel30.reserveRoom(room67);
        Hotel hotel71 = new Hotel(0);
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Room room76 = hotel73.findAvailableRoom();
        hotel71.reserveRoom(room76);
        hotel30.reserveRoom(room76);
        hotel24.reserveRoom(room76);
        hotel1.reserveRoom(room76);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room76);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2181");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        hotel1.reserveRoom(room14);
        hotel1.displayRoomStatus();
        Hotel hotel20 = new Hotel((-1));
        Hotel hotel22 = new Hotel((int) (byte) -1);
        hotel22.displayRoomStatus();
        Room room24 = hotel22.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        hotel22.reserveRoom(room44);
        hotel20.reserveRoom(room44);
        Hotel hotel50 = new Hotel(0);
        hotel50.displayRoomStatus();
        Room room52 = hotel50.findAvailableRoom();
        Room room53 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        hotel50.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) ' ');
        Hotel hotel59 = new Hotel((int) (short) 0);
        Room room60 = hotel59.findAvailableRoom();
        Hotel hotel62 = new Hotel(10);
        Room room63 = hotel62.findAvailableRoom();
        hotel59.reserveRoom(room63);
        hotel57.reserveRoom(room63);
        hotel50.reserveRoom(room63);
        hotel20.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        Room room69 = hotel1.findAvailableRoom();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Room room74 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        hotel71.displayRoomStatus();
        Room room77 = hotel71.findAvailableRoom();
        hotel1.reserveRoom(room77);
        Room room79 = hotel1.findAvailableRoom();
        Room room80 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room79);
        org.junit.Assert.assertNull(room80);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2182");
        Hotel hotel1 = new Hotel((int) (byte) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2183");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (short) 1);
        Hotel hotel13 = new Hotel((int) (short) 0);
        Room room14 = hotel13.findAvailableRoom();
        Hotel hotel16 = new Hotel(10);
        Room room17 = hotel16.findAvailableRoom();
        hotel13.reserveRoom(room17);
        hotel11.reserveRoom(room17);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Hotel hotel23 = new Hotel(10);
        Room room24 = hotel23.findAvailableRoom();
        Room room25 = hotel23.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (short) 0);
        Room room28 = hotel27.findAvailableRoom();
        Room room29 = hotel27.findAvailableRoom();
        Room room30 = hotel27.findAvailableRoom();
        Room room31 = hotel27.findAvailableRoom();
        Hotel hotel33 = new Hotel(0);
        hotel33.displayRoomStatus();
        Room room35 = hotel33.findAvailableRoom();
        Room room36 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        hotel33.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) ' ');
        Hotel hotel42 = new Hotel((int) (short) 0);
        Room room43 = hotel42.findAvailableRoom();
        Hotel hotel45 = new Hotel(10);
        Room room46 = hotel45.findAvailableRoom();
        hotel42.reserveRoom(room46);
        hotel40.reserveRoom(room46);
        hotel33.reserveRoom(room46);
        hotel27.reserveRoom(room46);
        hotel23.reserveRoom(room46);
        hotel11.reserveRoom(room46);
        hotel11.displayRoomStatus();
        Room room54 = hotel11.findAvailableRoom();
        hotel1.reserveRoom(room54);
        hotel1.displayRoomStatus();
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass59 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2184");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room29 = hotel1.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (short) 0);
        Room room32 = hotel31.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) 'a');
        hotel34.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel34.reserveRoom(room42);
        Room room45 = hotel34.findAvailableRoom();
        Room room46 = hotel34.findAvailableRoom();
        hotel31.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        Room room49 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass52 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2185");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room38 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room38);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2186");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        Room room41 = hotel1.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) ' ');
        Hotel hotel45 = new Hotel((int) 'a');
        hotel45.displayRoomStatus();
        Room room47 = hotel45.findAvailableRoom();
        hotel43.reserveRoom(room47);
        Room room49 = hotel43.findAvailableRoom();
        Room room50 = hotel43.findAvailableRoom();
        hotel1.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) '#');
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        hotel53.displayRoomStatus();
        Room room57 = hotel53.findAvailableRoom();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        hotel59.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (short) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Room room65 = hotel62.findAvailableRoom();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        hotel67.reserveRoom(room74);
        hotel62.reserveRoom(room74);
        Room room78 = hotel62.findAvailableRoom();
        hotel59.reserveRoom(room78);
        hotel53.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room78);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2187");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        hotel1.reserveRoom(room14);
        hotel1.displayRoomStatus();
        Room room19 = hotel1.findAvailableRoom();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel27.reserveRoom(room58);
        hotel23.reserveRoom(room58);
        hotel21.reserveRoom(room58);
        hotel21.displayRoomStatus();
        hotel21.displayRoomStatus();
        Room room65 = hotel21.findAvailableRoom();
        Room room66 = hotel21.findAvailableRoom();
        hotel1.reserveRoom(room66);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room66);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2188");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        Room room32 = hotel1.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        Hotel hotel56 = new Hotel((int) 'a');
        hotel56.displayRoomStatus();
        Room room58 = hotel56.findAvailableRoom();
        hotel34.reserveRoom(room58);
        Room room60 = hotel34.findAvailableRoom();
        Room room61 = hotel34.findAvailableRoom();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel63.displayRoomStatus();
        Room room71 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Room room73 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        Hotel hotel78 = new Hotel(10);
        Room room79 = hotel78.findAvailableRoom();
        Room room80 = hotel78.findAvailableRoom();
        Room room81 = hotel78.findAvailableRoom();
        hotel63.reserveRoom(room81);
        hotel34.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass86 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2189");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Room room27 = hotel6.findAvailableRoom();
        Room room28 = hotel6.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Room room33 = hotel30.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        hotel35.displayRoomStatus();
        Room room37 = hotel35.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel35.reserveRoom(room57);
        hotel35.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel63.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel63.reserveRoom(room81);
        hotel35.reserveRoom(room81);
        hotel30.reserveRoom(room81);
        hotel6.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        Room room88 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room90 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room92 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNull(room88);
        org.junit.Assert.assertNull(room90);
        org.junit.Assert.assertNull(room92);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2190");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) 'a');
        hotel43.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel43.reserveRoom(room51);
        hotel43.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        hotel60.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel69.reserveRoom(room78);
        hotel60.reserveRoom(room78);
        Hotel hotel82 = new Hotel((int) (byte) -1);
        Room room83 = hotel82.findAvailableRoom();
        hotel82.displayRoomStatus();
        Hotel hotel86 = new Hotel((int) (byte) 1);
        Room room87 = hotel86.findAvailableRoom();
        hotel82.reserveRoom(room87);
        Hotel hotel90 = new Hotel((int) (byte) 1);
        Room room91 = hotel90.findAvailableRoom();
        hotel82.reserveRoom(room91);
        hotel60.reserveRoom(room91);
        hotel56.reserveRoom(room91);
        hotel43.reserveRoom(room91);
        hotel1.reserveRoom(room91);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass99 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room91);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2191");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (short) 0);
        Room room18 = hotel17.findAvailableRoom();
        Room room19 = hotel17.findAvailableRoom();
        Room room20 = hotel17.findAvailableRoom();
        Room room21 = hotel17.findAvailableRoom();
        Hotel hotel23 = new Hotel(0);
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        Room room26 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        hotel23.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) ' ');
        Hotel hotel32 = new Hotel((int) (short) 0);
        Room room33 = hotel32.findAvailableRoom();
        Hotel hotel35 = new Hotel(10);
        Room room36 = hotel35.findAvailableRoom();
        hotel32.reserveRoom(room36);
        hotel30.reserveRoom(room36);
        hotel23.reserveRoom(room36);
        hotel17.reserveRoom(room36);
        hotel13.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        hotel45.displayRoomStatus();
        Room room47 = hotel45.findAvailableRoom();
        Room room48 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        hotel45.displayRoomStatus();
        hotel45.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (short) 0);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        hotel53.displayRoomStatus();
        Room room57 = hotel53.findAvailableRoom();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        hotel59.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) -1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel68.reserveRoom(room73);
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel68.reserveRoom(room77);
        hotel59.reserveRoom(room77);
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel81.reserveRoom(room90);
        hotel59.reserveRoom(room90);
        hotel53.reserveRoom(room90);
        hotel45.reserveRoom(room90);
        hotel1.reserveRoom(room90);
        Room room96 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room96);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2192");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2193");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel(1);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        hotel6.reserveRoom(room37);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Room room44 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room44);
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        hotel49.displayRoomStatus();
        Room room51 = hotel49.findAvailableRoom();
        Room room52 = hotel49.findAvailableRoom();
        Hotel hotel54 = new Hotel(1);
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        hotel67.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel67.reserveRoom(room85);
        hotel58.reserveRoom(room85);
        hotel54.reserveRoom(room85);
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Room room92 = hotel54.findAvailableRoom();
        hotel49.reserveRoom(room92);
        hotel1.reserveRoom(room92);
        Room room95 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass96 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNotNull(room95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2194");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Room room30 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room35);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2195");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room7);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (short) 1);
        hotel12.displayRoomStatus();
        Hotel hotel15 = new Hotel(10);
        Room room16 = hotel15.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        hotel18.reserveRoom(room45);
        Hotel hotel50 = new Hotel((int) (short) 0);
        hotel50.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        hotel53.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        hotel62.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) -1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel71.reserveRoom(room76);
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel71.reserveRoom(room80);
        hotel62.reserveRoom(room80);
        hotel53.reserveRoom(room80);
        hotel50.reserveRoom(room80);
        hotel18.reserveRoom(room80);
        hotel15.reserveRoom(room80);
        hotel12.reserveRoom(room80);
        hotel12.displayRoomStatus();
        Room room89 = hotel12.findAvailableRoom();
        hotel1.reserveRoom(room89);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room89);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2196");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) ' ');
        Hotel hotel33 = new Hotel((int) (short) 0);
        Room room34 = hotel33.findAvailableRoom();
        Hotel hotel36 = new Hotel(10);
        Room room37 = hotel36.findAvailableRoom();
        hotel33.reserveRoom(room37);
        hotel31.reserveRoom(room37);
        hotel1.reserveRoom(room37);
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2197");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room49 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room49);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2198");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel((-1));
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel(0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) ' ');
        Hotel hotel14 = new Hotel((int) (short) 0);
        Room room15 = hotel14.findAvailableRoom();
        Hotel hotel17 = new Hotel(10);
        Room room18 = hotel17.findAvailableRoom();
        hotel14.reserveRoom(room18);
        hotel12.reserveRoom(room18);
        Room room21 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) 'a');
        hotel24.displayRoomStatus();
        Room room26 = hotel24.findAvailableRoom();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel28.reserveRoom(room55);
        hotel24.reserveRoom(room55);
        hotel9.reserveRoom(room55);
        hotel6.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room63 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass64 = room63.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room63);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2199");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room29 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass34 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2200");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass4 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2201");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) 'a');
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel(0);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        hotel9.displayRoomStatus();
        Hotel hotel14 = new Hotel(0);
        hotel14.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel14.reserveRoom(room18);
        hotel9.reserveRoom(room18);
        Hotel hotel22 = new Hotel((int) (short) 0);
        Room room23 = hotel22.findAvailableRoom();
        Hotel hotel25 = new Hotel(10);
        Room room26 = hotel25.findAvailableRoom();
        hotel22.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Room room32 = hotel29.findAvailableRoom();
        hotel22.reserveRoom(room32);
        hotel9.reserveRoom(room32);
        Room room35 = hotel9.findAvailableRoom();
        Room room36 = hotel9.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) 'a');
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel40.reserveRoom(room49);
        Room room51 = hotel40.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel53.reserveRoom(room62);
        hotel40.reserveRoom(room62);
        hotel38.reserveRoom(room62);
        Room room66 = hotel38.findAvailableRoom();
        hotel9.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2202");
        Hotel hotel1 = new Hotel((int) (short) 100);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(1);
        hotel4.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        hotel7.reserveRoom(room29);
        hotel7.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel7.reserveRoom(room44);
        Hotel hotel48 = new Hotel(0);
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Room room53 = hotel50.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel7.reserveRoom(room53);
        hotel4.reserveRoom(room53);
        Room room57 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room57);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2203");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        Room room50 = hotel1.findAvailableRoom();
        Room room51 = hotel1.findAvailableRoom();
        Room room52 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2204");
        Hotel hotel1 = new Hotel(100);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (short) 0);
        Room room5 = hotel4.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel11.reserveRoom(room42);
        hotel7.reserveRoom(room42);
        hotel4.reserveRoom(room42);
        hotel1.reserveRoom(room42);
        Room room48 = hotel1.findAvailableRoom();
        Room room49 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass50 = hotel1.getClass();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2205");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room32 = hotel1.findAvailableRoom();
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        Hotel hotel36 = new Hotel(1);
        hotel36.displayRoomStatus();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        hotel49.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel58.reserveRoom(room67);
        hotel49.reserveRoom(room67);
        hotel40.reserveRoom(room67);
        hotel36.reserveRoom(room67);
        hotel36.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Room room77 = hotel74.findAvailableRoom();
        Room room78 = hotel74.findAvailableRoom();
        hotel36.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        Room room81 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNull(room81);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2206");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(0);
        hotel6.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel1.reserveRoom(room10);
        java.lang.Class<?> wildcardClass13 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2207");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room9 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room5);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2208");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room38);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2209");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) ' ');
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Room room13 = hotel10.findAvailableRoom();
        Hotel hotel15 = new Hotel(1);
        hotel15.displayRoomStatus();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        hotel19.reserveRoom(room46);
        hotel15.reserveRoom(room46);
        hotel15.displayRoomStatus();
        hotel15.displayRoomStatus();
        Room room53 = hotel15.findAvailableRoom();
        hotel10.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        Room room56 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room58 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room58);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2210");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel8.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        Hotel hotel45 = new Hotel(0);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        hotel45.displayRoomStatus();
        Hotel hotel50 = new Hotel(0);
        hotel50.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel50.reserveRoom(room54);
        hotel45.reserveRoom(room54);
        hotel1.reserveRoom(room54);
        Room room58 = hotel1.findAvailableRoom();
        Hotel hotel60 = new Hotel((int) (short) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Room room63 = hotel60.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room63);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2211");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Hotel hotel27 = new Hotel(10);
        Room room28 = hotel27.findAvailableRoom();
        hotel24.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        Room room32 = hotel1.findAvailableRoom();
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass36 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2212");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) ' ');
        Hotel hotel11 = new Hotel((int) (short) 0);
        Room room12 = hotel11.findAvailableRoom();
        Hotel hotel14 = new Hotel(10);
        Room room15 = hotel14.findAvailableRoom();
        hotel11.reserveRoom(room15);
        hotel9.reserveRoom(room15);
        Room room18 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        hotel9.displayRoomStatus();
        hotel9.displayRoomStatus();
        Room room22 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room22);
        Room room24 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room24);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2213");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) 0);
        Hotel hotel7 = new Hotel(0);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Room room10 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) ' ');
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel(10);
        Room room20 = hotel19.findAvailableRoom();
        hotel16.reserveRoom(room20);
        hotel14.reserveRoom(room20);
        hotel7.reserveRoom(room20);
        hotel5.reserveRoom(room20);
        hotel1.reserveRoom(room20);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room20);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2214");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass10 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2215");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel(10);
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) 'a');
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        hotel25.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room43);
        hotel25.reserveRoom(room43);
        hotel16.reserveRoom(room43);
        hotel12.reserveRoom(room43);
        hotel9.reserveRoom(room43);
        hotel1.reserveRoom(room43);
        Room room50 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room52 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass53 = room52.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room52);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2216");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass40 = room39.getClass();
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2217");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass16 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2218");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel(10);
        Room room8 = hotel7.findAvailableRoom();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (short) 0);
        Room room12 = hotel11.findAvailableRoom();
        Room room13 = hotel11.findAvailableRoom();
        Room room14 = hotel11.findAvailableRoom();
        Room room15 = hotel11.findAvailableRoom();
        Hotel hotel17 = new Hotel(0);
        hotel17.displayRoomStatus();
        Room room19 = hotel17.findAvailableRoom();
        Room room20 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        hotel17.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) ' ');
        Hotel hotel26 = new Hotel((int) (short) 0);
        Room room27 = hotel26.findAvailableRoom();
        Hotel hotel29 = new Hotel(10);
        Room room30 = hotel29.findAvailableRoom();
        hotel26.reserveRoom(room30);
        hotel24.reserveRoom(room30);
        hotel17.reserveRoom(room30);
        hotel11.reserveRoom(room30);
        hotel7.reserveRoom(room30);
        hotel1.reserveRoom(room30);
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel38.reserveRoom(room69);
        Room room72 = hotel38.findAvailableRoom();
        Room room73 = hotel38.findAvailableRoom();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Room room78 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Room room80 = hotel75.findAvailableRoom();
        hotel38.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        java.lang.Class<?> wildcardClass83 = room80.getClass();
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2219");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel33 = new Hotel((int) 'a');
        hotel33.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel33.reserveRoom(room41);
        Room room44 = hotel33.findAvailableRoom();
        hotel1.reserveRoom(room44);
        java.lang.Class<?> wildcardClass46 = room44.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2220");
        Hotel hotel1 = new Hotel((int) (short) 1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel7.reserveRoom(room34);
        Hotel hotel39 = new Hotel((int) (short) 0);
        hotel39.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel42.reserveRoom(room69);
        hotel39.reserveRoom(room69);
        hotel7.reserveRoom(room69);
        hotel4.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        hotel1.displayRoomStatus();
        Room room78 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room78);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2221");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        Room room50 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room54 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass55 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2222");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel9.reserveRoom(room46);
        hotel6.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        Room room51 = hotel1.findAvailableRoom();
        Room room52 = hotel1.findAvailableRoom();
        Room room53 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room53);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2223");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel3.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        hotel31.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel40.reserveRoom(room49);
        hotel31.reserveRoom(room49);
        hotel3.reserveRoom(room49);
        hotel1.reserveRoom(room49);
        Room room54 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room54);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2224");
        Hotel hotel1 = new Hotel(0);
        Hotel hotel3 = new Hotel((int) (byte) 1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((-1));
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel11.reserveRoom(room35);
        Hotel hotel41 = new Hotel(0);
        hotel41.displayRoomStatus();
        Room room43 = hotel41.findAvailableRoom();
        Room room44 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        hotel41.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) ' ');
        Hotel hotel50 = new Hotel((int) (short) 0);
        Room room51 = hotel50.findAvailableRoom();
        Hotel hotel53 = new Hotel(10);
        Room room54 = hotel53.findAvailableRoom();
        hotel50.reserveRoom(room54);
        hotel48.reserveRoom(room54);
        hotel41.reserveRoom(room54);
        hotel11.reserveRoom(room54);
        hotel1.reserveRoom(room54);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room54);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2225");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel4.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel13.reserveRoom(room22);
        hotel4.reserveRoom(room22);
        Room room25 = hotel4.findAvailableRoom();
        Room room26 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room28 = hotel4.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (short) 1);
        Hotel hotel32 = new Hotel((int) (short) 0);
        Room room33 = hotel32.findAvailableRoom();
        Hotel hotel35 = new Hotel(10);
        Room room36 = hotel35.findAvailableRoom();
        hotel32.reserveRoom(room36);
        hotel30.reserveRoom(room36);
        hotel30.displayRoomStatus();
        hotel30.displayRoomStatus();
        Hotel hotel42 = new Hotel(10);
        Room room43 = hotel42.findAvailableRoom();
        Room room44 = hotel42.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (short) 0);
        Room room47 = hotel46.findAvailableRoom();
        Room room48 = hotel46.findAvailableRoom();
        Room room49 = hotel46.findAvailableRoom();
        Room room50 = hotel46.findAvailableRoom();
        Hotel hotel52 = new Hotel(0);
        hotel52.displayRoomStatus();
        Room room54 = hotel52.findAvailableRoom();
        Room room55 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        hotel52.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) ' ');
        Hotel hotel61 = new Hotel((int) (short) 0);
        Room room62 = hotel61.findAvailableRoom();
        Hotel hotel64 = new Hotel(10);
        Room room65 = hotel64.findAvailableRoom();
        hotel61.reserveRoom(room65);
        hotel59.reserveRoom(room65);
        hotel52.reserveRoom(room65);
        hotel46.reserveRoom(room65);
        hotel42.reserveRoom(room65);
        hotel30.reserveRoom(room65);
        hotel4.reserveRoom(room65);
        hotel1.reserveRoom(room65);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room65);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2226");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        hotel1.reserveRoom(room14);
        Room room18 = hotel1.findAvailableRoom();
        Room room19 = hotel1.findAvailableRoom();
        Room room20 = hotel1.findAvailableRoom();
        Hotel hotel22 = new Hotel(10);
        Room room23 = hotel22.findAvailableRoom();
        Room room24 = hotel22.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        hotel26.reserveRoom(room53);
        hotel22.reserveRoom(room53);
        Room room58 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Room room60 = hotel22.findAvailableRoom();
        hotel1.reserveRoom(room60);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room60);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2227");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2228");
        Hotel hotel1 = new Hotel((int) (short) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel6.reserveRoom(room15);
        Room room17 = hotel6.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel4.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel34 = new Hotel(0);
        hotel34.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel34.reserveRoom(room38);
        Room room40 = hotel34.findAvailableRoom();
        Hotel hotel42 = new Hotel(0);
        hotel42.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel42.reserveRoom(room46);
        Room room48 = hotel42.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        hotel54.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel63.reserveRoom(room72);
        hotel54.reserveRoom(room72);
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel54.reserveRoom(room85);
        hotel50.reserveRoom(room85);
        hotel42.reserveRoom(room85);
        hotel34.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        java.lang.Class<?> wildcardClass92 = room85.getClass();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2229");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass29 = room28.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2230");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        Room room40 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) '#');
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        hotel43.displayRoomStatus();
        Room room47 = hotel43.findAvailableRoom();
        hotel1.reserveRoom(room47);
        java.lang.Class<?> wildcardClass49 = room47.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2231");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Room room8 = hotel1.findAvailableRoom();
        Hotel hotel10 = new Hotel(10);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Hotel hotel14 = new Hotel((-1));
        Hotel hotel16 = new Hotel(1);
        hotel16.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        hotel19.displayRoomStatus();
        Room room21 = hotel19.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel23.reserveRoom(room41);
        hotel19.reserveRoom(room41);
        hotel19.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel19.reserveRoom(room56);
        Hotel hotel60 = new Hotel(0);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Room room65 = hotel62.findAvailableRoom();
        hotel60.reserveRoom(room65);
        hotel19.reserveRoom(room65);
        hotel16.reserveRoom(room65);
        hotel14.reserveRoom(room65);
        hotel10.reserveRoom(room65);
        hotel1.reserveRoom(room65);
        java.lang.Class<?> wildcardClass72 = room65.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2232");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) ' ');
        Hotel hotel28 = new Hotel((int) (short) 0);
        Room room29 = hotel28.findAvailableRoom();
        Hotel hotel31 = new Hotel(10);
        Room room32 = hotel31.findAvailableRoom();
        hotel28.reserveRoom(room32);
        hotel26.reserveRoom(room32);
        Room room35 = hotel26.findAvailableRoom();
        hotel1.reserveRoom(room35);
        hotel1.displayRoomStatus();
        Room room38 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass39 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2233");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Room room27 = hotel6.findAvailableRoom();
        Room room28 = hotel6.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Room room33 = hotel30.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        hotel35.displayRoomStatus();
        Room room37 = hotel35.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel35.reserveRoom(room57);
        hotel35.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel63.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel63.reserveRoom(room81);
        hotel35.reserveRoom(room81);
        hotel30.reserveRoom(room81);
        hotel6.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        hotel1.displayRoomStatus();
        Room room89 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNull(room89);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2234");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel(1);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        hotel6.reserveRoom(room37);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Room room44 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room44);
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        hotel49.displayRoomStatus();
        Room room51 = hotel49.findAvailableRoom();
        Room room52 = hotel49.findAvailableRoom();
        Hotel hotel54 = new Hotel(1);
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        hotel67.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel67.reserveRoom(room85);
        hotel58.reserveRoom(room85);
        hotel54.reserveRoom(room85);
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Room room92 = hotel54.findAvailableRoom();
        hotel49.reserveRoom(room92);
        hotel1.reserveRoom(room92);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room92);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2235");
        Hotel hotel1 = new Hotel((int) (short) -1);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(1);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        Room room18 = hotel16.findAvailableRoom();
        Room room19 = hotel16.findAvailableRoom();
        Room room20 = hotel16.findAvailableRoom();
        Hotel hotel22 = new Hotel(0);
        hotel22.displayRoomStatus();
        Room room24 = hotel22.findAvailableRoom();
        Room room25 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        hotel22.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) ' ');
        Hotel hotel31 = new Hotel((int) (short) 0);
        Room room32 = hotel31.findAvailableRoom();
        Hotel hotel34 = new Hotel(10);
        Room room35 = hotel34.findAvailableRoom();
        hotel31.reserveRoom(room35);
        hotel29.reserveRoom(room35);
        hotel22.reserveRoom(room35);
        hotel16.reserveRoom(room35);
        hotel12.reserveRoom(room35);
        hotel6.reserveRoom(room35);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Room room46 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        hotel43.displayRoomStatus();
        hotel43.displayRoomStatus();
        Room room50 = hotel43.findAvailableRoom();
        hotel6.reserveRoom(room50);
        hotel6.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (short) 0);
        Room room55 = hotel54.findAvailableRoom();
        Room room56 = hotel54.findAvailableRoom();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        hotel58.displayRoomStatus();
        Room room60 = hotel58.findAvailableRoom();
        Hotel hotel62 = new Hotel((int) (byte) 0);
        Hotel hotel64 = new Hotel(0);
        hotel64.displayRoomStatus();
        Room room66 = hotel64.findAvailableRoom();
        Room room67 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        hotel64.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) ' ');
        Hotel hotel73 = new Hotel((int) (short) 0);
        Room room74 = hotel73.findAvailableRoom();
        Hotel hotel76 = new Hotel(10);
        Room room77 = hotel76.findAvailableRoom();
        hotel73.reserveRoom(room77);
        hotel71.reserveRoom(room77);
        hotel64.reserveRoom(room77);
        hotel62.reserveRoom(room77);
        hotel58.reserveRoom(room77);
        hotel54.reserveRoom(room77);
        hotel6.reserveRoom(room77);
        hotel1.reserveRoom(room77);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room77);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2236");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) ' ');
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Room room12 = hotel9.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        hotel14.displayRoomStatus();
        Room room16 = hotel14.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel18.reserveRoom(room36);
        hotel14.reserveRoom(room36);
        hotel14.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel14.reserveRoom(room60);
        hotel9.reserveRoom(room60);
        Hotel hotel66 = new Hotel((int) (byte) -1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel66.reserveRoom(room71);
        hotel66.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        hotel75.displayRoomStatus();
        Hotel hotel84 = new Hotel((int) (byte) -1);
        Room room85 = hotel84.findAvailableRoom();
        hotel84.displayRoomStatus();
        Hotel hotel88 = new Hotel((int) (byte) 1);
        Room room89 = hotel88.findAvailableRoom();
        hotel84.reserveRoom(room89);
        Hotel hotel92 = new Hotel((int) (byte) 1);
        Room room93 = hotel92.findAvailableRoom();
        hotel84.reserveRoom(room93);
        hotel75.reserveRoom(room93);
        hotel66.reserveRoom(room93);
        hotel9.reserveRoom(room93);
        hotel1.reserveRoom(room93);
        java.lang.Class<?> wildcardClass99 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room85);
        org.junit.Assert.assertNotNull(room89);
        org.junit.Assert.assertNotNull(room93);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2237");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass38 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2238");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel15.reserveRoom(room46);
        hotel11.reserveRoom(room46);
        hotel8.reserveRoom(room46);
        hotel8.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) ' ');
        Hotel hotel55 = new Hotel((int) 'a');
        hotel55.displayRoomStatus();
        Room room57 = hotel55.findAvailableRoom();
        hotel53.reserveRoom(room57);
        hotel8.reserveRoom(room57);
        Hotel hotel61 = new Hotel(10);
        Room room62 = hotel61.findAvailableRoom();
        Room room63 = hotel61.findAvailableRoom();
        hotel8.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room68 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2239");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel(1);
        hotel22.displayRoomStatus();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        hotel26.reserveRoom(room53);
        hotel22.reserveRoom(room53);
        hotel13.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        Hotel hotel61 = new Hotel(1);
        hotel61.displayRoomStatus();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) ' ');
        Hotel hotel67 = new Hotel((int) 'a');
        hotel67.displayRoomStatus();
        Room room69 = hotel67.findAvailableRoom();
        hotel65.reserveRoom(room69);
        hotel61.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        java.lang.Class<?> wildcardClass73 = room69.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2240");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass6 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2241");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        Room room63 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room67 = hotel1.findAvailableRoom();
        Room room68 = hotel1.findAvailableRoom();
        Room room69 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass70 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2242");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        Room room58 = hotel1.findAvailableRoom();
        Room room59 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass60 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2243");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        Room room41 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        hotel44.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        Room room58 = hotel47.findAvailableRoom();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel47.reserveRoom(room69);
        hotel44.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        Room room74 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass75 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2244");
        Hotel hotel1 = new Hotel((int) (short) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel6.reserveRoom(room15);
        Room room17 = hotel6.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel4.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room36 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel39 = new Hotel(100);
        hotel39.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (short) 0);
        Room room43 = hotel42.findAvailableRoom();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        hotel49.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel58.reserveRoom(room67);
        hotel49.reserveRoom(room67);
        Hotel hotel71 = new Hotel((int) (byte) -1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel71.reserveRoom(room76);
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel71.reserveRoom(room80);
        hotel49.reserveRoom(room80);
        hotel45.reserveRoom(room80);
        hotel42.reserveRoom(room80);
        hotel39.reserveRoom(room80);
        Room room86 = hotel39.findAvailableRoom();
        hotel1.reserveRoom(room86);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room86);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2245");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room7 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room7);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2246");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(0);
        hotel6.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) '#');
        Hotel hotel19 = new Hotel((int) (byte) -1);
        hotel19.displayRoomStatus();
        Room room21 = hotel19.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel23.reserveRoom(room41);
        hotel19.reserveRoom(room41);
        hotel19.displayRoomStatus();
        hotel19.displayRoomStatus();
        Room room47 = hotel19.findAvailableRoom();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        hotel49.displayRoomStatus();
        Room room51 = hotel49.findAvailableRoom();
        Room room52 = hotel49.findAvailableRoom();
        Hotel hotel54 = new Hotel(1);
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        hotel67.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel67.reserveRoom(room85);
        hotel58.reserveRoom(room85);
        hotel54.reserveRoom(room85);
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Room room92 = hotel54.findAvailableRoom();
        hotel49.reserveRoom(room92);
        Room room94 = hotel49.findAvailableRoom();
        hotel19.reserveRoom(room94);
        hotel17.reserveRoom(room94);
        Room room97 = hotel17.findAvailableRoom();
        hotel1.reserveRoom(room97);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNotNull(room94);
        org.junit.Assert.assertNotNull(room97);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2247");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Room room12 = hotel9.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) 'a');
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        Room room27 = hotel16.findAvailableRoom();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel16.reserveRoom(room38);
        hotel14.reserveRoom(room38);
        Room room42 = hotel14.findAvailableRoom();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        hotel52.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel70.reserveRoom(room79);
        hotel61.reserveRoom(room79);
        hotel52.reserveRoom(room79);
        hotel44.reserveRoom(room79);
        hotel14.reserveRoom(room79);
        Room room85 = hotel14.findAvailableRoom();
        hotel9.reserveRoom(room85);
        Room room87 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room87);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room87);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2248");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) 'a');
        hotel11.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel11.reserveRoom(room19);
        Room room22 = hotel11.findAvailableRoom();
        Room room23 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room26 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room26);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2249");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2250");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        hotel1.reserveRoom(room10);
        java.lang.Class<?> wildcardClass12 = room10.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2251");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) ' ');
        Hotel hotel38 = new Hotel((int) (short) 0);
        Room room39 = hotel38.findAvailableRoom();
        Hotel hotel41 = new Hotel(10);
        Room room42 = hotel41.findAvailableRoom();
        hotel38.reserveRoom(room42);
        hotel36.reserveRoom(room42);
        Room room45 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        hotel36.displayRoomStatus();
        Room room48 = hotel36.findAvailableRoom();
        hotel1.reserveRoom(room48);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room48);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2252");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room10 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room10);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2253");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) 'a');
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        hotel1.reserveRoom(room10);
        Room room12 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room12);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2254");
        Hotel hotel1 = new Hotel((int) (short) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel6.reserveRoom(room15);
        Room room17 = hotel6.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel4.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room33 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2255");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room48 = hotel1.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) (byte) 10);
        hotel50.displayRoomStatus();
        hotel50.displayRoomStatus();
        Room room53 = hotel50.findAvailableRoom();
        Room room54 = hotel50.findAvailableRoom();
        hotel1.reserveRoom(room54);
        java.lang.Class<?> wildcardClass56 = hotel1.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2256");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) 'a');
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2257");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room39);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2258");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) 'a');
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room25);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        Room room29 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Room room38 = hotel35.findAvailableRoom();
        hotel1.reserveRoom(room38);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room38);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2259");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room24 = hotel1.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Room room29 = hotel26.findAvailableRoom();
        Room room30 = hotel26.findAvailableRoom();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel26.reserveRoom(room33);
        Room room35 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        hotel26.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        hotel39.displayRoomStatus();
        Room room41 = hotel39.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        hotel43.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel52.reserveRoom(room61);
        hotel43.reserveRoom(room61);
        hotel39.reserveRoom(room61);
        Room room65 = hotel39.findAvailableRoom();
        Room room66 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        hotel39.displayRoomStatus();
        Room room69 = hotel39.findAvailableRoom();
        Hotel hotel71 = new Hotel((int) ' ');
        Hotel hotel73 = new Hotel((int) 'a');
        hotel73.displayRoomStatus();
        Room room75 = hotel73.findAvailableRoom();
        hotel71.reserveRoom(room75);
        hotel39.reserveRoom(room75);
        hotel26.reserveRoom(room75);
        hotel1.reserveRoom(room75);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room75);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2260");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room41 = hotel1.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        hotel43.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel56.reserveRoom(room61);
        hotel56.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) -1);
        Room room66 = hotel65.findAvailableRoom();
        hotel65.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) 1);
        Room room70 = hotel69.findAvailableRoom();
        hotel65.reserveRoom(room70);
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel65.reserveRoom(room74);
        hotel56.reserveRoom(room74);
        Hotel hotel78 = new Hotel((int) (byte) -1);
        Room room79 = hotel78.findAvailableRoom();
        hotel78.displayRoomStatus();
        Hotel hotel82 = new Hotel((int) (byte) 1);
        Room room83 = hotel82.findAvailableRoom();
        hotel78.reserveRoom(room83);
        Hotel hotel86 = new Hotel((int) (byte) 1);
        Room room87 = hotel86.findAvailableRoom();
        hotel78.reserveRoom(room87);
        hotel56.reserveRoom(room87);
        hotel52.reserveRoom(room87);
        hotel43.reserveRoom(room87);
        hotel1.reserveRoom(room87);
        Room room93 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNull(room79);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room93);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2261");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel(1);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        hotel6.reserveRoom(room37);
        hotel6.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Room room47 = hotel44.findAvailableRoom();
        Room room48 = hotel44.findAvailableRoom();
        hotel6.reserveRoom(room48);
        hotel1.reserveRoom(room48);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room53 = hotel1.findAvailableRoom();
        Hotel hotel55 = new Hotel(10);
        Room room56 = hotel55.findAvailableRoom();
        Room room57 = hotel55.findAvailableRoom();
        Hotel hotel59 = new Hotel((int) (short) 0);
        Room room60 = hotel59.findAvailableRoom();
        Room room61 = hotel59.findAvailableRoom();
        Room room62 = hotel59.findAvailableRoom();
        Room room63 = hotel59.findAvailableRoom();
        Hotel hotel65 = new Hotel(0);
        hotel65.displayRoomStatus();
        Room room67 = hotel65.findAvailableRoom();
        Room room68 = hotel65.findAvailableRoom();
        hotel65.displayRoomStatus();
        hotel65.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) ' ');
        Hotel hotel74 = new Hotel((int) (short) 0);
        Room room75 = hotel74.findAvailableRoom();
        Hotel hotel77 = new Hotel(10);
        Room room78 = hotel77.findAvailableRoom();
        hotel74.reserveRoom(room78);
        hotel72.reserveRoom(room78);
        hotel65.reserveRoom(room78);
        hotel59.reserveRoom(room78);
        hotel55.reserveRoom(room78);
        Room room84 = hotel55.findAvailableRoom();
        Hotel hotel86 = new Hotel((int) (byte) 1);
        Room room87 = hotel86.findAvailableRoom();
        hotel55.reserveRoom(room87);
        hotel1.reserveRoom(room87);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room87);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2262");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 10);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(0);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel17 = new Hotel(10);
        Room room18 = hotel17.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        hotel20.displayRoomStatus();
        Room room22 = hotel20.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        hotel24.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel24.reserveRoom(room42);
        hotel20.reserveRoom(room42);
        hotel20.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel20.reserveRoom(room57);
        hotel17.reserveRoom(room57);
        hotel12.reserveRoom(room57);
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel12.reserveRoom(room66);
        hotel9.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        java.lang.Class<?> wildcardClass70 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2263");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Room room8 = hotel1.findAvailableRoom();
        Hotel hotel10 = new Hotel(10);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Hotel hotel14 = new Hotel((-1));
        Hotel hotel16 = new Hotel(1);
        hotel16.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        hotel19.displayRoomStatus();
        Room room21 = hotel19.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel23.reserveRoom(room41);
        hotel19.reserveRoom(room41);
        hotel19.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel19.reserveRoom(room56);
        Hotel hotel60 = new Hotel(0);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Room room65 = hotel62.findAvailableRoom();
        hotel60.reserveRoom(room65);
        hotel19.reserveRoom(room65);
        hotel16.reserveRoom(room65);
        hotel14.reserveRoom(room65);
        hotel10.reserveRoom(room65);
        hotel1.reserveRoom(room65);
        Room room72 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room72);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2264");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) 'a');
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel8.reserveRoom(room17);
        Room room19 = hotel8.findAvailableRoom();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel8.reserveRoom(room30);
        hotel6.reserveRoom(room30);
        Room room34 = hotel6.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        hotel44.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        hotel53.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel62.reserveRoom(room71);
        hotel53.reserveRoom(room71);
        hotel44.reserveRoom(room71);
        hotel36.reserveRoom(room71);
        hotel6.reserveRoom(room71);
        Room room77 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room77);
        hotel1.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) 10);
        hotel81.displayRoomStatus();
        hotel81.displayRoomStatus();
        Room room84 = hotel81.findAvailableRoom();
        hotel1.reserveRoom(room84);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room84);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2265");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) 'a');
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel13.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel13.reserveRoom(room59);
        hotel11.reserveRoom(room59);
        hotel9.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        java.lang.Class<?> wildcardClass66 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2266");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        Room room12 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room14 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room14);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2267");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room52 = hotel1.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Room room57 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Room room60 = hotel54.findAvailableRoom();
        hotel1.reserveRoom(room60);
        Room room62 = hotel1.findAvailableRoom();
        Hotel hotel64 = new Hotel((int) (short) 1);
        hotel64.displayRoomStatus();
        hotel64.displayRoomStatus();
        hotel64.displayRoomStatus();
        Room room68 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        hotel64.displayRoomStatus();
        Room room71 = hotel64.findAvailableRoom();
        hotel1.reserveRoom(room71);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room71);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2268");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel1.reserveRoom(room11);
        Hotel hotel15 = new Hotel((int) 'a');
        hotel15.displayRoomStatus();
        Room room17 = hotel15.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        hotel19.reserveRoom(room46);
        hotel15.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2269");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        hotel30.displayRoomStatus();
        Room room32 = hotel30.findAvailableRoom();
        Room room33 = hotel30.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel30.reserveRoom(room40);
        Hotel hotel44 = new Hotel((int) 'a');
        hotel44.displayRoomStatus();
        Room room46 = hotel44.findAvailableRoom();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        hotel57.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) -1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel66.reserveRoom(room71);
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel66.reserveRoom(room75);
        hotel57.reserveRoom(room75);
        hotel48.reserveRoom(room75);
        hotel44.reserveRoom(room75);
        hotel30.reserveRoom(room75);
        hotel1.reserveRoom(room75);
        java.lang.Class<?> wildcardClass82 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2270");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel8.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room46);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2271");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel62.reserveRoom(room71);
        hotel40.reserveRoom(room71);
        hotel36.reserveRoom(room71);
        hotel34.reserveRoom(room71);
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        Room room78 = hotel34.findAvailableRoom();
        Room room79 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Room room81 = hotel34.findAvailableRoom();
        Hotel hotel83 = new Hotel((int) (byte) 10);
        hotel83.displayRoomStatus();
        hotel83.displayRoomStatus();
        Room room86 = hotel83.findAvailableRoom();
        Room room87 = hotel83.findAvailableRoom();
        hotel34.reserveRoom(room87);
        hotel1.reserveRoom(room87);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room87);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2272");
        Hotel hotel1 = new Hotel((int) (short) 10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) ' ');
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel7.reserveRoom(room13);
        Room room16 = hotel7.findAvailableRoom();
        Room room17 = hotel7.findAvailableRoom();
        Room room18 = hotel7.findAvailableRoom();
        Room room19 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room19);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room19);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2273");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        hotel4.reserveRoom(room26);
        hotel4.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel4.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass46 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2274");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel8.reserveRoom(room35);
        hotel4.reserveRoom(room35);
        hotel1.reserveRoom(room35);
        Hotel hotel42 = new Hotel((int) (short) 0);
        Room room43 = hotel42.findAvailableRoom();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        hotel49.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel58.reserveRoom(room67);
        hotel49.reserveRoom(room67);
        Hotel hotel71 = new Hotel((int) (byte) -1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel71.reserveRoom(room76);
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel71.reserveRoom(room80);
        hotel49.reserveRoom(room80);
        hotel45.reserveRoom(room80);
        hotel42.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        Room room86 = hotel1.findAvailableRoom();
        Room room87 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room87);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2275");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(0);
        hotel6.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel20.reserveRoom(room38);
        hotel16.reserveRoom(room38);
        Room room42 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) ' ');
        Hotel hotel47 = new Hotel((int) 'a');
        hotel47.displayRoomStatus();
        Room room49 = hotel47.findAvailableRoom();
        hotel45.reserveRoom(room49);
        hotel16.reserveRoom(room49);
        hotel1.reserveRoom(room49);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room55 = hotel1.findAvailableRoom();
        Room room56 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room56);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2276");
        Hotel hotel1 = new Hotel((int) (byte) 10);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) ' ');
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel(10);
        Room room12 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room12);
        hotel6.reserveRoom(room12);
        hotel1.reserveRoom(room12);
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        hotel17.displayRoomStatus();
        hotel17.displayRoomStatus();
        Room room22 = hotel17.findAvailableRoom();
        Hotel hotel24 = new Hotel(10);
        Room room25 = hotel24.findAvailableRoom();
        hotel17.reserveRoom(room25);
        hotel17.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel35.reserveRoom(room66);
        hotel31.reserveRoom(room66);
        hotel29.reserveRoom(room66);
        hotel29.displayRoomStatus();
        hotel29.displayRoomStatus();
        Room room73 = hotel29.findAvailableRoom();
        Room room74 = hotel29.findAvailableRoom();
        hotel17.reserveRoom(room74);
        Room room76 = hotel17.findAvailableRoom();
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel78.displayRoomStatus();
        Room room81 = hotel78.findAvailableRoom();
        hotel78.displayRoomStatus();
        Room room83 = hotel78.findAvailableRoom();
        Room room84 = hotel78.findAvailableRoom();
        hotel17.reserveRoom(room84);
        hotel1.reserveRoom(room84);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(room84);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2277");
        Hotel hotel1 = new Hotel((int) 'a');
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel3.reserveRoom(room8);
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel3.reserveRoom(room12);
        Room room14 = hotel3.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Room room29 = hotel1.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel39.reserveRoom(room66);
        hotel31.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        hotel1.displayRoomStatus();
        Room room73 = hotel1.findAvailableRoom();
        Room room74 = hotel1.findAvailableRoom();
        Room room75 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room75);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2278");
        Hotel hotel1 = new Hotel((int) (short) 100);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel4.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel13.reserveRoom(room22);
        hotel4.reserveRoom(room22);
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        hotel26.reserveRoom(room53);
        hotel4.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room61 = hotel1.findAvailableRoom();
        Room room62 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room62);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2279");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room8);
        Room room10 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room13 = hotel1.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        Hotel hotel18 = new Hotel(1);
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        hotel22.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        hotel31.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel40.reserveRoom(room49);
        hotel31.reserveRoom(room49);
        hotel22.reserveRoom(room49);
        hotel18.reserveRoom(room49);
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        Room room57 = hotel18.findAvailableRoom();
        hotel15.reserveRoom(room57);
        hotel1.reserveRoom(room57);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room57);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2280");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel9.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room60 = hotel1.findAvailableRoom();
        Room room61 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room61);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2281");
        Hotel hotel1 = new Hotel((int) (short) -1);
        Hotel hotel3 = new Hotel((int) (byte) 10);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        Hotel hotel8 = new Hotel(0);
        hotel8.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room12);
        hotel8.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel(10);
        Room room20 = hotel19.findAvailableRoom();
        hotel16.reserveRoom(room20);
        hotel8.reserveRoom(room20);
        Room room23 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room25 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        Hotel hotel29 = new Hotel(1);
        hotel29.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        hotel32.displayRoomStatus();
        Room room34 = hotel32.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        hotel32.reserveRoom(room54);
        hotel32.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel32.reserveRoom(room69);
        Hotel hotel73 = new Hotel(0);
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Room room78 = hotel75.findAvailableRoom();
        hotel73.reserveRoom(room78);
        hotel32.reserveRoom(room78);
        hotel29.reserveRoom(room78);
        hotel8.reserveRoom(room78);
        hotel3.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        java.lang.Class<?> wildcardClass85 = room78.getClass();
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2282");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel(0);
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        Room room11 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) ' ');
        Hotel hotel17 = new Hotel((int) (short) 0);
        Room room18 = hotel17.findAvailableRoom();
        Hotel hotel20 = new Hotel(10);
        Room room21 = hotel20.findAvailableRoom();
        hotel17.reserveRoom(room21);
        hotel15.reserveRoom(room21);
        hotel8.reserveRoom(room21);
        hotel8.displayRoomStatus();
        Hotel hotel27 = new Hotel((-1));
        Hotel hotel29 = new Hotel((int) (byte) -1);
        hotel29.displayRoomStatus();
        Room room31 = hotel29.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel33.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel42.reserveRoom(room51);
        hotel33.reserveRoom(room51);
        hotel29.reserveRoom(room51);
        hotel27.reserveRoom(room51);
        Hotel hotel57 = new Hotel(0);
        hotel57.displayRoomStatus();
        Room room59 = hotel57.findAvailableRoom();
        Room room60 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        hotel57.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) ' ');
        Hotel hotel66 = new Hotel((int) (short) 0);
        Room room67 = hotel66.findAvailableRoom();
        Hotel hotel69 = new Hotel(10);
        Room room70 = hotel69.findAvailableRoom();
        hotel66.reserveRoom(room70);
        hotel64.reserveRoom(room70);
        hotel57.reserveRoom(room70);
        hotel27.reserveRoom(room70);
        hotel8.reserveRoom(room70);
        hotel1.reserveRoom(room70);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass78 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2283");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Room room27 = hotel6.findAvailableRoom();
        Room room28 = hotel6.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Room room33 = hotel30.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        hotel35.displayRoomStatus();
        Room room37 = hotel35.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel35.reserveRoom(room57);
        hotel35.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel63.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel63.reserveRoom(room81);
        hotel35.reserveRoom(room81);
        hotel30.reserveRoom(room81);
        hotel6.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        Hotel hotel89 = new Hotel(0);
        hotel89.displayRoomStatus();
        hotel89.displayRoomStatus();
        Hotel hotel93 = new Hotel((int) ' ');
        Room room94 = hotel93.findAvailableRoom();
        hotel89.reserveRoom(room94);
        hotel1.reserveRoom(room94);
        java.lang.Class<?> wildcardClass97 = room94.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2284");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) 'a');
        Room room12 = hotel11.findAvailableRoom();
        Room room13 = hotel11.findAvailableRoom();
        Hotel hotel15 = new Hotel(10);
        Room room16 = hotel15.findAvailableRoom();
        Room room17 = hotel15.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        hotel19.reserveRoom(room46);
        hotel15.reserveRoom(room46);
        Room room51 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Room room53 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room53);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2285");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2286");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel(10);
        Room room9 = hotel8.findAvailableRoom();
        hotel1.reserveRoom(room9);
        Room room11 = hotel1.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel13.displayRoomStatus();
        hotel13.displayRoomStatus();
        Room room41 = hotel13.findAvailableRoom();
        Room room42 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Room room48 = hotel45.findAvailableRoom();
        Room room49 = hotel45.findAvailableRoom();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel45.reserveRoom(room52);
        Room room54 = hotel45.findAvailableRoom();
        hotel13.reserveRoom(room54);
        hotel1.reserveRoom(room54);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room54);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2287");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        hotel54.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel63.reserveRoom(room72);
        hotel54.reserveRoom(room72);
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel54.reserveRoom(room85);
        hotel50.reserveRoom(room85);
        hotel41.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room94 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room96 = hotel1.findAvailableRoom();
        Room room97 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNull(room94);
        org.junit.Assert.assertNull(room96);
        org.junit.Assert.assertNull(room97);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2288");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel(1);
        hotel3.displayRoomStatus();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room43);
        hotel6.reserveRoom(room43);
        Hotel hotel47 = new Hotel(0);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Room room52 = hotel49.findAvailableRoom();
        hotel47.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel3.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2289");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) 'a');
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel9.reserveRoom(room17);
        hotel9.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel26.reserveRoom(room57);
        hotel22.reserveRoom(room57);
        hotel9.reserveRoom(room57);
        hotel6.reserveRoom(room57);
        hotel1.reserveRoom(room57);
        Room room64 = hotel1.findAvailableRoom();
        Room room65 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNull(room65);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2290");
        Hotel hotel1 = new Hotel((int) '4');
        Hotel hotel3 = new Hotel(0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) ' ');
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel(10);
        Room room12 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room12);
        hotel6.reserveRoom(room12);
        Room room15 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) 'a');
        hotel18.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel18.reserveRoom(room26);
        Room room29 = hotel18.findAvailableRoom();
        Room room30 = hotel18.findAvailableRoom();
        Room room31 = hotel18.findAvailableRoom();
        hotel3.reserveRoom(room31);
        hotel1.reserveRoom(room31);
        Hotel hotel35 = new Hotel((int) '4');
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel63.reserveRoom(room72);
        hotel41.reserveRoom(room72);
        hotel37.reserveRoom(room72);
        hotel35.reserveRoom(room72);
        hotel1.reserveRoom(room72);
        java.lang.Class<?> wildcardClass78 = hotel1.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2291");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        Hotel hotel41 = new Hotel(0);
        hotel41.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel41.reserveRoom(room45);
        hotel41.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) 'a');
        hotel49.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        hotel49.reserveRoom(room57);
        hotel41.reserveRoom(room57);
        hotel1.reserveRoom(room57);
        Room room62 = hotel1.findAvailableRoom();
        Room room63 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room63);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2292");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel8.reserveRoom(room39);
        Room room42 = hotel8.findAvailableRoom();
        Room room43 = hotel8.findAvailableRoom();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Room room48 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Room room50 = hotel45.findAvailableRoom();
        hotel8.reserveRoom(room50);
        hotel8.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        hotel54.displayRoomStatus();
        Room room56 = hotel54.findAvailableRoom();
        Hotel hotel58 = new Hotel((int) (byte) 0);
        Hotel hotel60 = new Hotel(0);
        hotel60.displayRoomStatus();
        Room room62 = hotel60.findAvailableRoom();
        Room room63 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        hotel60.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) ' ');
        Hotel hotel69 = new Hotel((int) (short) 0);
        Room room70 = hotel69.findAvailableRoom();
        Hotel hotel72 = new Hotel(10);
        Room room73 = hotel72.findAvailableRoom();
        hotel69.reserveRoom(room73);
        hotel67.reserveRoom(room73);
        hotel60.reserveRoom(room73);
        hotel58.reserveRoom(room73);
        hotel54.reserveRoom(room73);
        hotel8.reserveRoom(room73);
        hotel1.reserveRoom(room73);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room73);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2293");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room11 = hotel8.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel13.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel13.reserveRoom(room59);
        hotel8.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (short) 0);
        Room room68 = hotel67.findAvailableRoom();
        Hotel hotel70 = new Hotel(10);
        Room room71 = hotel70.findAvailableRoom();
        hotel67.reserveRoom(room71);
        hotel1.reserveRoom(room71);
        Room room74 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room74);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2294");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) ' ');
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel4.reserveRoom(room10);
        Room room13 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room13);
        Hotel hotel16 = new Hotel((int) 'a');
        hotel16.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel16.reserveRoom(room24);
        Room room27 = hotel16.findAvailableRoom();
        Room room28 = hotel16.findAvailableRoom();
        Room room29 = hotel16.findAvailableRoom();
        hotel1.reserveRoom(room29);
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room33);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2295");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        Room room12 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel15.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2296");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel8.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        Hotel hotel45 = new Hotel(0);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        hotel45.displayRoomStatus();
        Hotel hotel50 = new Hotel(0);
        hotel50.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel50.reserveRoom(room54);
        hotel45.reserveRoom(room54);
        hotel1.reserveRoom(room54);
        Room room58 = hotel1.findAvailableRoom();
        Room room59 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room59);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2297");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) ' ');
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel4.reserveRoom(room10);
        Room room13 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room13);
        Hotel hotel16 = new Hotel((int) 'a');
        hotel16.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel16.reserveRoom(room24);
        Room room27 = hotel16.findAvailableRoom();
        Room room28 = hotel16.findAvailableRoom();
        Room room29 = hotel16.findAvailableRoom();
        hotel1.reserveRoom(room29);
        Room room31 = hotel1.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel33.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel33.reserveRoom(room60);
        hotel1.reserveRoom(room60);
        Room room65 = hotel1.findAvailableRoom();
        Room room66 = hotel1.findAvailableRoom();
        Room room67 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room67);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2298");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel1.reserveRoom(room9);
        Hotel hotel12 = new Hotel(0);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Hotel hotel17 = new Hotel((-1));
        Room room18 = hotel17.findAvailableRoom();
        Hotel hotel20 = new Hotel(0);
        Room room21 = hotel20.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) ' ');
        Hotel hotel25 = new Hotel((int) (short) 0);
        Room room26 = hotel25.findAvailableRoom();
        Hotel hotel28 = new Hotel(10);
        Room room29 = hotel28.findAvailableRoom();
        hotel25.reserveRoom(room29);
        hotel23.reserveRoom(room29);
        Room room32 = hotel23.findAvailableRoom();
        hotel20.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) 'a');
        hotel35.displayRoomStatus();
        Room room37 = hotel35.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel39.reserveRoom(room66);
        hotel35.reserveRoom(room66);
        hotel20.reserveRoom(room66);
        hotel17.reserveRoom(room66);
        hotel12.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2299");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 10);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Room room14 = hotel11.findAvailableRoom();
        hotel1.reserveRoom(room14);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room14);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2300");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        Room room56 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room58 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room58);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2301");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room29 = hotel1.findAvailableRoom();
        Room room30 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Room room36 = hotel33.findAvailableRoom();
        Room room37 = hotel33.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel33.reserveRoom(room40);
        Room room42 = hotel33.findAvailableRoom();
        hotel1.reserveRoom(room42);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room42);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2302");
        Hotel hotel1 = new Hotel((int) (short) 100);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass5 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2303");
        Hotel hotel1 = new Hotel(0);
        Hotel hotel3 = new Hotel((int) (byte) 1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = room8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2304");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (short) 0);
        Room room12 = hotel11.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel18.reserveRoom(room36);
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel40.reserveRoom(room49);
        hotel18.reserveRoom(room49);
        hotel14.reserveRoom(room49);
        hotel11.reserveRoom(room49);
        hotel1.reserveRoom(room49);
        Room room55 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room55);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2305");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass11 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2306");
        Hotel hotel1 = new Hotel(0);
        Hotel hotel3 = new Hotel((int) (byte) 1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room10 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room10);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2307");
        Hotel hotel1 = new Hotel((int) (short) 0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel4.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel4.reserveRoom(room31);
        hotel1.reserveRoom(room31);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2308");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) 1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel12.reserveRoom(room30);
        hotel8.reserveRoom(room30);
        hotel8.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        hotel8.reserveRoom(room54);
        hotel3.reserveRoom(room54);
        Room room59 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room61 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room61);
        Room room63 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass65 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2309");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel(1);
        hotel22.displayRoomStatus();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        hotel26.reserveRoom(room53);
        hotel22.reserveRoom(room53);
        hotel13.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        Hotel hotel61 = new Hotel(1);
        hotel61.displayRoomStatus();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) ' ');
        Hotel hotel67 = new Hotel((int) 'a');
        hotel67.displayRoomStatus();
        Room room69 = hotel67.findAvailableRoom();
        hotel65.reserveRoom(room69);
        hotel61.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        hotel1.displayRoomStatus();
        Room room74 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2310");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room64 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass65 = room64.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2311");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (short) 1);
        Hotel hotel13 = new Hotel((int) (short) 0);
        Room room14 = hotel13.findAvailableRoom();
        Hotel hotel16 = new Hotel(10);
        Room room17 = hotel16.findAvailableRoom();
        hotel13.reserveRoom(room17);
        hotel11.reserveRoom(room17);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Hotel hotel23 = new Hotel(10);
        Room room24 = hotel23.findAvailableRoom();
        Room room25 = hotel23.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (short) 0);
        Room room28 = hotel27.findAvailableRoom();
        Room room29 = hotel27.findAvailableRoom();
        Room room30 = hotel27.findAvailableRoom();
        Room room31 = hotel27.findAvailableRoom();
        Hotel hotel33 = new Hotel(0);
        hotel33.displayRoomStatus();
        Room room35 = hotel33.findAvailableRoom();
        Room room36 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        hotel33.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) ' ');
        Hotel hotel42 = new Hotel((int) (short) 0);
        Room room43 = hotel42.findAvailableRoom();
        Hotel hotel45 = new Hotel(10);
        Room room46 = hotel45.findAvailableRoom();
        hotel42.reserveRoom(room46);
        hotel40.reserveRoom(room46);
        hotel33.reserveRoom(room46);
        hotel27.reserveRoom(room46);
        hotel23.reserveRoom(room46);
        hotel11.reserveRoom(room46);
        hotel11.displayRoomStatus();
        Room room54 = hotel11.findAvailableRoom();
        hotel1.reserveRoom(room54);
        hotel1.displayRoomStatus();
        Room room57 = hotel1.findAvailableRoom();
        Room room58 = hotel1.findAvailableRoom();
        Room room59 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room59);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2312");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2313");
        Hotel hotel1 = new Hotel((int) (short) 100);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(1);
        hotel4.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        hotel7.reserveRoom(room29);
        hotel7.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel7.reserveRoom(room44);
        Hotel hotel48 = new Hotel(0);
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Room room53 = hotel50.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel7.reserveRoom(room53);
        hotel4.reserveRoom(room53);
        Room room57 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room57);
        Room room59 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2314");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        hotel1.reserveRoom(room14);
        hotel1.displayRoomStatus();
        Room room19 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = room19.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room19);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2315");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        Room room43 = hotel1.findAvailableRoom();
        Hotel hotel45 = new Hotel((int) 'a');
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        Room room58 = hotel47.findAvailableRoom();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel47.reserveRoom(room69);
        hotel45.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        Room room74 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass75 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2316");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room15 = hotel1.findAvailableRoom();
        Room room16 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = room16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room16);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2317");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        Room room12 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass14 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2318");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass6 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2319");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room15 = hotel1.findAvailableRoom();
        Room room16 = hotel1.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        hotel24.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel24.reserveRoom(room42);
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel24.reserveRoom(room55);
        hotel20.reserveRoom(room55);
        hotel18.reserveRoom(room55);
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        Room room62 = hotel18.findAvailableRoom();
        Room room63 = hotel18.findAvailableRoom();
        Room room64 = hotel18.findAvailableRoom();
        Room room65 = hotel18.findAvailableRoom();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        hotel67.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel67.reserveRoom(room85);
        Hotel hotel89 = new Hotel((int) 'a');
        hotel89.displayRoomStatus();
        Room room91 = hotel89.findAvailableRoom();
        hotel67.reserveRoom(room91);
        hotel18.reserveRoom(room91);
        hotel1.reserveRoom(room91);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room91);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2320");
        Hotel hotel1 = new Hotel(100);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room4);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2321");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room15 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room17 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room17);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2322");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Room room36 = hotel9.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (short) 100);
        Room room39 = hotel38.findAvailableRoom();
        hotel9.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        Hotel hotel43 = new Hotel((int) (short) 10);
        Room room44 = hotel43.findAvailableRoom();
        Room room45 = hotel43.findAvailableRoom();
        hotel1.reserveRoom(room45);
        java.lang.Class<?> wildcardClass47 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2323");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room29 = hotel1.findAvailableRoom();
        Room room30 = hotel1.findAvailableRoom();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass33 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2324");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel(1);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        hotel6.reserveRoom(room37);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Room room44 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room44);
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2325");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        hotel7.reserveRoom(room29);
        hotel7.displayRoomStatus();
        Room room34 = hotel7.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (short) 100);
        Room room37 = hotel36.findAvailableRoom();
        hotel7.reserveRoom(room37);
        hotel1.reserveRoom(room37);
        hotel1.displayRoomStatus();
        Room room41 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room41);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2326");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel(0);
        hotel7.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel7.reserveRoom(room11);
        Room room13 = hotel7.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel19.reserveRoom(room50);
        hotel15.reserveRoom(room50);
        hotel7.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) 'a');
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        Room room71 = hotel60.findAvailableRoom();
        Hotel hotel73 = new Hotel((int) (byte) -1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel73.reserveRoom(room78);
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel73.reserveRoom(room82);
        hotel60.reserveRoom(room82);
        hotel58.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        hotel1.displayRoomStatus();
        Room room88 = hotel1.findAvailableRoom();
        Room room89 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass91 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNull(room88);
        org.junit.Assert.assertNull(room89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2327");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(0);
        hotel5.displayRoomStatus();
        Room room7 = hotel5.findAvailableRoom();
        Room room8 = hotel5.findAvailableRoom();
        Room room9 = hotel5.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Room room14 = hotel11.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel11.reserveRoom(room21);
        hotel5.reserveRoom(room21);
        hotel1.reserveRoom(room21);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        Hotel hotel49 = new Hotel((int) 'a');
        hotel49.displayRoomStatus();
        Room room51 = hotel49.findAvailableRoom();
        hotel27.reserveRoom(room51);
        Room room53 = hotel27.findAvailableRoom();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        hotel55.displayRoomStatus();
        Room room57 = hotel55.findAvailableRoom();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        hotel59.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) -1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel68.reserveRoom(room73);
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel68.reserveRoom(room77);
        hotel59.reserveRoom(room77);
        hotel55.reserveRoom(room77);
        Room room81 = hotel55.findAvailableRoom();
        Room room82 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        hotel55.displayRoomStatus();
        Room room85 = hotel55.findAvailableRoom();
        Hotel hotel87 = new Hotel((int) ' ');
        Hotel hotel89 = new Hotel((int) 'a');
        hotel89.displayRoomStatus();
        Room room91 = hotel89.findAvailableRoom();
        hotel87.reserveRoom(room91);
        hotel55.reserveRoom(room91);
        hotel27.reserveRoom(room91);
        hotel1.reserveRoom(room91);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room81);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNull(room85);
        org.junit.Assert.assertNotNull(room91);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2328");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        Room room63 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        Room room66 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room68 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room70 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room70);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2329");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel8.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room49 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room45);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2330");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Room room10 = hotel7.findAvailableRoom();
        Room room11 = hotel7.findAvailableRoom();
        Room room12 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (short) 10);
        Room room16 = hotel15.findAvailableRoom();
        Hotel hotel18 = new Hotel(0);
        hotel18.displayRoomStatus();
        Room room20 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel23 = new Hotel(10);
        Room room24 = hotel23.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        hotel26.displayRoomStatus();
        Room room28 = hotel26.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        hotel30.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel39.reserveRoom(room48);
        hotel30.reserveRoom(room48);
        hotel26.reserveRoom(room48);
        hotel26.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel54.reserveRoom(room63);
        hotel26.reserveRoom(room63);
        hotel23.reserveRoom(room63);
        hotel18.reserveRoom(room63);
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel18.reserveRoom(room72);
        hotel15.reserveRoom(room72);
        hotel7.reserveRoom(room72);
        hotel1.reserveRoom(room72);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room72);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2331");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) 'a');
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel13.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel13.reserveRoom(room59);
        hotel11.reserveRoom(room59);
        hotel9.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2332");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel7.reserveRoom(room16);
        hotel1.reserveRoom(room16);
        Room room19 = hotel1.findAvailableRoom();
        Hotel hotel21 = new Hotel(10);
        Room room22 = hotel21.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel32.reserveRoom(room59);
        hotel24.reserveRoom(room59);
        hotel21.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        Hotel hotel67 = new Hotel((int) 'a');
        hotel67.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        hotel67.reserveRoom(room75);
        Room room78 = hotel67.findAvailableRoom();
        Room room79 = hotel67.findAvailableRoom();
        hotel1.reserveRoom(room79);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room79);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2333");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        Room room43 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (short) 0);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        hotel46.displayRoomStatus();
        Room room50 = hotel46.findAvailableRoom();
        Room room51 = hotel46.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) '4');
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        hotel59.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) -1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel68.reserveRoom(room73);
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel68.reserveRoom(room77);
        hotel59.reserveRoom(room77);
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel81.reserveRoom(room90);
        hotel59.reserveRoom(room90);
        hotel55.reserveRoom(room90);
        hotel53.reserveRoom(room90);
        Room room95 = hotel53.findAvailableRoom();
        hotel46.reserveRoom(room95);
        hotel1.reserveRoom(room95);
        Room room98 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass99 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room95);
        org.junit.Assert.assertNull(room98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2334");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Hotel hotel31 = new Hotel(0);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Room room34 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        hotel31.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) ' ');
        Hotel hotel40 = new Hotel((int) (short) 0);
        Room room41 = hotel40.findAvailableRoom();
        Hotel hotel43 = new Hotel(10);
        Room room44 = hotel43.findAvailableRoom();
        hotel40.reserveRoom(room44);
        hotel38.reserveRoom(room44);
        hotel31.reserveRoom(room44);
        hotel1.reserveRoom(room44);
        Hotel hotel50 = new Hotel(10);
        Room room51 = hotel50.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        hotel53.displayRoomStatus();
        Room room55 = hotel53.findAvailableRoom();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        hotel57.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) -1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel66.reserveRoom(room71);
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel66.reserveRoom(room75);
        hotel57.reserveRoom(room75);
        hotel53.reserveRoom(room75);
        hotel53.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel81.reserveRoom(room90);
        hotel53.reserveRoom(room90);
        hotel50.reserveRoom(room90);
        Room room94 = hotel50.findAvailableRoom();
        hotel1.reserveRoom(room94);
        Room room96 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass97 = room96.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room94);
        org.junit.Assert.assertNull(room96);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2335");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room43 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room48 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room48);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2336");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel22 = new Hotel(0);
        hotel22.displayRoomStatus();
        Room room24 = hotel22.findAvailableRoom();
        Room room25 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Room room31 = hotel28.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        hotel33.displayRoomStatus();
        Room room35 = hotel33.findAvailableRoom();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel33.reserveRoom(room55);
        hotel33.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel70.reserveRoom(room79);
        hotel61.reserveRoom(room79);
        hotel33.reserveRoom(room79);
        hotel28.reserveRoom(room79);
        Room room84 = hotel28.findAvailableRoom();
        hotel22.reserveRoom(room84);
        hotel22.displayRoomStatus();
        hotel22.displayRoomStatus();
        hotel22.displayRoomStatus();
        Hotel hotel90 = new Hotel((int) 'a');
        hotel90.displayRoomStatus();
        Room room92 = hotel90.findAvailableRoom();
        hotel22.reserveRoom(room92);
        hotel1.reserveRoom(room92);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room92);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2337");
        Hotel hotel1 = new Hotel(0);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Room room5 = hotel3.findAvailableRoom();
        Room room6 = hotel3.findAvailableRoom();
        Room room7 = hotel3.findAvailableRoom();
        Hotel hotel9 = new Hotel(1);
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel15.reserveRoom(room50);
        hotel12.reserveRoom(room50);
        hotel9.reserveRoom(room50);
        hotel3.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        java.lang.Class<?> wildcardClass59 = hotel1.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2338");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        hotel23.reserveRoom(room45);
        hotel23.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel23.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        hotel1.displayRoomStatus();
        Room room75 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room75);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2339");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Hotel hotel37 = new Hotel((int) 'a');
        hotel37.displayRoomStatus();
        Room room39 = hotel37.findAvailableRoom();
        hotel15.reserveRoom(room39);
        Room room41 = hotel15.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) 'a');
        hotel43.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel43.reserveRoom(room51);
        Room room54 = hotel43.findAvailableRoom();
        Room room55 = hotel43.findAvailableRoom();
        hotel15.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        hotel1.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (short) 1);
        Hotel hotel62 = new Hotel((int) (short) 0);
        Room room63 = hotel62.findAvailableRoom();
        Hotel hotel65 = new Hotel(10);
        Room room66 = hotel65.findAvailableRoom();
        hotel62.reserveRoom(room66);
        hotel60.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        Hotel hotel71 = new Hotel((int) ' ');
        Hotel hotel73 = new Hotel((int) (short) 0);
        Room room74 = hotel73.findAvailableRoom();
        Hotel hotel76 = new Hotel(10);
        Room room77 = hotel76.findAvailableRoom();
        hotel73.reserveRoom(room77);
        hotel71.reserveRoom(room77);
        Hotel hotel81 = new Hotel((int) (short) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel71.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room82);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2340");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Hotel hotel27 = new Hotel(10);
        Room room28 = hotel27.findAvailableRoom();
        hotel24.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Room room36 = hotel33.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        hotel38.displayRoomStatus();
        Room room40 = hotel38.findAvailableRoom();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel38.reserveRoom(room60);
        hotel38.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) -1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel66.reserveRoom(room71);
        hotel66.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel75.reserveRoom(room84);
        hotel66.reserveRoom(room84);
        hotel38.reserveRoom(room84);
        hotel33.reserveRoom(room84);
        hotel1.reserveRoom(room84);
        Room room90 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass92 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNull(room90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2341");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room43 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room46);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2342");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        Room room36 = hotel1.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        hotel60.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        hotel69.displayRoomStatus();
        Hotel hotel78 = new Hotel((int) (byte) -1);
        Room room79 = hotel78.findAvailableRoom();
        hotel78.displayRoomStatus();
        Hotel hotel82 = new Hotel((int) (byte) 1);
        Room room83 = hotel82.findAvailableRoom();
        hotel78.reserveRoom(room83);
        Hotel hotel86 = new Hotel((int) (byte) 1);
        Room room87 = hotel86.findAvailableRoom();
        hotel78.reserveRoom(room87);
        hotel69.reserveRoom(room87);
        hotel60.reserveRoom(room87);
        hotel38.reserveRoom(room87);
        Hotel hotel93 = new Hotel((int) (byte) 1);
        Room room94 = hotel93.findAvailableRoom();
        hotel93.displayRoomStatus();
        Room room96 = hotel93.findAvailableRoom();
        hotel38.reserveRoom(room96);
        hotel1.reserveRoom(room96);
        java.lang.Class<?> wildcardClass99 = room96.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNull(room79);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room94);
        org.junit.Assert.assertNotNull(room96);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2343");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        Room room51 = hotel1.findAvailableRoom();
        Room room52 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 10);
        Room room59 = hotel58.findAvailableRoom();
        hotel1.reserveRoom(room59);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room59);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2344");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) 'a');
        hotel4.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel4.reserveRoom(room12);
        Room room15 = hotel4.findAvailableRoom();
        Room room16 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room16);
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room18);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2345");
        Hotel hotel1 = new Hotel((int) (short) 10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(0);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        Hotel hotel10 = new Hotel(0);
        hotel10.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel5.reserveRoom(room14);
        Hotel hotel18 = new Hotel((int) (short) 0);
        Room room19 = hotel18.findAvailableRoom();
        Hotel hotel21 = new Hotel(10);
        Room room22 = hotel21.findAvailableRoom();
        hotel18.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Room room28 = hotel25.findAvailableRoom();
        hotel18.reserveRoom(room28);
        hotel5.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room32 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass33 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2346");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel(0);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Room room12 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        hotel9.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) ' ');
        Hotel hotel18 = new Hotel((int) (short) 0);
        Room room19 = hotel18.findAvailableRoom();
        Hotel hotel21 = new Hotel(10);
        Room room22 = hotel21.findAvailableRoom();
        hotel18.reserveRoom(room22);
        hotel16.reserveRoom(room22);
        hotel9.reserveRoom(room22);
        hotel1.reserveRoom(room22);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room22);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2347");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Room room37 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        hotel49.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel58.reserveRoom(room67);
        hotel49.reserveRoom(room67);
        hotel40.reserveRoom(room67);
        Hotel hotel72 = new Hotel((int) 'a');
        hotel72.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        hotel72.reserveRoom(room80);
        Room room83 = hotel72.findAvailableRoom();
        hotel40.reserveRoom(room83);
        hotel34.reserveRoom(room83);
        hotel1.reserveRoom(room83);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room83);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2348");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) 'a');
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel9.reserveRoom(room17);
        hotel9.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel26.reserveRoom(room57);
        hotel22.reserveRoom(room57);
        hotel9.reserveRoom(room57);
        hotel6.reserveRoom(room57);
        hotel1.reserveRoom(room57);
        hotel1.displayRoomStatus();
        Room room65 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2349");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        hotel4.reserveRoom(room26);
        hotel4.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel4.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        Hotel hotel46 = new Hotel(0);
        hotel46.displayRoomStatus();
        Room room48 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel51 = new Hotel(10);
        Room room52 = hotel51.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        hotel54.displayRoomStatus();
        Room room56 = hotel54.findAvailableRoom();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel67.reserveRoom(room76);
        hotel58.reserveRoom(room76);
        hotel54.reserveRoom(room76);
        hotel54.displayRoomStatus();
        Hotel hotel82 = new Hotel((int) (byte) -1);
        Room room83 = hotel82.findAvailableRoom();
        hotel82.displayRoomStatus();
        Hotel hotel86 = new Hotel((int) (byte) 1);
        Room room87 = hotel86.findAvailableRoom();
        hotel82.reserveRoom(room87);
        Hotel hotel90 = new Hotel((int) (byte) 1);
        Room room91 = hotel90.findAvailableRoom();
        hotel82.reserveRoom(room91);
        hotel54.reserveRoom(room91);
        hotel51.reserveRoom(room91);
        hotel46.reserveRoom(room91);
        hotel1.reserveRoom(room91);
        java.lang.Class<?> wildcardClass97 = room91.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room91);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2350");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass49 = hotel1.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2351");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        hotel70.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) -1);
        Room room80 = hotel79.findAvailableRoom();
        hotel79.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel79.reserveRoom(room84);
        Hotel hotel87 = new Hotel((int) (byte) 1);
        Room room88 = hotel87.findAvailableRoom();
        hotel79.reserveRoom(room88);
        hotel70.reserveRoom(room88);
        hotel61.reserveRoom(room88);
        hotel39.reserveRoom(room88);
        hotel1.reserveRoom(room88);
        java.lang.Class<?> wildcardClass94 = room88.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2352");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel(0);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Room room10 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) ' ');
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel(10);
        Room room20 = hotel19.findAvailableRoom();
        hotel16.reserveRoom(room20);
        hotel14.reserveRoom(room20);
        hotel7.reserveRoom(room20);
        hotel1.reserveRoom(room20);
        Room room25 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass26 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2353");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Hotel hotel27 = new Hotel(10);
        Room room28 = hotel27.findAvailableRoom();
        hotel24.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        Room room32 = hotel1.findAvailableRoom();
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel62.reserveRoom(room71);
        hotel40.reserveRoom(room71);
        hotel36.reserveRoom(room71);
        hotel36.displayRoomStatus();
        hotel36.displayRoomStatus();
        hotel36.displayRoomStatus();
        Room room78 = hotel36.findAvailableRoom();
        Hotel hotel80 = new Hotel((int) (short) -1);
        hotel80.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) -1);
        Room room84 = hotel83.findAvailableRoom();
        hotel83.displayRoomStatus();
        hotel83.displayRoomStatus();
        hotel83.displayRoomStatus();
        Room room88 = hotel83.findAvailableRoom();
        Hotel hotel90 = new Hotel(10);
        Room room91 = hotel90.findAvailableRoom();
        hotel83.reserveRoom(room91);
        hotel80.reserveRoom(room91);
        hotel36.reserveRoom(room91);
        hotel1.reserveRoom(room91);
        hotel1.displayRoomStatus();
        Room room97 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNull(room88);
        org.junit.Assert.assertNotNull(room91);
        org.junit.Assert.assertNull(room97);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2354");
        Hotel hotel1 = new Hotel((int) (short) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel6.reserveRoom(room15);
        Room room17 = hotel6.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel4.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room36 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = room36.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room36);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2355");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        Room room43 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (short) 0);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        hotel46.displayRoomStatus();
        Room room50 = hotel46.findAvailableRoom();
        Room room51 = hotel46.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) '4');
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        hotel59.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) -1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel68.reserveRoom(room73);
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel68.reserveRoom(room77);
        hotel59.reserveRoom(room77);
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel81.reserveRoom(room90);
        hotel59.reserveRoom(room90);
        hotel55.reserveRoom(room90);
        hotel53.reserveRoom(room90);
        Room room95 = hotel53.findAvailableRoom();
        hotel46.reserveRoom(room95);
        hotel1.reserveRoom(room95);
        Room room98 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room95);
        org.junit.Assert.assertNull(room98);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2356");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) ' ');
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel9.reserveRoom(room14);
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel9.reserveRoom(room18);
        Room room20 = hotel9.findAvailableRoom();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        hotel9.displayRoomStatus();
        Room room36 = hotel9.findAvailableRoom();
        Room room37 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (short) 0);
        Room room41 = hotel40.findAvailableRoom();
        Room room42 = hotel40.findAvailableRoom();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        hotel44.displayRoomStatus();
        Room room46 = hotel44.findAvailableRoom();
        Hotel hotel48 = new Hotel((int) (byte) 0);
        Hotel hotel50 = new Hotel(0);
        hotel50.displayRoomStatus();
        Room room52 = hotel50.findAvailableRoom();
        Room room53 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        hotel50.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) ' ');
        Hotel hotel59 = new Hotel((int) (short) 0);
        Room room60 = hotel59.findAvailableRoom();
        Hotel hotel62 = new Hotel(10);
        Room room63 = hotel62.findAvailableRoom();
        hotel59.reserveRoom(room63);
        hotel57.reserveRoom(room63);
        hotel50.reserveRoom(room63);
        hotel48.reserveRoom(room63);
        hotel44.reserveRoom(room63);
        hotel40.reserveRoom(room63);
        hotel9.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room63);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2357");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel21.reserveRoom(room52);
        hotel17.reserveRoom(room52);
        hotel8.reserveRoom(room52);
        Room room57 = hotel8.findAvailableRoom();
        Hotel hotel59 = new Hotel((int) (short) 1);
        Hotel hotel61 = new Hotel((int) (short) 0);
        Room room62 = hotel61.findAvailableRoom();
        Hotel hotel64 = new Hotel(10);
        Room room65 = hotel64.findAvailableRoom();
        hotel61.reserveRoom(room65);
        hotel59.reserveRoom(room65);
        Room room68 = hotel59.findAvailableRoom();
        hotel8.reserveRoom(room68);
        hotel1.reserveRoom(room68);
        Room room71 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room71);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2358");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        Room room13 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room15 = hotel1.findAvailableRoom();
        Room room16 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass17 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2359");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel55 = new Hotel(100);
        hotel55.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (short) -1);
        hotel58.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        hotel61.displayRoomStatus();
        hotel61.displayRoomStatus();
        Room room66 = hotel61.findAvailableRoom();
        Hotel hotel68 = new Hotel(10);
        Room room69 = hotel68.findAvailableRoom();
        hotel61.reserveRoom(room69);
        hotel58.reserveRoom(room69);
        hotel55.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        Room room74 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2360");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Room room36 = hotel15.findAvailableRoom();
        Room room37 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Room room39 = hotel15.findAvailableRoom();
        Hotel hotel41 = new Hotel((int) (short) 1);
        Hotel hotel43 = new Hotel((int) (short) 0);
        Room room44 = hotel43.findAvailableRoom();
        Hotel hotel46 = new Hotel(10);
        Room room47 = hotel46.findAvailableRoom();
        hotel43.reserveRoom(room47);
        hotel41.reserveRoom(room47);
        hotel41.displayRoomStatus();
        hotel41.displayRoomStatus();
        Hotel hotel53 = new Hotel(10);
        Room room54 = hotel53.findAvailableRoom();
        Room room55 = hotel53.findAvailableRoom();
        Hotel hotel57 = new Hotel((int) (short) 0);
        Room room58 = hotel57.findAvailableRoom();
        Room room59 = hotel57.findAvailableRoom();
        Room room60 = hotel57.findAvailableRoom();
        Room room61 = hotel57.findAvailableRoom();
        Hotel hotel63 = new Hotel(0);
        hotel63.displayRoomStatus();
        Room room65 = hotel63.findAvailableRoom();
        Room room66 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) ' ');
        Hotel hotel72 = new Hotel((int) (short) 0);
        Room room73 = hotel72.findAvailableRoom();
        Hotel hotel75 = new Hotel(10);
        Room room76 = hotel75.findAvailableRoom();
        hotel72.reserveRoom(room76);
        hotel70.reserveRoom(room76);
        hotel63.reserveRoom(room76);
        hotel57.reserveRoom(room76);
        hotel53.reserveRoom(room76);
        hotel41.reserveRoom(room76);
        hotel15.reserveRoom(room76);
        hotel1.reserveRoom(room76);
        Room room85 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room85);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2361");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        Room room36 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass38 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2362");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel7.reserveRoom(room16);
        hotel1.reserveRoom(room16);
        Room room19 = hotel1.findAvailableRoom();
        Room room20 = hotel1.findAvailableRoom();
        Hotel hotel22 = new Hotel(100);
        hotel22.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (short) -1);
        hotel25.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        hotel28.displayRoomStatus();
        hotel28.displayRoomStatus();
        Room room33 = hotel28.findAvailableRoom();
        Hotel hotel35 = new Hotel(10);
        Room room36 = hotel35.findAvailableRoom();
        hotel28.reserveRoom(room36);
        hotel25.reserveRoom(room36);
        hotel22.reserveRoom(room36);
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        hotel54.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel63.reserveRoom(room72);
        hotel54.reserveRoom(room72);
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel54.reserveRoom(room85);
        hotel50.reserveRoom(room85);
        hotel41.reserveRoom(room85);
        hotel22.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2363");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Room room14 = hotel11.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel20.reserveRoom(room38);
        hotel16.reserveRoom(room38);
        hotel16.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        hotel44.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel53.reserveRoom(room62);
        hotel44.reserveRoom(room62);
        hotel16.reserveRoom(room62);
        hotel11.reserveRoom(room62);
        Room room67 = hotel11.findAvailableRoom();
        Room room68 = hotel11.findAvailableRoom();
        hotel1.reserveRoom(room68);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room68);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2364");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        Room room51 = hotel1.findAvailableRoom();
        Room room52 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2365");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2366");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel(0);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Room room10 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) ' ');
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel(10);
        Room room20 = hotel19.findAvailableRoom();
        hotel16.reserveRoom(room20);
        hotel14.reserveRoom(room20);
        hotel7.reserveRoom(room20);
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Room room26 = hotel7.findAvailableRoom();
        Room room27 = hotel7.findAvailableRoom();
        Room room28 = hotel7.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (short) 1);
        Hotel hotel32 = new Hotel((int) (byte) -1);
        hotel32.displayRoomStatus();
        Room room34 = hotel32.findAvailableRoom();
        Room room35 = hotel32.findAvailableRoom();
        Room room36 = hotel32.findAvailableRoom();
        Room room37 = hotel32.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        Hotel hotel61 = new Hotel((int) 'a');
        hotel61.displayRoomStatus();
        Room room63 = hotel61.findAvailableRoom();
        hotel39.reserveRoom(room63);
        hotel39.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (short) 10);
        Room room68 = hotel67.findAvailableRoom();
        hotel39.reserveRoom(room68);
        hotel32.reserveRoom(room68);
        hotel30.reserveRoom(room68);
        hotel7.reserveRoom(room68);
        hotel1.reserveRoom(room68);
        Hotel hotel75 = new Hotel(0);
        hotel75.displayRoomStatus();
        Room room77 = hotel75.findAvailableRoom();
        Room room78 = hotel75.findAvailableRoom();
        Room room79 = hotel75.findAvailableRoom();
        Hotel hotel81 = new Hotel((int) (byte) -1);
        hotel81.displayRoomStatus();
        Room room83 = hotel81.findAvailableRoom();
        Room room84 = hotel81.findAvailableRoom();
        Hotel hotel86 = new Hotel((int) (byte) -1);
        Room room87 = hotel86.findAvailableRoom();
        hotel86.displayRoomStatus();
        Hotel hotel90 = new Hotel((int) (byte) 1);
        Room room91 = hotel90.findAvailableRoom();
        hotel86.reserveRoom(room91);
        hotel81.reserveRoom(room91);
        hotel75.reserveRoom(room91);
        hotel1.reserveRoom(room91);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNull(room79);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNull(room87);
        org.junit.Assert.assertNotNull(room91);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2367");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel9.reserveRoom(room55);
        hotel4.reserveRoom(room55);
        Room room60 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room62 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room64 = hotel4.findAvailableRoom();
        Room room65 = hotel4.findAvailableRoom();
        Room room66 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room66);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room66);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2368");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel7.reserveRoom(room16);
        hotel1.reserveRoom(room16);
        hotel1.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 10);
        Room room22 = hotel21.findAvailableRoom();
        Room room23 = hotel21.findAvailableRoom();
        Hotel hotel25 = new Hotel(1);
        hotel25.displayRoomStatus();
        Hotel hotel28 = new Hotel(10);
        Room room29 = hotel28.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel39.reserveRoom(room66);
        hotel31.reserveRoom(room66);
        hotel28.reserveRoom(room66);
        hotel25.reserveRoom(room66);
        hotel21.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        java.lang.Class<?> wildcardClass75 = room66.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2369");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) 'a');
        hotel11.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel11.reserveRoom(room19);
        Room room22 = hotel11.findAvailableRoom();
        Room room23 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Room room30 = hotel27.findAvailableRoom();
        hotel1.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) -1);
        hotel33.displayRoomStatus();
        Room room35 = hotel33.findAvailableRoom();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel33.reserveRoom(room55);
        hotel33.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        Hotel hotel69 = new Hotel((int) (byte) 1);
        Room room70 = hotel69.findAvailableRoom();
        hotel61.reserveRoom(room70);
        hotel33.reserveRoom(room70);
        hotel1.reserveRoom(room70);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room76 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room70);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2370");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel(0);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Room room10 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) ' ');
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel(10);
        Room room20 = hotel19.findAvailableRoom();
        hotel16.reserveRoom(room20);
        hotel14.reserveRoom(room20);
        hotel7.reserveRoom(room20);
        hotel1.reserveRoom(room20);
        hotel1.displayRoomStatus();
        Room room26 = hotel1.findAvailableRoom();
        Hotel hotel28 = new Hotel((int) ' ');
        Hotel hotel30 = new Hotel((int) 'a');
        hotel30.displayRoomStatus();
        Room room32 = hotel30.findAvailableRoom();
        hotel28.reserveRoom(room32);
        Room room34 = hotel28.findAvailableRoom();
        Room room35 = hotel28.findAvailableRoom();
        Hotel hotel37 = new Hotel(0);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        hotel37.displayRoomStatus();
        Room room41 = hotel37.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        hotel43.displayRoomStatus();
        Room room45 = hotel43.findAvailableRoom();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        hotel47.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel56.reserveRoom(room61);
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel56.reserveRoom(room65);
        hotel47.reserveRoom(room65);
        hotel43.reserveRoom(room65);
        hotel43.displayRoomStatus();
        Room room70 = hotel43.findAvailableRoom();
        Hotel hotel72 = new Hotel((int) (short) 100);
        Room room73 = hotel72.findAvailableRoom();
        hotel43.reserveRoom(room73);
        hotel37.reserveRoom(room73);
        hotel28.reserveRoom(room73);
        hotel1.reserveRoom(room73);
        java.lang.Class<?> wildcardClass78 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2371");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass6 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2372");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass10 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2373");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel(1);
        hotel10.displayRoomStatus();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel23.reserveRoom(room41);
        hotel14.reserveRoom(room41);
        hotel10.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) ' ');
        Hotel hotel54 = new Hotel((int) (short) 0);
        Room room55 = hotel54.findAvailableRoom();
        Hotel hotel57 = new Hotel(10);
        Room room58 = hotel57.findAvailableRoom();
        hotel54.reserveRoom(room58);
        hotel52.reserveRoom(room58);
        Room room61 = hotel52.findAvailableRoom();
        Room room62 = hotel52.findAvailableRoom();
        Room room63 = hotel52.findAvailableRoom();
        hotel1.reserveRoom(room63);
        java.lang.Class<?> wildcardClass65 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2374");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        hotel24.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel24.reserveRoom(room42);
        hotel15.reserveRoom(room42);
        hotel7.reserveRoom(room42);
        hotel4.reserveRoom(room42);
        hotel1.reserveRoom(room42);
        Room room49 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room49);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2375");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        Hotel hotel32 = new Hotel((int) 'a');
        hotel32.displayRoomStatus();
        Room room34 = hotel32.findAvailableRoom();
        hotel10.reserveRoom(room34);
        hotel1.reserveRoom(room34);
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room38);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2376");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room11 = hotel8.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel13.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel13.reserveRoom(room59);
        hotel8.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room69 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room69);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2377");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        hotel4.reserveRoom(room26);
        hotel4.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel4.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        Room room45 = hotel1.findAvailableRoom();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel1.reserveRoom(room48);
        Room room50 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass51 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2378");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room32 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2379");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Room room42 = hotel39.findAvailableRoom();
        Room room43 = hotel39.findAvailableRoom();
        hotel1.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Room room53 = hotel46.findAvailableRoom();
        Room room54 = hotel46.findAvailableRoom();
        Hotel hotel56 = new Hotel((int) (short) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Room room59 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Room room61 = hotel56.findAvailableRoom();
        hotel46.reserveRoom(room61);
        hotel1.reserveRoom(room61);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2380");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel(0);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Room room10 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) ' ');
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel(10);
        Room room20 = hotel19.findAvailableRoom();
        hotel16.reserveRoom(room20);
        hotel14.reserveRoom(room20);
        hotel7.reserveRoom(room20);
        hotel1.reserveRoom(room20);
        hotel1.displayRoomStatus();
        Room room26 = hotel1.findAvailableRoom();
        Hotel hotel28 = new Hotel(10);
        hotel28.displayRoomStatus();
        Room room30 = hotel28.findAvailableRoom();
        Hotel hotel32 = new Hotel(0);
        Room room33 = hotel32.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) ' ');
        Hotel hotel37 = new Hotel((int) (short) 0);
        Room room38 = hotel37.findAvailableRoom();
        Hotel hotel40 = new Hotel(10);
        Room room41 = hotel40.findAvailableRoom();
        hotel37.reserveRoom(room41);
        hotel35.reserveRoom(room41);
        Room room44 = hotel35.findAvailableRoom();
        hotel32.reserveRoom(room44);
        hotel28.reserveRoom(room44);
        Room room47 = hotel28.findAvailableRoom();
        hotel1.reserveRoom(room47);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room47);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2381");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Room room6 = hotel3.findAvailableRoom();
        Room room7 = hotel3.findAvailableRoom();
        Room room8 = hotel3.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        Hotel hotel32 = new Hotel((int) 'a');
        hotel32.displayRoomStatus();
        Room room34 = hotel32.findAvailableRoom();
        hotel10.reserveRoom(room34);
        hotel10.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (short) 10);
        Room room39 = hotel38.findAvailableRoom();
        hotel10.reserveRoom(room39);
        hotel3.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        hotel1.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (short) 0);
        Room room46 = hotel45.findAvailableRoom();
        Room room47 = hotel45.findAvailableRoom();
        Room room48 = hotel45.findAvailableRoom();
        Room room49 = hotel45.findAvailableRoom();
        Hotel hotel51 = new Hotel(0);
        hotel51.displayRoomStatus();
        Room room53 = hotel51.findAvailableRoom();
        Room room54 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        hotel51.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) ' ');
        Hotel hotel60 = new Hotel((int) (short) 0);
        Room room61 = hotel60.findAvailableRoom();
        Hotel hotel63 = new Hotel(10);
        Room room64 = hotel63.findAvailableRoom();
        hotel60.reserveRoom(room64);
        hotel58.reserveRoom(room64);
        hotel51.reserveRoom(room64);
        hotel45.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room64);
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2382");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        Room room11 = hotel1.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        hotel13.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) 'a');
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel20.reserveRoom(room47);
        hotel16.reserveRoom(room47);
        hotel13.reserveRoom(room47);
        Hotel hotel54 = new Hotel((int) (short) 0);
        Room room55 = hotel54.findAvailableRoom();
        Hotel hotel57 = new Hotel(10);
        Room room58 = hotel57.findAvailableRoom();
        hotel54.reserveRoom(room58);
        hotel13.reserveRoom(room58);
        hotel1.reserveRoom(room58);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room58);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2383");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room7);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2384");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        Room room12 = hotel8.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel8.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        java.lang.Class<?> wildcardClass50 = room45.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2385");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel(1);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        hotel6.reserveRoom(room37);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Room room44 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room44);
        java.lang.Class<?> wildcardClass46 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2386");
        Hotel hotel1 = new Hotel((int) (short) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel6.reserveRoom(room15);
        Room room17 = hotel6.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel4.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room36 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass37 = hotel1.getClass();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2387");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(0);
        Room room6 = hotel5.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        Room room17 = hotel8.findAvailableRoom();
        hotel5.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2388");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Room room23 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2389");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel(0);
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        Room room11 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) ' ');
        Hotel hotel17 = new Hotel((int) (short) 0);
        Room room18 = hotel17.findAvailableRoom();
        Hotel hotel20 = new Hotel(10);
        Room room21 = hotel20.findAvailableRoom();
        hotel17.reserveRoom(room21);
        hotel15.reserveRoom(room21);
        hotel8.reserveRoom(room21);
        hotel8.displayRoomStatus();
        Hotel hotel27 = new Hotel((-1));
        Hotel hotel29 = new Hotel((int) (byte) -1);
        hotel29.displayRoomStatus();
        Room room31 = hotel29.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel33.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel42.reserveRoom(room51);
        hotel33.reserveRoom(room51);
        hotel29.reserveRoom(room51);
        hotel27.reserveRoom(room51);
        Hotel hotel57 = new Hotel(0);
        hotel57.displayRoomStatus();
        Room room59 = hotel57.findAvailableRoom();
        Room room60 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        hotel57.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) ' ');
        Hotel hotel66 = new Hotel((int) (short) 0);
        Room room67 = hotel66.findAvailableRoom();
        Hotel hotel69 = new Hotel(10);
        Room room70 = hotel69.findAvailableRoom();
        hotel66.reserveRoom(room70);
        hotel64.reserveRoom(room70);
        hotel57.reserveRoom(room70);
        hotel27.reserveRoom(room70);
        hotel8.reserveRoom(room70);
        hotel1.reserveRoom(room70);
        Room room77 = hotel1.findAvailableRoom();
        Room room78 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNull(room78);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2390");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2391");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        hotel7.reserveRoom(room29);
        hotel7.displayRoomStatus();
        Room room34 = hotel7.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (short) 100);
        Room room37 = hotel36.findAvailableRoom();
        hotel7.reserveRoom(room37);
        hotel1.reserveRoom(room37);
        java.lang.Class<?> wildcardClass40 = room37.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2392");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        hotel42.displayRoomStatus();
        Room room44 = hotel42.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        hotel42.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        hotel1.displayRoomStatus();
        Room room70 = hotel1.findAvailableRoom();
        Room room71 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room71);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2393");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel3.reserveRoom(room8);
        hotel3.displayRoomStatus();
        hotel3.displayRoomStatus();
        Room room12 = hotel3.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (short) 0);
        Room room15 = hotel14.findAvailableRoom();
        Hotel hotel17 = new Hotel(10);
        Room room18 = hotel17.findAvailableRoom();
        hotel14.reserveRoom(room18);
        Hotel hotel21 = new Hotel((int) (short) 0);
        Room room22 = hotel21.findAvailableRoom();
        Hotel hotel24 = new Hotel(10);
        Room room25 = hotel24.findAvailableRoom();
        hotel21.reserveRoom(room25);
        hotel21.displayRoomStatus();
        Hotel hotel29 = new Hotel(10);
        Room room30 = hotel29.findAvailableRoom();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        hotel32.displayRoomStatus();
        Room room34 = hotel32.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        hotel32.reserveRoom(room54);
        hotel32.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel32.reserveRoom(room69);
        hotel29.reserveRoom(room69);
        Room room73 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room73);
        hotel14.reserveRoom(room73);
        hotel3.reserveRoom(room73);
        hotel1.reserveRoom(room73);
        Room room78 = hotel1.findAvailableRoom();
        Room room79 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNull(room79);
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2394");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        Room room63 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room67 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room69 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass70 = room69.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room69);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2395");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room11 = hotel8.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel13.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel13.reserveRoom(room59);
        hotel8.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (short) 0);
        Room room68 = hotel67.findAvailableRoom();
        Hotel hotel70 = new Hotel(10);
        Room room71 = hotel70.findAvailableRoom();
        hotel67.reserveRoom(room71);
        hotel1.reserveRoom(room71);
        Room room74 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room76 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNull(room76);
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2396");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room54 = hotel1.findAvailableRoom();
        Room room55 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNull(room55);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2397");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(0);
        Room room6 = hotel5.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        Room room17 = hotel8.findAvailableRoom();
        hotel5.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        hotel1.displayRoomStatus();
        Room room21 = hotel1.findAvailableRoom();
        Hotel hotel23 = new Hotel(10);
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        Hotel hotel27 = new Hotel(0);
        Room room28 = hotel27.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) ' ');
        Hotel hotel32 = new Hotel((int) (short) 0);
        Room room33 = hotel32.findAvailableRoom();
        Hotel hotel35 = new Hotel(10);
        Room room36 = hotel35.findAvailableRoom();
        hotel32.reserveRoom(room36);
        hotel30.reserveRoom(room36);
        Room room39 = hotel30.findAvailableRoom();
        hotel27.reserveRoom(room39);
        hotel23.reserveRoom(room39);
        Room room42 = hotel23.findAvailableRoom();
        Room room43 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room43);
        java.lang.Class<?> wildcardClass45 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2398");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel1.reserveRoom(room11);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel(1);
        hotel26.displayRoomStatus();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        hotel30.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel30.reserveRoom(room57);
        hotel26.reserveRoom(room57);
        hotel17.reserveRoom(room57);
        hotel17.displayRoomStatus();
        hotel17.displayRoomStatus();
        Hotel hotel66 = new Hotel(100);
        hotel66.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (short) -1);
        hotel69.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        hotel72.displayRoomStatus();
        hotel72.displayRoomStatus();
        Room room77 = hotel72.findAvailableRoom();
        Hotel hotel79 = new Hotel(10);
        Room room80 = hotel79.findAvailableRoom();
        hotel72.reserveRoom(room80);
        hotel69.reserveRoom(room80);
        hotel66.reserveRoom(room80);
        hotel17.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room80);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2399");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(0);
        hotel6.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel20.reserveRoom(room38);
        hotel16.reserveRoom(room38);
        Room room42 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) ' ');
        Hotel hotel47 = new Hotel((int) 'a');
        hotel47.displayRoomStatus();
        Room room49 = hotel47.findAvailableRoom();
        hotel45.reserveRoom(room49);
        hotel16.reserveRoom(room49);
        hotel1.reserveRoom(room49);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room55 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass56 = room55.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room55);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2400");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel(1);
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        Hotel hotel14 = new Hotel(10);
        Room room15 = hotel14.findAvailableRoom();
        Room room16 = hotel14.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (short) 0);
        Room room19 = hotel18.findAvailableRoom();
        Room room20 = hotel18.findAvailableRoom();
        Room room21 = hotel18.findAvailableRoom();
        Room room22 = hotel18.findAvailableRoom();
        Hotel hotel24 = new Hotel(0);
        hotel24.displayRoomStatus();
        Room room26 = hotel24.findAvailableRoom();
        Room room27 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        hotel24.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) ' ');
        Hotel hotel33 = new Hotel((int) (short) 0);
        Room room34 = hotel33.findAvailableRoom();
        Hotel hotel36 = new Hotel(10);
        Room room37 = hotel36.findAvailableRoom();
        hotel33.reserveRoom(room37);
        hotel31.reserveRoom(room37);
        hotel24.reserveRoom(room37);
        hotel18.reserveRoom(room37);
        hotel14.reserveRoom(room37);
        hotel8.reserveRoom(room37);
        Room room44 = hotel8.findAvailableRoom();
        hotel1.reserveRoom(room44);
        java.lang.Class<?> wildcardClass46 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2401");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room28 = hotel1.findAvailableRoom();
        Room room29 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (short) 0);
        Room room33 = hotel32.findAvailableRoom();
        Room room34 = hotel32.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        hotel36.displayRoomStatus();
        Room room38 = hotel36.findAvailableRoom();
        Hotel hotel40 = new Hotel((int) (byte) 0);
        Hotel hotel42 = new Hotel(0);
        hotel42.displayRoomStatus();
        Room room44 = hotel42.findAvailableRoom();
        Room room45 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) ' ');
        Hotel hotel51 = new Hotel((int) (short) 0);
        Room room52 = hotel51.findAvailableRoom();
        Hotel hotel54 = new Hotel(10);
        Room room55 = hotel54.findAvailableRoom();
        hotel51.reserveRoom(room55);
        hotel49.reserveRoom(room55);
        hotel42.reserveRoom(room55);
        hotel40.reserveRoom(room55);
        hotel36.reserveRoom(room55);
        hotel32.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room63 = hotel1.findAvailableRoom();
        Room room64 = hotel1.findAvailableRoom();
        Room room65 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNull(room65);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2402");
        Hotel hotel1 = new Hotel((int) (byte) 10);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2403");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        hotel11.reserveRoom(room33);
        hotel11.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel39.reserveRoom(room48);
        hotel11.reserveRoom(room48);
        Room room51 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        hotel54.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        Room room68 = hotel57.findAvailableRoom();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel70.reserveRoom(room79);
        hotel57.reserveRoom(room79);
        hotel54.reserveRoom(room79);
        hotel11.reserveRoom(room79);
        hotel1.reserveRoom(room79);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room79);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2404");
        Hotel hotel1 = new Hotel((int) (byte) 100);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel9.reserveRoom(room55);
        hotel4.reserveRoom(room55);
        Room room60 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room62 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room64 = hotel4.findAvailableRoom();
        Hotel hotel66 = new Hotel(0);
        hotel66.displayRoomStatus();
        Room room68 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        hotel66.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel66.reserveRoom(room81);
        hotel4.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        Room room86 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room88 = hotel1.findAvailableRoom();
        Room room89 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(room89);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2405");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room14 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room14);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2406");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) 'a');
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel8.reserveRoom(room17);
        Room room19 = hotel8.findAvailableRoom();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel8.reserveRoom(room30);
        hotel6.reserveRoom(room30);
        Room room34 = hotel6.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        hotel44.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        hotel53.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel62.reserveRoom(room71);
        hotel53.reserveRoom(room71);
        hotel44.reserveRoom(room71);
        hotel36.reserveRoom(room71);
        hotel6.reserveRoom(room71);
        Room room77 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room77);
        hotel1.displayRoomStatus();
        Room room80 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room80);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2407");
        Hotel hotel1 = new Hotel((int) (byte) 10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) '#');
        Hotel hotel7 = new Hotel((int) (byte) -1);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        hotel7.reserveRoom(room29);
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Room room35 = hotel7.findAvailableRoom();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        hotel37.displayRoomStatus();
        Room room39 = hotel37.findAvailableRoom();
        Room room40 = hotel37.findAvailableRoom();
        Hotel hotel42 = new Hotel(1);
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        hotel55.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel64.reserveRoom(room73);
        hotel55.reserveRoom(room73);
        hotel46.reserveRoom(room73);
        hotel42.reserveRoom(room73);
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        Room room80 = hotel42.findAvailableRoom();
        hotel37.reserveRoom(room80);
        Room room82 = hotel37.findAvailableRoom();
        hotel7.reserveRoom(room82);
        hotel5.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        java.lang.Class<?> wildcardClass86 = room82.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2408");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(0);
        hotel5.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel5.reserveRoom(room9);
        hotel5.displayRoomStatus();
        Hotel hotel13 = new Hotel(10);
        hotel13.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) 'a');
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel20.reserveRoom(room47);
        hotel16.reserveRoom(room47);
        hotel13.reserveRoom(room47);
        hotel5.reserveRoom(room47);
        Room room54 = hotel5.findAvailableRoom();
        Hotel hotel56 = new Hotel((int) (short) 10);
        Room room57 = hotel56.findAvailableRoom();
        Room room58 = hotel56.findAvailableRoom();
        hotel5.reserveRoom(room58);
        hotel1.reserveRoom(room58);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room63 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2409");
        Hotel hotel1 = new Hotel((int) (short) 100);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel9.reserveRoom(room14);
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        hotel17.reserveRoom(room44);
        hotel9.reserveRoom(room44);
        hotel6.reserveRoom(room44);
        hotel1.reserveRoom(room44);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2410");
        Hotel hotel1 = new Hotel((int) (short) 10);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(0);
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel40.reserveRoom(room49);
        hotel12.reserveRoom(room49);
        hotel9.reserveRoom(room49);
        hotel4.reserveRoom(room49);
        hotel4.displayRoomStatus();
        hotel4.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel4.reserveRoom(room58);
        hotel1.reserveRoom(room58);
        Room room61 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room63 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room63);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2411");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room8);
        Hotel hotel11 = new Hotel((int) (short) 1);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Room room15 = hotel11.findAvailableRoom();
        hotel1.reserveRoom(room15);
        Hotel hotel18 = new Hotel(0);
        Room room19 = hotel18.findAvailableRoom();
        Hotel hotel21 = new Hotel((int) ' ');
        Hotel hotel23 = new Hotel((int) (short) 0);
        Room room24 = hotel23.findAvailableRoom();
        Hotel hotel26 = new Hotel(10);
        Room room27 = hotel26.findAvailableRoom();
        hotel23.reserveRoom(room27);
        hotel21.reserveRoom(room27);
        Room room30 = hotel21.findAvailableRoom();
        hotel18.reserveRoom(room30);
        hotel1.reserveRoom(room30);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room30);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2412");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2413");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel8.reserveRoom(room35);
        hotel4.reserveRoom(room35);
        hotel1.reserveRoom(room35);
        Hotel hotel42 = new Hotel((int) (short) 0);
        Room room43 = hotel42.findAvailableRoom();
        Hotel hotel45 = new Hotel(10);
        Room room46 = hotel45.findAvailableRoom();
        hotel42.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room46);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2414");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        Room room48 = hotel1.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        hotel50.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel59.reserveRoom(room68);
        hotel50.reserveRoom(room68);
        Hotel hotel72 = new Hotel((int) 'a');
        hotel72.displayRoomStatus();
        Room room74 = hotel72.findAvailableRoom();
        hotel50.reserveRoom(room74);
        hotel1.reserveRoom(room74);
        Room room77 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room77);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2415");
        Hotel hotel1 = new Hotel(100);
        Hotel hotel3 = new Hotel((int) 'a');
        hotel3.displayRoomStatus();
        Hotel hotel6 = new Hotel((int) (byte) 1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Room room9 = hotel6.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        hotel11.reserveRoom(room33);
        hotel11.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel11.reserveRoom(room57);
        hotel6.reserveRoom(room57);
        Room room62 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Room room64 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Room room66 = hotel6.findAvailableRoom();
        Hotel hotel68 = new Hotel(0);
        hotel68.displayRoomStatus();
        Room room70 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        hotel68.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) -1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel74.reserveRoom(room79);
        Hotel hotel82 = new Hotel((int) (byte) 1);
        Room room83 = hotel82.findAvailableRoom();
        hotel74.reserveRoom(room83);
        hotel68.reserveRoom(room83);
        hotel6.reserveRoom(room83);
        hotel3.reserveRoom(room83);
        hotel1.reserveRoom(room83);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room83);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2416");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel(0);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Room room13 = hotel10.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Room room36 = hotel15.findAvailableRoom();
        Room room37 = hotel15.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Room room42 = hotel39.findAvailableRoom();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        hotel44.displayRoomStatus();
        Room room46 = hotel44.findAvailableRoom();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel44.reserveRoom(room66);
        hotel44.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        hotel72.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel81.reserveRoom(room90);
        hotel72.reserveRoom(room90);
        hotel44.reserveRoom(room90);
        hotel39.reserveRoom(room90);
        hotel15.reserveRoom(room90);
        hotel10.reserveRoom(room90);
        hotel1.reserveRoom(room90);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2417");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass7 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2418");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        hotel5.displayRoomStatus();
        Room room7 = hotel5.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel9.reserveRoom(room14);
        hotel9.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel18.reserveRoom(room27);
        hotel9.reserveRoom(room27);
        hotel5.reserveRoom(room27);
        Room room31 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        Room room34 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Room room45 = hotel42.findAvailableRoom();
        hotel39.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Room room51 = hotel48.findAvailableRoom();
        Room room52 = hotel48.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel48.reserveRoom(room55);
        hotel39.reserveRoom(room55);
        hotel5.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room60 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room60);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2419");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        Room room19 = hotel1.findAvailableRoom();
        Room room20 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room19);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2420");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass9 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2421");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) 'a');
        hotel8.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel8.reserveRoom(room16);
        hotel1.reserveRoom(room16);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2422");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room43 = hotel1.findAvailableRoom();
        Hotel hotel45 = new Hotel(100);
        hotel45.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (short) 0);
        Room room49 = hotel48.findAvailableRoom();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        hotel55.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel64.reserveRoom(room73);
        hotel55.reserveRoom(room73);
        Hotel hotel77 = new Hotel((int) (byte) -1);
        Room room78 = hotel77.findAvailableRoom();
        hotel77.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel77.reserveRoom(room82);
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel77.reserveRoom(room86);
        hotel55.reserveRoom(room86);
        hotel51.reserveRoom(room86);
        hotel48.reserveRoom(room86);
        hotel45.reserveRoom(room86);
        Room room92 = hotel45.findAvailableRoom();
        hotel1.reserveRoom(room92);
        hotel1.displayRoomStatus();
        Room room95 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNull(room95);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2423");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) 100);
        hotel10.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel19.reserveRoom(room50);
        hotel15.reserveRoom(room50);
        hotel15.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        hotel56.displayRoomStatus();
        Room room58 = hotel56.findAvailableRoom();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        hotel60.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel69.reserveRoom(room78);
        hotel60.reserveRoom(room78);
        hotel56.reserveRoom(room78);
        hotel15.reserveRoom(room78);
        hotel13.reserveRoom(room78);
        hotel10.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        Room room86 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass88 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2424");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass11 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2425");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel(0);
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel9.displayRoomStatus();
        Room room16 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Room room18 = hotel9.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) 10);
        hotel20.displayRoomStatus();
        hotel20.displayRoomStatus();
        Room room23 = hotel20.findAvailableRoom();
        Hotel hotel25 = new Hotel(0);
        hotel25.displayRoomStatus();
        Room room27 = hotel25.findAvailableRoom();
        Room room28 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        hotel25.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) ' ');
        Hotel hotel34 = new Hotel((int) (short) 0);
        Room room35 = hotel34.findAvailableRoom();
        Hotel hotel37 = new Hotel(10);
        Room room38 = hotel37.findAvailableRoom();
        hotel34.reserveRoom(room38);
        hotel32.reserveRoom(room38);
        hotel25.reserveRoom(room38);
        hotel25.displayRoomStatus();
        Hotel hotel44 = new Hotel((-1));
        Hotel hotel46 = new Hotel((int) (byte) -1);
        hotel46.displayRoomStatus();
        Room room48 = hotel46.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        hotel50.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel59.reserveRoom(room68);
        hotel50.reserveRoom(room68);
        hotel46.reserveRoom(room68);
        hotel44.reserveRoom(room68);
        Hotel hotel74 = new Hotel(0);
        hotel74.displayRoomStatus();
        Room room76 = hotel74.findAvailableRoom();
        Room room77 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        hotel74.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) ' ');
        Hotel hotel83 = new Hotel((int) (short) 0);
        Room room84 = hotel83.findAvailableRoom();
        Hotel hotel86 = new Hotel(10);
        Room room87 = hotel86.findAvailableRoom();
        hotel83.reserveRoom(room87);
        hotel81.reserveRoom(room87);
        hotel74.reserveRoom(room87);
        hotel44.reserveRoom(room87);
        hotel25.reserveRoom(room87);
        hotel20.reserveRoom(room87);
        hotel9.reserveRoom(room87);
        hotel1.reserveRoom(room87);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNotNull(room87);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2426");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room61 = hotel1.findAvailableRoom();
        Hotel hotel63 = new Hotel(0);
        hotel63.displayRoomStatus();
        Room room65 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel69.reserveRoom(room78);
        hotel63.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        Room room82 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room84 = hotel1.findAvailableRoom();
        Room room85 = hotel1.findAvailableRoom();
        Room room86 = hotel1.findAvailableRoom();
        Room room87 = hotel1.findAvailableRoom();
        Room room88 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room88);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2427");
        Hotel hotel1 = new Hotel((int) (byte) 100);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel10.reserveRoom(room41);
        hotel6.reserveRoom(room41);
        hotel6.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        hotel47.displayRoomStatus();
        Room room49 = hotel47.findAvailableRoom();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel47.reserveRoom(room69);
        hotel6.reserveRoom(room69);
        hotel4.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        java.lang.Class<?> wildcardClass76 = room69.getClass();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2428");
        Hotel hotel1 = new Hotel((int) (short) 10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(0);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        Hotel hotel10 = new Hotel(0);
        hotel10.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel5.reserveRoom(room14);
        Hotel hotel18 = new Hotel((int) (short) 0);
        Room room19 = hotel18.findAvailableRoom();
        Hotel hotel21 = new Hotel(10);
        Room room22 = hotel21.findAvailableRoom();
        hotel18.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Room room28 = hotel25.findAvailableRoom();
        hotel18.reserveRoom(room28);
        hotel5.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (short) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel(0);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Room room44 = hotel41.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel35.reserveRoom(room44);
        hotel35.displayRoomStatus();
        hotel35.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Room room53 = hotel50.findAvailableRoom();
        Room room54 = hotel50.findAvailableRoom();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel50.reserveRoom(room57);
        hotel35.reserveRoom(room57);
        hotel1.reserveRoom(room57);
        Room room61 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room61);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2429");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Room room42 = hotel39.findAvailableRoom();
        Room room43 = hotel39.findAvailableRoom();
        hotel1.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Room room53 = hotel46.findAvailableRoom();
        Room room54 = hotel46.findAvailableRoom();
        Hotel hotel56 = new Hotel((int) (short) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Room room59 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Room room61 = hotel56.findAvailableRoom();
        hotel46.reserveRoom(room61);
        hotel1.reserveRoom(room61);
        Room room64 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass65 = room64.getClass();
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2430");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room52 = hotel1.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Room room57 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Room room60 = hotel54.findAvailableRoom();
        hotel1.reserveRoom(room60);
        java.lang.Class<?> wildcardClass62 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2431");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (short) 0);
        Room room8 = hotel7.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) 'a');
        hotel10.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel10.reserveRoom(room18);
        hotel10.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel27.reserveRoom(room58);
        hotel23.reserveRoom(room58);
        hotel10.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        hotel1.reserveRoom(room58);
        Room room65 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass67 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2432");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass9 = hotel1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2433");
        Hotel hotel1 = new Hotel((int) (byte) 100);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel9.reserveRoom(room55);
        hotel4.reserveRoom(room55);
        Room room60 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room62 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room64 = hotel4.findAvailableRoom();
        Hotel hotel66 = new Hotel(0);
        hotel66.displayRoomStatus();
        Room room68 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        hotel66.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel66.reserveRoom(room81);
        hotel4.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        hotel1.displayRoomStatus();
        Room room87 = hotel1.findAvailableRoom();
        Hotel hotel89 = new Hotel(1);
        hotel89.displayRoomStatus();
        hotel89.displayRoomStatus();
        hotel89.displayRoomStatus();
        hotel89.displayRoomStatus();
        hotel89.displayRoomStatus();
        hotel89.displayRoomStatus();
        hotel89.displayRoomStatus();
        Room room97 = hotel89.findAvailableRoom();
        hotel1.reserveRoom(room97);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room97);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2434");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        Room room35 = hotel1.findAvailableRoom();
        Room room36 = hotel1.findAvailableRoom();
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass40 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2435");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel(10);
        Room room12 = hotel11.findAvailableRoom();
        Room room13 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel16 = new Hotel(10);
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel(0);
        hotel20.displayRoomStatus();
        Room room22 = hotel20.findAvailableRoom();
        Room room23 = hotel20.findAvailableRoom();
        Room room24 = hotel20.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        hotel26.displayRoomStatus();
        Room room28 = hotel26.findAvailableRoom();
        Room room29 = hotel26.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        hotel26.reserveRoom(room36);
        hotel20.reserveRoom(room36);
        hotel16.reserveRoom(room36);
        hotel11.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        Room room44 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room44);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2436");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        Hotel hotel49 = new Hotel((int) '4');
        Hotel hotel51 = new Hotel(0);
        Room room52 = hotel51.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) ' ');
        Hotel hotel56 = new Hotel((int) (short) 0);
        Room room57 = hotel56.findAvailableRoom();
        Hotel hotel59 = new Hotel(10);
        Room room60 = hotel59.findAvailableRoom();
        hotel56.reserveRoom(room60);
        hotel54.reserveRoom(room60);
        Room room63 = hotel54.findAvailableRoom();
        hotel51.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) 'a');
        hotel66.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        hotel66.reserveRoom(room74);
        Room room77 = hotel66.findAvailableRoom();
        Room room78 = hotel66.findAvailableRoom();
        Room room79 = hotel66.findAvailableRoom();
        hotel51.reserveRoom(room79);
        hotel49.reserveRoom(room79);
        hotel1.reserveRoom(room79);
        Room room83 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room83);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2437");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel(1);
        hotel9.displayRoomStatus();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        hotel22.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel31.reserveRoom(room40);
        hotel22.reserveRoom(room40);
        hotel13.reserveRoom(room40);
        hotel9.reserveRoom(room40);
        hotel9.displayRoomStatus();
        hotel9.displayRoomStatus();
        hotel9.displayRoomStatus();
        Room room48 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room48);
        java.lang.Class<?> wildcardClass50 = room48.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2438");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        hotel6.reserveRoom(room33);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Room room39 = hotel6.findAvailableRoom();
        Room room40 = hotel6.findAvailableRoom();
        Room room41 = hotel6.findAvailableRoom();
        Room room42 = hotel6.findAvailableRoom();
        Hotel hotel44 = new Hotel((int) (short) 1);
        Hotel hotel46 = new Hotel((int) (byte) -1);
        hotel46.displayRoomStatus();
        Room room48 = hotel46.findAvailableRoom();
        Room room49 = hotel46.findAvailableRoom();
        Room room50 = hotel46.findAvailableRoom();
        Room room51 = hotel46.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        hotel53.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel62.reserveRoom(room71);
        hotel53.reserveRoom(room71);
        Hotel hotel75 = new Hotel((int) 'a');
        hotel75.displayRoomStatus();
        Room room77 = hotel75.findAvailableRoom();
        hotel53.reserveRoom(room77);
        hotel53.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (short) 10);
        Room room82 = hotel81.findAvailableRoom();
        hotel53.reserveRoom(room82);
        hotel46.reserveRoom(room82);
        hotel44.reserveRoom(room82);
        hotel6.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        Room room88 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNull(room88);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2439");
        Hotel hotel1 = new Hotel((int) (byte) 0);
        Hotel hotel3 = new Hotel(0);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Room room6 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        hotel3.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) ' ');
        Hotel hotel12 = new Hotel((int) (short) 0);
        Room room13 = hotel12.findAvailableRoom();
        Hotel hotel15 = new Hotel(10);
        Room room16 = hotel15.findAvailableRoom();
        hotel12.reserveRoom(room16);
        hotel10.reserveRoom(room16);
        hotel3.reserveRoom(room16);
        hotel1.reserveRoom(room16);
        Room room21 = hotel1.findAvailableRoom();
        Room room22 = hotel1.findAvailableRoom();
        Room room23 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2440");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel(0);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Room room13 = hotel10.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Room room36 = hotel15.findAvailableRoom();
        Room room37 = hotel15.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Room room42 = hotel39.findAvailableRoom();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        hotel44.displayRoomStatus();
        Room room46 = hotel44.findAvailableRoom();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel44.reserveRoom(room66);
        hotel44.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        hotel72.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel81.reserveRoom(room90);
        hotel72.reserveRoom(room90);
        hotel44.reserveRoom(room90);
        hotel39.reserveRoom(room90);
        hotel15.reserveRoom(room90);
        hotel10.reserveRoom(room90);
        hotel1.reserveRoom(room90);
        Room room98 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room98);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2441");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        hotel42.displayRoomStatus();
        Room room44 = hotel42.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        hotel42.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        Room room69 = hotel1.findAvailableRoom();
        Room room70 = hotel1.findAvailableRoom();
        Room room71 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room71);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2442");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) 'a');
        Room room10 = hotel9.findAvailableRoom();
        Room room11 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room11);
        java.lang.Class<?> wildcardClass13 = room11.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2443");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) 'a');
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room25);
        hotel1.displayRoomStatus();
        Room room28 = hotel1.findAvailableRoom();
        Hotel hotel30 = new Hotel(0);
        hotel30.displayRoomStatus();
        Room room32 = hotel30.findAvailableRoom();
        Room room33 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        hotel30.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) ' ');
        Hotel hotel39 = new Hotel((int) (short) 0);
        Room room40 = hotel39.findAvailableRoom();
        Hotel hotel42 = new Hotel(10);
        Room room43 = hotel42.findAvailableRoom();
        hotel39.reserveRoom(room43);
        hotel37.reserveRoom(room43);
        hotel30.reserveRoom(room43);
        hotel1.reserveRoom(room43);
        hotel1.displayRoomStatus();
        Room room49 = hotel1.findAvailableRoom();
        Room room50 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room50);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2444");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room10 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = room10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room10);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2445");
        Hotel hotel1 = new Hotel((int) (short) 0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel4.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel4.reserveRoom(room31);
        hotel1.reserveRoom(room31);
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Room room42 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        hotel39.displayRoomStatus();
        Room room45 = hotel39.findAvailableRoom();
        hotel1.reserveRoom(room45);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room45);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2446");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel33 = new Hotel((int) (short) 0);
        hotel33.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        hotel45.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel54.reserveRoom(room63);
        hotel45.reserveRoom(room63);
        hotel36.reserveRoom(room63);
        hotel33.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        Room room69 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room69);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2447");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room59);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2448");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass11 = room10.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2449");
        Hotel hotel1 = new Hotel((int) (byte) 100);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        hotel12.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        Hotel hotel46 = new Hotel(0);
        hotel46.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel46.reserveRoom(room50);
        hotel46.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (short) 0);
        Room room55 = hotel54.findAvailableRoom();
        Hotel hotel57 = new Hotel(10);
        Room room58 = hotel57.findAvailableRoom();
        hotel54.reserveRoom(room58);
        hotel46.reserveRoom(room58);
        hotel1.reserveRoom(room58);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room58);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2450");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel(10);
        Room room9 = hotel8.findAvailableRoom();
        hotel1.reserveRoom(room9);
        hotel1.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel19.reserveRoom(room50);
        hotel15.reserveRoom(room50);
        hotel13.reserveRoom(room50);
        hotel13.displayRoomStatus();
        hotel13.displayRoomStatus();
        Room room57 = hotel13.findAvailableRoom();
        Room room58 = hotel13.findAvailableRoom();
        hotel1.reserveRoom(room58);
        hotel1.displayRoomStatus();
        Room room61 = hotel1.findAvailableRoom();
        Room room62 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room62);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2451");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Room room23 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room25 = hotel1.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (short) 1);
        Hotel hotel29 = new Hotel((int) (short) 0);
        Room room30 = hotel29.findAvailableRoom();
        Hotel hotel32 = new Hotel(10);
        Room room33 = hotel32.findAvailableRoom();
        hotel29.reserveRoom(room33);
        hotel27.reserveRoom(room33);
        hotel27.displayRoomStatus();
        hotel27.displayRoomStatus();
        Hotel hotel39 = new Hotel(10);
        Room room40 = hotel39.findAvailableRoom();
        Room room41 = hotel39.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) (short) 0);
        Room room44 = hotel43.findAvailableRoom();
        Room room45 = hotel43.findAvailableRoom();
        Room room46 = hotel43.findAvailableRoom();
        Room room47 = hotel43.findAvailableRoom();
        Hotel hotel49 = new Hotel(0);
        hotel49.displayRoomStatus();
        Room room51 = hotel49.findAvailableRoom();
        Room room52 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        hotel49.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) ' ');
        Hotel hotel58 = new Hotel((int) (short) 0);
        Room room59 = hotel58.findAvailableRoom();
        Hotel hotel61 = new Hotel(10);
        Room room62 = hotel61.findAvailableRoom();
        hotel58.reserveRoom(room62);
        hotel56.reserveRoom(room62);
        hotel49.reserveRoom(room62);
        hotel43.reserveRoom(room62);
        hotel39.reserveRoom(room62);
        hotel27.reserveRoom(room62);
        hotel1.reserveRoom(room62);
        Room room70 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNull(room70);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2452");
        Hotel hotel1 = new Hotel((int) (byte) 100);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel10.reserveRoom(room41);
        hotel6.reserveRoom(room41);
        hotel6.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        hotel47.displayRoomStatus();
        Room room49 = hotel47.findAvailableRoom();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel47.reserveRoom(room69);
        hotel6.reserveRoom(room69);
        hotel4.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        Room room76 = hotel1.findAvailableRoom();
        Room room77 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room77);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2453");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room41 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room41);
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2454");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        hotel67.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel67.reserveRoom(room85);
        hotel58.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        Room room90 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room92 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass93 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2455");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room29 = hotel1.findAvailableRoom();
        Room room30 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room32 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) 'a');
        hotel35.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel35.reserveRoom(room43);
        hotel35.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        hotel52.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        Hotel hotel69 = new Hotel((int) (byte) 1);
        Room room70 = hotel69.findAvailableRoom();
        hotel61.reserveRoom(room70);
        hotel52.reserveRoom(room70);
        Hotel hotel74 = new Hotel((int) (byte) -1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel74.reserveRoom(room79);
        Hotel hotel82 = new Hotel((int) (byte) 1);
        Room room83 = hotel82.findAvailableRoom();
        hotel74.reserveRoom(room83);
        hotel52.reserveRoom(room83);
        hotel48.reserveRoom(room83);
        hotel35.reserveRoom(room83);
        hotel1.reserveRoom(room83);
        java.lang.Class<?> wildcardClass89 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2456");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room14 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass15 = room14.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2457");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        Room room29 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass31 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2458");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel((int) ' ');
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        Room room12 = hotel10.findAvailableRoom();
        Hotel hotel14 = new Hotel(0);
        hotel14.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel14.reserveRoom(room18);
        hotel14.displayRoomStatus();
        Hotel hotel22 = new Hotel(10);
        hotel22.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) 'a');
        hotel25.displayRoomStatus();
        Room room27 = hotel25.findAvailableRoom();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        hotel29.reserveRoom(room56);
        hotel25.reserveRoom(room56);
        hotel22.reserveRoom(room56);
        hotel14.reserveRoom(room56);
        Room room63 = hotel14.findAvailableRoom();
        Hotel hotel65 = new Hotel((int) (short) 10);
        Room room66 = hotel65.findAvailableRoom();
        Room room67 = hotel65.findAvailableRoom();
        hotel14.reserveRoom(room67);
        hotel10.reserveRoom(room67);
        hotel6.reserveRoom(room67);
        hotel1.reserveRoom(room67);
        Room room72 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room72);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2459");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room61 = hotel1.findAvailableRoom();
        Hotel hotel63 = new Hotel(0);
        hotel63.displayRoomStatus();
        Room room65 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel69.reserveRoom(room78);
        hotel63.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        Room room82 = hotel1.findAvailableRoom();
        Room room83 = hotel1.findAvailableRoom();
        Room room84 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass85 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2460");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass4 = room3.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2461");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        hotel6.reserveRoom(room33);
        Hotel hotel38 = new Hotel((int) (short) 0);
        hotel38.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        hotel50.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel59.reserveRoom(room68);
        hotel50.reserveRoom(room68);
        hotel41.reserveRoom(room68);
        hotel38.reserveRoom(room68);
        hotel6.reserveRoom(room68);
        Hotel hotel75 = new Hotel((int) ' ');
        Hotel hotel77 = new Hotel((int) (short) 0);
        Room room78 = hotel77.findAvailableRoom();
        Hotel hotel80 = new Hotel(10);
        Room room81 = hotel80.findAvailableRoom();
        hotel77.reserveRoom(room81);
        hotel75.reserveRoom(room81);
        hotel6.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        hotel1.displayRoomStatus();
        Room room87 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass88 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNull(room87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2462");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room31);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2463");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) 'a');
        hotel30.displayRoomStatus();
        Room room32 = hotel30.findAvailableRoom();
        hotel8.reserveRoom(room32);
        hotel8.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (short) 10);
        Room room37 = hotel36.findAvailableRoom();
        hotel8.reserveRoom(room37);
        hotel1.reserveRoom(room37);
        Room room40 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass41 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2464");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Room room36 = hotel15.findAvailableRoom();
        Room room37 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Room room39 = hotel15.findAvailableRoom();
        Hotel hotel41 = new Hotel((int) (short) 1);
        Hotel hotel43 = new Hotel((int) (short) 0);
        Room room44 = hotel43.findAvailableRoom();
        Hotel hotel46 = new Hotel(10);
        Room room47 = hotel46.findAvailableRoom();
        hotel43.reserveRoom(room47);
        hotel41.reserveRoom(room47);
        hotel41.displayRoomStatus();
        hotel41.displayRoomStatus();
        Hotel hotel53 = new Hotel(10);
        Room room54 = hotel53.findAvailableRoom();
        Room room55 = hotel53.findAvailableRoom();
        Hotel hotel57 = new Hotel((int) (short) 0);
        Room room58 = hotel57.findAvailableRoom();
        Room room59 = hotel57.findAvailableRoom();
        Room room60 = hotel57.findAvailableRoom();
        Room room61 = hotel57.findAvailableRoom();
        Hotel hotel63 = new Hotel(0);
        hotel63.displayRoomStatus();
        Room room65 = hotel63.findAvailableRoom();
        Room room66 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) ' ');
        Hotel hotel72 = new Hotel((int) (short) 0);
        Room room73 = hotel72.findAvailableRoom();
        Hotel hotel75 = new Hotel(10);
        Room room76 = hotel75.findAvailableRoom();
        hotel72.reserveRoom(room76);
        hotel70.reserveRoom(room76);
        hotel63.reserveRoom(room76);
        hotel57.reserveRoom(room76);
        hotel53.reserveRoom(room76);
        hotel41.reserveRoom(room76);
        hotel15.reserveRoom(room76);
        hotel1.reserveRoom(room76);
        java.lang.Class<?> wildcardClass85 = room76.getClass();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2465");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel4.reserveRoom(room13);
        Room room15 = hotel4.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel4.reserveRoom(room26);
        hotel1.reserveRoom(room26);
        Room room30 = hotel1.findAvailableRoom();
        Room room31 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room30);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2466");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) 'a');
        hotel4.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel4.reserveRoom(room12);
        Room room15 = hotel4.findAvailableRoom();
        Room room16 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room16);
        Hotel hotel19 = new Hotel((int) (byte) -1);
        hotel19.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        hotel22.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel31.reserveRoom(room40);
        hotel22.reserveRoom(room40);
        Hotel hotel44 = new Hotel((int) 'a');
        hotel44.displayRoomStatus();
        Room room46 = hotel44.findAvailableRoom();
        hotel22.reserveRoom(room46);
        Room room48 = hotel22.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) 'a');
        hotel50.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        hotel50.reserveRoom(room58);
        Room room61 = hotel50.findAvailableRoom();
        Room room62 = hotel50.findAvailableRoom();
        hotel22.reserveRoom(room62);
        hotel22.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) 'a');
        hotel66.displayRoomStatus();
        Room room68 = hotel66.findAvailableRoom();
        hotel22.reserveRoom(room68);
        hotel19.reserveRoom(room68);
        hotel1.reserveRoom(room68);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room68);
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2467");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room7);
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Room room13 = hotel10.findAvailableRoom();
        Room room14 = hotel10.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel10.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        Room room20 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel23 = new Hotel((-1));
        Hotel hotel25 = new Hotel((int) (byte) -1);
        hotel25.displayRoomStatus();
        Room room27 = hotel25.findAvailableRoom();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel25.reserveRoom(room47);
        hotel23.reserveRoom(room47);
        Hotel hotel53 = new Hotel((int) (byte) 10);
        hotel53.displayRoomStatus();
        hotel53.displayRoomStatus();
        Room room56 = hotel53.findAvailableRoom();
        hotel23.reserveRoom(room56);
        hotel1.reserveRoom(room56);
        java.lang.Class<?> wildcardClass59 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2468");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        Room room41 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        hotel44.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        Room room58 = hotel47.findAvailableRoom();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel47.reserveRoom(room69);
        hotel44.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2469");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel28.reserveRoom(room55);
        hotel6.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room61 = hotel1.findAvailableRoom();
        Room room62 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room62);
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2470");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room65 = hotel1.findAvailableRoom();
        Room room66 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room68 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room68);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2471");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (short) 0);
        Room room37 = hotel36.findAvailableRoom();
        Hotel hotel39 = new Hotel(10);
        Room room40 = hotel39.findAvailableRoom();
        hotel36.reserveRoom(room40);
        hotel1.reserveRoom(room40);
        Room room43 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room43);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2472");
        Hotel hotel1 = new Hotel((int) (byte) 100);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel10.reserveRoom(room41);
        hotel6.reserveRoom(room41);
        hotel6.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        hotel47.displayRoomStatus();
        Room room49 = hotel47.findAvailableRoom();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel47.reserveRoom(room69);
        hotel6.reserveRoom(room69);
        hotel4.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        hotel1.displayRoomStatus();
        Room room77 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room77);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2473");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel7.reserveRoom(room16);
        Room room18 = hotel7.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel7.reserveRoom(room29);
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Room room34 = hotel7.findAvailableRoom();
        Room room35 = hotel7.findAvailableRoom();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        hotel37.displayRoomStatus();
        Room room39 = hotel37.findAvailableRoom();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel37.reserveRoom(room59);
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel64.reserveRoom(room73);
        Room room75 = hotel64.findAvailableRoom();
        Hotel hotel77 = new Hotel((int) (byte) -1);
        Room room78 = hotel77.findAvailableRoom();
        hotel77.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel77.reserveRoom(room82);
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel77.reserveRoom(room86);
        hotel64.reserveRoom(room86);
        hotel37.reserveRoom(room86);
        hotel7.reserveRoom(room86);
        hotel1.reserveRoom(room86);
        java.lang.Class<?> wildcardClass92 = room86.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2474");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) 'a');
        hotel11.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel11.reserveRoom(room19);
        Room room22 = hotel11.findAvailableRoom();
        Room room23 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        hotel27.displayRoomStatus();
        Room room29 = hotel27.findAvailableRoom();
        Room room30 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Room room32 = hotel27.findAvailableRoom();
        hotel1.reserveRoom(room32);
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room34);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2475");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        Room room43 = hotel1.findAvailableRoom();
        Room room44 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        hotel49.displayRoomStatus();
        Room room51 = hotel49.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        hotel53.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel62.reserveRoom(room71);
        hotel53.reserveRoom(room71);
        hotel49.reserveRoom(room71);
        Room room75 = hotel49.findAvailableRoom();
        Room room76 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        hotel49.displayRoomStatus();
        Room room79 = hotel49.findAvailableRoom();
        Hotel hotel81 = new Hotel((int) ' ');
        Hotel hotel83 = new Hotel((int) 'a');
        hotel83.displayRoomStatus();
        Room room85 = hotel83.findAvailableRoom();
        hotel81.reserveRoom(room85);
        hotel49.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNull(room79);
        org.junit.Assert.assertNotNull(room85);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2476");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        Room room32 = hotel1.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        Hotel hotel56 = new Hotel((int) 'a');
        hotel56.displayRoomStatus();
        Room room58 = hotel56.findAvailableRoom();
        hotel34.reserveRoom(room58);
        Room room60 = hotel34.findAvailableRoom();
        Room room61 = hotel34.findAvailableRoom();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel63.displayRoomStatus();
        Room room71 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Room room73 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        Hotel hotel78 = new Hotel(10);
        Room room79 = hotel78.findAvailableRoom();
        Room room80 = hotel78.findAvailableRoom();
        Room room81 = hotel78.findAvailableRoom();
        hotel63.reserveRoom(room81);
        hotel34.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        java.lang.Class<?> wildcardClass85 = room81.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2477");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        Room room36 = hotel1.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (short) 0);
        Room room46 = hotel45.findAvailableRoom();
        Room room47 = hotel45.findAvailableRoom();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        hotel49.displayRoomStatus();
        Room room51 = hotel49.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) (byte) 0);
        Hotel hotel55 = new Hotel(0);
        hotel55.displayRoomStatus();
        Room room57 = hotel55.findAvailableRoom();
        Room room58 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        hotel55.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) ' ');
        Hotel hotel64 = new Hotel((int) (short) 0);
        Room room65 = hotel64.findAvailableRoom();
        Hotel hotel67 = new Hotel(10);
        Room room68 = hotel67.findAvailableRoom();
        hotel64.reserveRoom(room68);
        hotel62.reserveRoom(room68);
        hotel55.reserveRoom(room68);
        hotel53.reserveRoom(room68);
        hotel49.reserveRoom(room68);
        hotel45.reserveRoom(room68);
        hotel38.reserveRoom(room68);
        hotel1.reserveRoom(room68);
        Room room77 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room68);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2478");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room24 = hotel1.findAvailableRoom();
        Room room25 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2479");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) ' ');
        Hotel hotel35 = new Hotel((int) 'a');
        hotel35.displayRoomStatus();
        Room room37 = hotel35.findAvailableRoom();
        hotel33.reserveRoom(room37);
        hotel1.reserveRoom(room37);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Room room44 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        hotel41.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (short) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel41.reserveRoom(room49);
        hotel1.reserveRoom(room49);
        Room room52 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room52);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2480");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        Room room10 = hotel1.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (short) 0);
        Room room13 = hotel12.findAvailableRoom();
        Hotel hotel15 = new Hotel(10);
        Room room16 = hotel15.findAvailableRoom();
        hotel12.reserveRoom(room16);
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Room room22 = hotel19.findAvailableRoom();
        hotel12.reserveRoom(room22);
        Room room24 = hotel12.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel26.reserveRoom(room57);
        Room room60 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        hotel26.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        hotel64.displayRoomStatus();
        Room room66 = hotel64.findAvailableRoom();
        Hotel hotel68 = new Hotel((int) (byte) 0);
        Hotel hotel70 = new Hotel(0);
        hotel70.displayRoomStatus();
        Room room72 = hotel70.findAvailableRoom();
        Room room73 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        hotel70.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) ' ');
        Hotel hotel79 = new Hotel((int) (short) 0);
        Room room80 = hotel79.findAvailableRoom();
        Hotel hotel82 = new Hotel(10);
        Room room83 = hotel82.findAvailableRoom();
        hotel79.reserveRoom(room83);
        hotel77.reserveRoom(room83);
        hotel70.reserveRoom(room83);
        hotel68.reserveRoom(room83);
        hotel64.reserveRoom(room83);
        hotel26.reserveRoom(room83);
        hotel12.reserveRoom(room83);
        hotel1.reserveRoom(room83);
        java.lang.Class<?> wildcardClass92 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2481");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        Room room10 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (short) 0);
        Room room14 = hotel13.findAvailableRoom();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Hotel hotel19 = new Hotel(100);
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        hotel43.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        hotel52.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        Hotel hotel69 = new Hotel((int) (byte) 1);
        Room room70 = hotel69.findAvailableRoom();
        hotel61.reserveRoom(room70);
        hotel52.reserveRoom(room70);
        hotel43.reserveRoom(room70);
        hotel21.reserveRoom(room70);
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Room room79 = hotel76.findAvailableRoom();
        hotel21.reserveRoom(room79);
        hotel21.displayRoomStatus();
        hotel21.displayRoomStatus();
        hotel21.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) -1);
        Room room86 = hotel85.findAvailableRoom();
        hotel85.displayRoomStatus();
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel85.reserveRoom(room90);
        hotel21.reserveRoom(room90);
        hotel19.reserveRoom(room90);
        hotel17.reserveRoom(room90);
        hotel13.reserveRoom(room90);
        hotel1.reserveRoom(room90);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNull(room86);
        org.junit.Assert.assertNotNull(room90);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2482");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (short) 1);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Room room15 = hotel11.findAvailableRoom();
        hotel1.reserveRoom(room15);
        java.lang.Class<?> wildcardClass17 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2483");
        Hotel hotel1 = new Hotel((int) (byte) 100);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        hotel12.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        hotel46.displayRoomStatus();
        Room room48 = hotel46.findAvailableRoom();
        Room room49 = hotel46.findAvailableRoom();
        Hotel hotel51 = new Hotel(1);
        hotel51.displayRoomStatus();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        hotel55.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        hotel64.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) -1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel73.reserveRoom(room78);
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel73.reserveRoom(room82);
        hotel64.reserveRoom(room82);
        hotel55.reserveRoom(room82);
        hotel51.reserveRoom(room82);
        hotel51.displayRoomStatus();
        hotel51.displayRoomStatus();
        Room room89 = hotel51.findAvailableRoom();
        hotel46.reserveRoom(room89);
        hotel1.reserveRoom(room89);
        java.lang.Class<?> wildcardClass92 = hotel1.getClass();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2484");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Room room28 = hotel1.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (short) 100);
        Room room31 = hotel30.findAvailableRoom();
        hotel1.reserveRoom(room31);
        Room room33 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room35);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2485");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room38 = hotel1.findAvailableRoom();
        Room room39 = hotel1.findAvailableRoom();
        Room room40 = hotel1.findAvailableRoom();
        Room room41 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room41);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2486");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        Hotel hotel42 = new Hotel((int) (byte) -1);
        hotel42.displayRoomStatus();
        Room room44 = hotel42.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        hotel42.reserveRoom(room64);
        Room room68 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) ' ');
        Hotel hotel73 = new Hotel((int) 'a');
        hotel73.displayRoomStatus();
        Room room75 = hotel73.findAvailableRoom();
        hotel71.reserveRoom(room75);
        hotel42.reserveRoom(room75);
        hotel1.reserveRoom(room75);
        Room room79 = hotel1.findAvailableRoom();
        Hotel hotel81 = new Hotel((int) 'a');
        hotel81.displayRoomStatus();
        Hotel hotel84 = new Hotel((int) (byte) -1);
        Room room85 = hotel84.findAvailableRoom();
        hotel84.displayRoomStatus();
        Hotel hotel88 = new Hotel((int) (byte) 1);
        Room room89 = hotel88.findAvailableRoom();
        hotel84.reserveRoom(room89);
        hotel81.reserveRoom(room89);
        hotel81.displayRoomStatus();
        hotel81.displayRoomStatus();
        Room room94 = hotel81.findAvailableRoom();
        hotel1.reserveRoom(room94);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room79);
        org.junit.Assert.assertNull(room85);
        org.junit.Assert.assertNotNull(room89);
        org.junit.Assert.assertNotNull(room94);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2487");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel(0);
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        Room room15 = hotel9.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel21.reserveRoom(room52);
        hotel17.reserveRoom(room52);
        hotel9.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room58 = hotel1.findAvailableRoom();
        Room room59 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room59);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2488");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass31 = hotel1.getClass();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2489");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) 'a');
        hotel11.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel11.reserveRoom(room19);
        Room room22 = hotel11.findAvailableRoom();
        Room room23 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Room room30 = hotel27.findAvailableRoom();
        hotel1.reserveRoom(room30);
        Hotel hotel33 = new Hotel(1);
        hotel33.displayRoomStatus();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        hotel37.reserveRoom(room64);
        hotel33.reserveRoom(room64);
        hotel33.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Room room74 = hotel71.findAvailableRoom();
        Room room75 = hotel71.findAvailableRoom();
        hotel33.reserveRoom(room75);
        Room room77 = hotel33.findAvailableRoom();
        Room room78 = hotel33.findAvailableRoom();
        hotel1.reserveRoom(room78);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room78);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2490");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        hotel6.reserveRoom(room33);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Room room39 = hotel6.findAvailableRoom();
        Room room40 = hotel6.findAvailableRoom();
        Room room41 = hotel6.findAvailableRoom();
        Room room42 = hotel6.findAvailableRoom();
        Hotel hotel44 = new Hotel((int) (short) 1);
        Hotel hotel46 = new Hotel((int) (byte) -1);
        hotel46.displayRoomStatus();
        Room room48 = hotel46.findAvailableRoom();
        Room room49 = hotel46.findAvailableRoom();
        Room room50 = hotel46.findAvailableRoom();
        Room room51 = hotel46.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        hotel53.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel62.reserveRoom(room71);
        hotel53.reserveRoom(room71);
        Hotel hotel75 = new Hotel((int) 'a');
        hotel75.displayRoomStatus();
        Room room77 = hotel75.findAvailableRoom();
        hotel53.reserveRoom(room77);
        hotel53.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (short) 10);
        Room room82 = hotel81.findAvailableRoom();
        hotel53.reserveRoom(room82);
        hotel46.reserveRoom(room82);
        hotel44.reserveRoom(room82);
        hotel6.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room82);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2491");
        Hotel hotel1 = new Hotel((int) (short) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel6.reserveRoom(room15);
        Room room17 = hotel6.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel4.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel34 = new Hotel(0);
        hotel34.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel34.reserveRoom(room38);
        Room room40 = hotel34.findAvailableRoom();
        Hotel hotel42 = new Hotel(0);
        hotel42.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel42.reserveRoom(room46);
        Room room48 = hotel42.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        hotel54.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel63.reserveRoom(room72);
        hotel54.reserveRoom(room72);
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel54.reserveRoom(room85);
        hotel50.reserveRoom(room85);
        hotel42.reserveRoom(room85);
        hotel34.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        hotel1.displayRoomStatus();
        Room room93 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNull(room93);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2492");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room29 = hotel1.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Room room34 = hotel31.findAvailableRoom();
        Hotel hotel36 = new Hotel(1);
        hotel36.displayRoomStatus();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        hotel49.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel58.reserveRoom(room67);
        hotel49.reserveRoom(room67);
        hotel40.reserveRoom(room67);
        hotel36.reserveRoom(room67);
        hotel36.displayRoomStatus();
        hotel36.displayRoomStatus();
        Room room74 = hotel36.findAvailableRoom();
        hotel31.reserveRoom(room74);
        Room room76 = hotel31.findAvailableRoom();
        hotel1.reserveRoom(room76);
        Room room78 = hotel1.findAvailableRoom();
        Room room79 = hotel1.findAvailableRoom();
        Room room80 = hotel1.findAvailableRoom();
        Room room81 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass82 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNull(room79);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNull(room81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2493");
        Hotel hotel1 = new Hotel(100);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (short) 0);
        Room room5 = hotel4.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel11.reserveRoom(room42);
        hotel7.reserveRoom(room42);
        hotel4.reserveRoom(room42);
        hotel1.reserveRoom(room42);
        hotel1.displayRoomStatus();
        Hotel hotel50 = new Hotel((-1));
        hotel50.displayRoomStatus();
        Hotel hotel53 = new Hotel(0);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        hotel53.displayRoomStatus();
        Hotel hotel58 = new Hotel(0);
        hotel58.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel58.reserveRoom(room62);
        hotel53.reserveRoom(room62);
        hotel50.reserveRoom(room62);
        hotel1.reserveRoom(room62);
        hotel1.displayRoomStatus();
        Room room68 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room68);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2494");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) 'a');
        hotel30.displayRoomStatus();
        Room room32 = hotel30.findAvailableRoom();
        hotel8.reserveRoom(room32);
        hotel8.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (short) 10);
        Room room37 = hotel36.findAvailableRoom();
        hotel8.reserveRoom(room37);
        hotel1.reserveRoom(room37);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        Room room43 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room46 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room43);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2495");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        hotel42.displayRoomStatus();
        Room room44 = hotel42.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        hotel42.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        Room room69 = hotel1.findAvailableRoom();
        Room room70 = hotel1.findAvailableRoom();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Room room79 = hotel72.findAvailableRoom();
        Room room80 = hotel72.findAvailableRoom();
        Hotel hotel82 = new Hotel((int) (short) 1);
        Room room83 = hotel82.findAvailableRoom();
        hotel82.displayRoomStatus();
        Room room85 = hotel82.findAvailableRoom();
        hotel82.displayRoomStatus();
        Room room87 = hotel82.findAvailableRoom();
        hotel72.reserveRoom(room87);
        hotel1.reserveRoom(room87);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass91 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room79);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2496");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        Room room39 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room39);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2497");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        Room room43 = hotel1.findAvailableRoom();
        Hotel hotel45 = new Hotel((int) 'a');
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        Room room58 = hotel47.findAvailableRoom();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel47.reserveRoom(room69);
        hotel45.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        Room room74 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room76 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room78 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNull(room78);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2498");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) ' ');
        Hotel hotel28 = new Hotel((int) (short) 0);
        Room room29 = hotel28.findAvailableRoom();
        Hotel hotel31 = new Hotel(10);
        Room room32 = hotel31.findAvailableRoom();
        hotel28.reserveRoom(room32);
        hotel26.reserveRoom(room32);
        Room room35 = hotel26.findAvailableRoom();
        hotel1.reserveRoom(room35);
        hotel1.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel39.reserveRoom(room66);
        hotel39.displayRoomStatus();
        hotel39.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) ' ');
        Hotel hotel75 = new Hotel((int) 'a');
        hotel75.displayRoomStatus();
        Room room77 = hotel75.findAvailableRoom();
        hotel73.reserveRoom(room77);
        hotel39.reserveRoom(room77);
        hotel1.reserveRoom(room77);
        hotel1.displayRoomStatus();
        Room room82 = hotel1.findAvailableRoom();
        Room room83 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNull(room83);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2499");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass9 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest4.test2500");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        hotel12.reserveRoom(room39);
        Hotel hotel44 = new Hotel((int) (short) 0);
        hotel44.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        hotel47.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel56.reserveRoom(room61);
        hotel56.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) -1);
        Room room66 = hotel65.findAvailableRoom();
        hotel65.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) 1);
        Room room70 = hotel69.findAvailableRoom();
        hotel65.reserveRoom(room70);
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel65.reserveRoom(room74);
        hotel56.reserveRoom(room74);
        hotel47.reserveRoom(room74);
        hotel44.reserveRoom(room74);
        hotel12.reserveRoom(room74);
        Hotel hotel81 = new Hotel((int) ' ');
        Hotel hotel83 = new Hotel((int) (short) 0);
        Room room84 = hotel83.findAvailableRoom();
        Hotel hotel86 = new Hotel(10);
        Room room87 = hotel86.findAvailableRoom();
        hotel83.reserveRoom(room87);
        hotel81.reserveRoom(room87);
        hotel12.reserveRoom(room87);
        hotel7.reserveRoom(room87);
        hotel1.reserveRoom(room87);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNotNull(room87);
    }
}

