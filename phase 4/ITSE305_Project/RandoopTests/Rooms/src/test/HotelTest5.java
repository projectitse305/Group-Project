import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class HotelTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2501");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Room room27 = hotel6.findAvailableRoom();
        Room room28 = hotel6.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Room room33 = hotel30.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        hotel35.displayRoomStatus();
        Room room37 = hotel35.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel35.reserveRoom(room57);
        hotel35.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel63.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel63.reserveRoom(room81);
        hotel35.reserveRoom(room81);
        hotel30.reserveRoom(room81);
        hotel6.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass90 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2502");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        hotel42.displayRoomStatus();
        Room room44 = hotel42.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        hotel42.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        Room room69 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room71 = hotel1.findAvailableRoom();
        Hotel hotel73 = new Hotel((int) (short) 0);
        Room room74 = hotel73.findAvailableRoom();
        Hotel hotel76 = new Hotel(10);
        Room room77 = hotel76.findAvailableRoom();
        hotel73.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel80.displayRoomStatus();
        Room room83 = hotel80.findAvailableRoom();
        hotel73.reserveRoom(room83);
        hotel1.reserveRoom(room83);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room83);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2503");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel(10);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel(0);
        Room room12 = hotel11.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) ' ');
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        Hotel hotel19 = new Hotel(10);
        Room room20 = hotel19.findAvailableRoom();
        hotel16.reserveRoom(room20);
        hotel14.reserveRoom(room20);
        Room room23 = hotel14.findAvailableRoom();
        hotel11.reserveRoom(room23);
        hotel7.reserveRoom(room23);
        hotel7.displayRoomStatus();
        hotel7.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (short) 1);
        Hotel hotel31 = new Hotel((int) (byte) -1);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Room room34 = hotel31.findAvailableRoom();
        Room room35 = hotel31.findAvailableRoom();
        Room room36 = hotel31.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        Hotel hotel60 = new Hotel((int) 'a');
        hotel60.displayRoomStatus();
        Room room62 = hotel60.findAvailableRoom();
        hotel38.reserveRoom(room62);
        hotel38.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (short) 10);
        Room room67 = hotel66.findAvailableRoom();
        hotel38.reserveRoom(room67);
        hotel31.reserveRoom(room67);
        hotel29.reserveRoom(room67);
        hotel7.reserveRoom(room67);
        hotel1.reserveRoom(room67);
        java.lang.Class<?> wildcardClass73 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2504");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        Room room58 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass59 = room58.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2505");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        Room room36 = hotel1.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Room room41 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Room room43 = hotel38.findAvailableRoom();
        hotel1.reserveRoom(room43);
        hotel1.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        hotel47.displayRoomStatus();
        Room room49 = hotel47.findAvailableRoom();
        Hotel hotel51 = new Hotel((int) (byte) 0);
        Hotel hotel53 = new Hotel(0);
        hotel53.displayRoomStatus();
        Room room55 = hotel53.findAvailableRoom();
        Room room56 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        hotel53.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) ' ');
        Hotel hotel62 = new Hotel((int) (short) 0);
        Room room63 = hotel62.findAvailableRoom();
        Hotel hotel65 = new Hotel(10);
        Room room66 = hotel65.findAvailableRoom();
        hotel62.reserveRoom(room66);
        hotel60.reserveRoom(room66);
        hotel53.reserveRoom(room66);
        hotel51.reserveRoom(room66);
        hotel47.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        Hotel hotel74 = new Hotel((int) (short) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Room room77 = hotel74.findAvailableRoom();
        Hotel hotel79 = new Hotel((int) (byte) -1);
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        hotel79.reserveRoom(room86);
        hotel74.reserveRoom(room86);
        Room room90 = hotel74.findAvailableRoom();
        hotel1.reserveRoom(room90);
        Hotel hotel93 = new Hotel(1);
        hotel93.displayRoomStatus();
        hotel93.displayRoomStatus();
        Room room96 = hotel93.findAvailableRoom();
        Room room97 = hotel93.findAvailableRoom();
        hotel1.reserveRoom(room97);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room96);
        org.junit.Assert.assertNotNull(room97);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2506");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2507");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel9.reserveRoom(room46);
        hotel6.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        hotel1.displayRoomStatus();
        Room room52 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room52);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2508");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room39);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2509");
        Hotel hotel1 = new Hotel((int) ' ');
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2510");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Room room32 = hotel29.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        hotel34.displayRoomStatus();
        Room room36 = hotel34.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        hotel34.reserveRoom(room56);
        hotel34.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        hotel62.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) -1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel71.reserveRoom(room76);
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel71.reserveRoom(room80);
        hotel62.reserveRoom(room80);
        hotel34.reserveRoom(room80);
        hotel29.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        Room room86 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room86);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2511");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        hotel42.displayRoomStatus();
        Room room44 = hotel42.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        hotel42.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        Hotel hotel70 = new Hotel(10);
        hotel70.displayRoomStatus();
        Room room72 = hotel70.findAvailableRoom();
        Room room73 = hotel70.findAvailableRoom();
        Room room74 = hotel70.findAvailableRoom();
        hotel1.reserveRoom(room74);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room74);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2512");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        Room room57 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        Room room60 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass62 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2513");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass33 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2514");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) 'a');
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room25);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel29.reserveRoom(room60);
        Room room63 = hotel29.findAvailableRoom();
        Room room64 = hotel29.findAvailableRoom();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Room room69 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Room room71 = hotel66.findAvailableRoom();
        hotel29.reserveRoom(room71);
        hotel1.reserveRoom(room71);
        Room room74 = hotel1.findAvailableRoom();
        Room room75 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room78 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNull(room78);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2515");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room5);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2516");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        Room room56 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room58 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room60 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room60);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2517");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room60 = hotel1.findAvailableRoom();
        Room room61 = hotel1.findAvailableRoom();
        Room room62 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room62);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2518");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        hotel23.reserveRoom(room45);
        hotel23.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel23.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        Room room83 = hotel1.findAvailableRoom();
        Room room84 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNull(room84);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2519");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room12 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room12);
        Hotel hotel15 = new Hotel(10);
        hotel15.displayRoomStatus();
        Room room17 = hotel15.findAvailableRoom();
        Hotel hotel19 = new Hotel((-1));
        Hotel hotel21 = new Hotel(1);
        hotel21.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        hotel24.displayRoomStatus();
        Room room26 = hotel24.findAvailableRoom();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        hotel24.reserveRoom(room46);
        hotel24.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel52.reserveRoom(room61);
        hotel24.reserveRoom(room61);
        Hotel hotel65 = new Hotel(0);
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Room room70 = hotel67.findAvailableRoom();
        hotel65.reserveRoom(room70);
        hotel24.reserveRoom(room70);
        hotel21.reserveRoom(room70);
        hotel19.reserveRoom(room70);
        hotel15.reserveRoom(room70);
        hotel1.reserveRoom(room70);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room70);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2520");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel33.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel33.reserveRoom(room60);
        hotel11.reserveRoom(room60);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Room room69 = hotel66.findAvailableRoom();
        hotel11.reserveRoom(room69);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        hotel11.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        Room room84 = hotel1.findAvailableRoom();
        Hotel hotel86 = new Hotel((int) (byte) -1);
        Hotel hotel88 = new Hotel((int) (byte) -1);
        Room room89 = hotel88.findAvailableRoom();
        hotel88.displayRoomStatus();
        Hotel hotel92 = new Hotel((int) (byte) 1);
        Room room93 = hotel92.findAvailableRoom();
        hotel88.reserveRoom(room93);
        hotel86.reserveRoom(room93);
        hotel1.reserveRoom(room93);
        hotel1.displayRoomStatus();
        Room room98 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNull(room89);
        org.junit.Assert.assertNotNull(room93);
        org.junit.Assert.assertNull(room98);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2521");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Hotel hotel27 = new Hotel(10);
        Room room28 = hotel27.findAvailableRoom();
        hotel24.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        Room room32 = hotel1.findAvailableRoom();
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        Room room35 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass36 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2522");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        hotel1.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        hotel24.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel24.reserveRoom(room42);
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel24.reserveRoom(room55);
        hotel20.reserveRoom(room55);
        hotel20.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        hotel61.displayRoomStatus();
        Room room63 = hotel61.findAvailableRoom();
        Hotel hotel65 = new Hotel((int) (byte) -1);
        Room room66 = hotel65.findAvailableRoom();
        hotel65.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) 1);
        Room room70 = hotel69.findAvailableRoom();
        hotel65.reserveRoom(room70);
        hotel65.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) -1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel74.reserveRoom(room79);
        Hotel hotel82 = new Hotel((int) (byte) 1);
        Room room83 = hotel82.findAvailableRoom();
        hotel74.reserveRoom(room83);
        hotel65.reserveRoom(room83);
        hotel61.reserveRoom(room83);
        hotel20.reserveRoom(room83);
        hotel18.reserveRoom(room83);
        hotel1.reserveRoom(room83);
        Room room90 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNull(room90);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2523");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel28.reserveRoom(room55);
        hotel6.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room61 = hotel1.findAvailableRoom();
        Room room62 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass64 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2524");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        Room room11 = hotel9.findAvailableRoom();
        Room room12 = hotel9.findAvailableRoom();
        Room room13 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room13);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room13);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2525");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        Room room40 = hotel1.findAvailableRoom();
        Room room41 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room41);
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2526");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room13 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room15 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room15);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2527");
        Hotel hotel1 = new Hotel((-1));
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel(0);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        hotel4.displayRoomStatus();
        Hotel hotel9 = new Hotel(0);
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel4.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Hotel hotel18 = new Hotel((int) (short) 1);
        Hotel hotel20 = new Hotel((int) (byte) -1);
        hotel20.displayRoomStatus();
        Room room22 = hotel20.findAvailableRoom();
        Room room23 = hotel20.findAvailableRoom();
        Room room24 = hotel20.findAvailableRoom();
        Room room25 = hotel20.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        Hotel hotel49 = new Hotel((int) 'a');
        hotel49.displayRoomStatus();
        Room room51 = hotel49.findAvailableRoom();
        hotel27.reserveRoom(room51);
        hotel27.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (short) 10);
        Room room56 = hotel55.findAvailableRoom();
        hotel27.reserveRoom(room56);
        hotel20.reserveRoom(room56);
        hotel18.reserveRoom(room56);
        hotel18.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (short) 0);
        Room room63 = hotel62.findAvailableRoom();
        Room room64 = hotel62.findAvailableRoom();
        Room room65 = hotel62.findAvailableRoom();
        Room room66 = hotel62.findAvailableRoom();
        Hotel hotel68 = new Hotel(0);
        hotel68.displayRoomStatus();
        Room room70 = hotel68.findAvailableRoom();
        Room room71 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        hotel68.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) ' ');
        Hotel hotel77 = new Hotel((int) (short) 0);
        Room room78 = hotel77.findAvailableRoom();
        Hotel hotel80 = new Hotel(10);
        Room room81 = hotel80.findAvailableRoom();
        hotel77.reserveRoom(room81);
        hotel75.reserveRoom(room81);
        hotel68.reserveRoom(room81);
        hotel62.reserveRoom(room81);
        hotel18.reserveRoom(room81);
        Room room87 = hotel18.findAvailableRoom();
        Room room88 = hotel18.findAvailableRoom();
        hotel1.reserveRoom(room88);
        java.lang.Class<?> wildcardClass90 = room88.getClass();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2528");
        Hotel hotel1 = new Hotel((int) (short) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel6.reserveRoom(room15);
        Room room17 = hotel6.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel4.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        Hotel hotel36 = new Hotel((-1));
        Hotel hotel38 = new Hotel(1);
        hotel38.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        hotel41.displayRoomStatus();
        Room room43 = hotel41.findAvailableRoom();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        hotel45.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel54.reserveRoom(room63);
        hotel45.reserveRoom(room63);
        hotel41.reserveRoom(room63);
        hotel41.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel69.reserveRoom(room78);
        hotel41.reserveRoom(room78);
        Hotel hotel82 = new Hotel(0);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel84.displayRoomStatus();
        Room room87 = hotel84.findAvailableRoom();
        hotel82.reserveRoom(room87);
        hotel41.reserveRoom(room87);
        hotel38.reserveRoom(room87);
        hotel36.reserveRoom(room87);
        hotel1.reserveRoom(room87);
        java.lang.Class<?> wildcardClass93 = hotel1.getClass();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2529");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room21 = hotel1.findAvailableRoom();
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room22);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2530");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        hotel70.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) -1);
        Room room80 = hotel79.findAvailableRoom();
        hotel79.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel79.reserveRoom(room84);
        Hotel hotel87 = new Hotel((int) (byte) 1);
        Room room88 = hotel87.findAvailableRoom();
        hotel79.reserveRoom(room88);
        hotel70.reserveRoom(room88);
        hotel61.reserveRoom(room88);
        hotel39.reserveRoom(room88);
        hotel1.reserveRoom(room88);
        hotel1.displayRoomStatus();
        Room room95 = hotel1.findAvailableRoom();
        Room room96 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass97 = room96.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNull(room95);
        org.junit.Assert.assertNull(room96);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2531");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room38);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2532");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room26 = hotel1.findAvailableRoom();
        Room room27 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room27);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2533");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = room7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2534");
        Hotel hotel1 = new Hotel((int) (byte) 0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (short) 0);
        Room room5 = hotel4.findAvailableRoom();
        Hotel hotel7 = new Hotel(10);
        Room room8 = hotel7.findAvailableRoom();
        hotel4.reserveRoom(room8);
        hotel4.displayRoomStatus();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        hotel15.displayRoomStatus();
        Room room17 = hotel15.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel15.reserveRoom(room37);
        hotel15.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel15.reserveRoom(room52);
        hotel12.reserveRoom(room52);
        Room room56 = hotel12.findAvailableRoom();
        hotel4.reserveRoom(room56);
        hotel1.reserveRoom(room56);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2535");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel(0);
        hotel7.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel7.reserveRoom(room11);
        Room room13 = hotel7.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel19.reserveRoom(room50);
        hotel15.reserveRoom(room50);
        hotel7.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room58 = hotel1.findAvailableRoom();
        Room room59 = hotel1.findAvailableRoom();
        Room room60 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNull(room60);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2536");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        hotel70.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) -1);
        Room room80 = hotel79.findAvailableRoom();
        hotel79.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel79.reserveRoom(room84);
        Hotel hotel87 = new Hotel((int) (byte) 1);
        Room room88 = hotel87.findAvailableRoom();
        hotel79.reserveRoom(room88);
        hotel70.reserveRoom(room88);
        hotel61.reserveRoom(room88);
        hotel39.reserveRoom(room88);
        hotel1.reserveRoom(room88);
        hotel1.displayRoomStatus();
        Room room95 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNull(room95);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2537");
        Hotel hotel1 = new Hotel((int) (short) 100);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel4.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel13.reserveRoom(room22);
        hotel4.reserveRoom(room22);
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        hotel26.reserveRoom(room53);
        hotel4.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        Room room59 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass60 = room59.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2538");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room10 = hotel1.findAvailableRoom();
        Room room11 = hotel1.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        Room room39 = hotel13.findAvailableRoom();
        Room room40 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        hotel13.displayRoomStatus();
        Room room43 = hotel13.findAvailableRoom();
        Hotel hotel45 = new Hotel((int) ' ');
        Hotel hotel47 = new Hotel((int) 'a');
        hotel47.displayRoomStatus();
        Room room49 = hotel47.findAvailableRoom();
        hotel45.reserveRoom(room49);
        hotel13.reserveRoom(room49);
        hotel1.reserveRoom(room49);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room49);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2539");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel28.reserveRoom(room55);
        hotel6.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room61 = hotel1.findAvailableRoom();
        Hotel hotel63 = new Hotel((int) (byte) 10);
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        Room room66 = hotel63.findAvailableRoom();
        Room room67 = hotel63.findAvailableRoom();
        Room room68 = hotel63.findAvailableRoom();
        hotel1.reserveRoom(room68);
        Hotel hotel71 = new Hotel(0);
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Room room76 = hotel73.findAvailableRoom();
        hotel71.reserveRoom(room76);
        hotel1.reserveRoom(room76);
        Room room79 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room79);
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2540");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Hotel hotel31 = new Hotel((int) (byte) 10);
        hotel31.displayRoomStatus();
        hotel31.displayRoomStatus();
        Room room34 = hotel31.findAvailableRoom();
        hotel1.reserveRoom(room34);
        Room room36 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room36);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2541");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Room room18 = hotel15.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        hotel20.displayRoomStatus();
        Room room22 = hotel20.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        hotel24.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel24.reserveRoom(room42);
        hotel20.reserveRoom(room42);
        hotel20.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel20.reserveRoom(room66);
        hotel15.reserveRoom(room66);
        Room room71 = hotel15.findAvailableRoom();
        hotel1.reserveRoom(room71);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room71);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2542");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room44 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room44);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2543");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel(0);
        hotel7.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel7.reserveRoom(room11);
        Room room13 = hotel7.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel19.reserveRoom(room50);
        hotel15.reserveRoom(room50);
        hotel7.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) 'a');
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        Room room71 = hotel60.findAvailableRoom();
        Hotel hotel73 = new Hotel((int) (byte) -1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel73.reserveRoom(room78);
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel73.reserveRoom(room82);
        hotel60.reserveRoom(room82);
        hotel58.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        hotel1.displayRoomStatus();
        Room room88 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNull(room88);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2544");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel(1);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        hotel6.reserveRoom(room37);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Room room44 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room44);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room44);
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2545");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass10 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2546");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Hotel hotel8 = new Hotel(0);
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        Room room11 = hotel8.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        hotel44.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel53.reserveRoom(room62);
        hotel44.reserveRoom(room62);
        hotel35.reserveRoom(room62);
        hotel13.reserveRoom(room62);
        hotel8.reserveRoom(room62);
        hotel1.reserveRoom(room62);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) ' ');
        hotel72.displayRoomStatus();
        Room room74 = hotel72.findAvailableRoom();
        hotel1.reserveRoom(room74);
        java.lang.Class<?> wildcardClass76 = room74.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2547");
        Hotel hotel1 = new Hotel((int) (byte) 100);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel3.reserveRoom(room8);
        hotel3.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel12.reserveRoom(room30);
        hotel3.reserveRoom(room30);
        Hotel hotel35 = new Hotel((int) 'a');
        hotel35.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel35.reserveRoom(room43);
        Room room46 = hotel35.findAvailableRoom();
        hotel3.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room46);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2548");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        hotel7.reserveRoom(room29);
        hotel7.displayRoomStatus();
        Room room34 = hotel7.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (short) 100);
        Room room37 = hotel36.findAvailableRoom();
        hotel7.reserveRoom(room37);
        hotel1.reserveRoom(room37);
        Room room40 = hotel1.findAvailableRoom();
        Room room41 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room41);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2549");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        Room room44 = hotel33.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel33.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Hotel hotel60 = new Hotel(10);
        Room room61 = hotel60.findAvailableRoom();
        Room room62 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel65 = new Hotel(10);
        hotel65.displayRoomStatus();
        Room room67 = hotel65.findAvailableRoom();
        Hotel hotel69 = new Hotel(0);
        hotel69.displayRoomStatus();
        Room room71 = hotel69.findAvailableRoom();
        Room room72 = hotel69.findAvailableRoom();
        Room room73 = hotel69.findAvailableRoom();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        hotel75.displayRoomStatus();
        Room room77 = hotel75.findAvailableRoom();
        Room room78 = hotel75.findAvailableRoom();
        Hotel hotel80 = new Hotel((int) (byte) -1);
        Room room81 = hotel80.findAvailableRoom();
        hotel80.displayRoomStatus();
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel80.reserveRoom(room85);
        hotel75.reserveRoom(room85);
        hotel69.reserveRoom(room85);
        hotel65.reserveRoom(room85);
        hotel60.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNull(room81);
        org.junit.Assert.assertNotNull(room85);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2550");
        Hotel hotel1 = new Hotel((int) (short) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel6.reserveRoom(room15);
        Room room17 = hotel6.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel4.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel34 = new Hotel(0);
        hotel34.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel34.reserveRoom(room38);
        Room room40 = hotel34.findAvailableRoom();
        Hotel hotel42 = new Hotel(0);
        hotel42.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel42.reserveRoom(room46);
        Room room48 = hotel42.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        hotel54.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel63.reserveRoom(room72);
        hotel54.reserveRoom(room72);
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel54.reserveRoom(room85);
        hotel50.reserveRoom(room85);
        hotel42.reserveRoom(room85);
        hotel34.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        hotel1.displayRoomStatus();
        Room room93 = hotel1.findAvailableRoom();
        Room room94 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNull(room93);
        org.junit.Assert.assertNull(room94);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2551");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        hotel31.reserveRoom(room53);
        hotel31.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel59.reserveRoom(room68);
        hotel31.reserveRoom(room68);
        hotel1.reserveRoom(room68);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room74 = hotel1.findAvailableRoom();
        Room room75 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNull(room75);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2552");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        Room room63 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room67 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass68 = room67.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room67);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2553");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel(0);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Room room6 = hotel3.findAvailableRoom();
        Room room7 = hotel3.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Room room12 = hotel9.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel9.reserveRoom(room19);
        hotel3.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2554");
        Hotel hotel1 = new Hotel((int) (byte) 10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) '4');
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel12.reserveRoom(room30);
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room43);
        hotel12.reserveRoom(room43);
        hotel8.reserveRoom(room43);
        hotel6.reserveRoom(room43);
        Room room48 = hotel6.findAvailableRoom();
        Hotel hotel50 = new Hotel(1);
        hotel50.displayRoomStatus();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        hotel54.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel63.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel63.reserveRoom(room81);
        hotel54.reserveRoom(room81);
        hotel50.reserveRoom(room81);
        hotel50.displayRoomStatus();
        hotel50.displayRoomStatus();
        Room room88 = hotel50.findAvailableRoom();
        hotel6.reserveRoom(room88);
        hotel1.reserveRoom(room88);
        Hotel hotel92 = new Hotel((int) 'a');
        Room room93 = hotel92.findAvailableRoom();
        Room room94 = hotel92.findAvailableRoom();
        hotel1.reserveRoom(room94);
        Room room96 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(room93);
        org.junit.Assert.assertNotNull(room94);
        org.junit.Assert.assertNotNull(room96);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2555");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass6 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2556");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel8.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room48 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room48);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2557");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Room room23 = hotel20.findAvailableRoom();
        Room room24 = hotel20.findAvailableRoom();
        hotel1.reserveRoom(room24);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room24);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2558");
        Hotel hotel1 = new Hotel((int) (short) 10);
        Hotel hotel3 = new Hotel((int) (short) 10);
        Room room4 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room4);
        java.lang.Class<?> wildcardClass6 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2559");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Room room32 = hotel29.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        hotel34.displayRoomStatus();
        Room room36 = hotel34.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        hotel34.reserveRoom(room56);
        hotel34.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) -1);
        Room room63 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel62.reserveRoom(room67);
        hotel62.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) -1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel71.reserveRoom(room76);
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel71.reserveRoom(room80);
        hotel62.reserveRoom(room80);
        hotel34.reserveRoom(room80);
        hotel29.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room88 = hotel1.findAvailableRoom();
        Room room89 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room88);
        org.junit.Assert.assertNull(room89);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2560");
        Hotel hotel1 = new Hotel((int) (byte) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2561");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (short) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Room room12 = hotel9.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel14.reserveRoom(room21);
        hotel9.reserveRoom(room21);
        Room room25 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room25);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2562");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Room room28 = hotel1.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (short) 100);
        Room room31 = hotel30.findAvailableRoom();
        hotel1.reserveRoom(room31);
        Room room33 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room35 = hotel1.findAvailableRoom();
        Room room36 = hotel1.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Room room41 = hotel38.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        hotel43.displayRoomStatus();
        Room room45 = hotel43.findAvailableRoom();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        hotel47.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel56.reserveRoom(room61);
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel56.reserveRoom(room65);
        hotel47.reserveRoom(room65);
        hotel43.reserveRoom(room65);
        hotel43.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) -1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel71.reserveRoom(room76);
        hotel71.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) -1);
        Room room81 = hotel80.findAvailableRoom();
        hotel80.displayRoomStatus();
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel80.reserveRoom(room85);
        Hotel hotel88 = new Hotel((int) (byte) 1);
        Room room89 = hotel88.findAvailableRoom();
        hotel80.reserveRoom(room89);
        hotel71.reserveRoom(room89);
        hotel43.reserveRoom(room89);
        hotel38.reserveRoom(room89);
        hotel1.reserveRoom(room89);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room89);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2563");
        Hotel hotel1 = new Hotel((int) '#');
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(1);
        hotel4.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        hotel7.reserveRoom(room29);
        hotel7.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel7.reserveRoom(room44);
        Hotel hotel48 = new Hotel(0);
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Room room53 = hotel50.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel7.reserveRoom(room53);
        hotel4.reserveRoom(room53);
        Room room57 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room57);
        Room room59 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2564");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room36 = hotel1.findAvailableRoom();
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2565");
        Hotel hotel1 = new Hotel((int) ' ');
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass4 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2566");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room14 = hotel1.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) ' ');
        Hotel hotel18 = new Hotel((int) 'a');
        hotel18.displayRoomStatus();
        Room room20 = hotel18.findAvailableRoom();
        hotel16.reserveRoom(room20);
        Hotel hotel23 = new Hotel(0);
        hotel23.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel23.reserveRoom(room27);
        Room room29 = hotel23.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel35.reserveRoom(room66);
        hotel31.reserveRoom(room66);
        hotel23.reserveRoom(room66);
        hotel16.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        java.lang.Class<?> wildcardClass73 = room66.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2567");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room32 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room32);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2568");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room14 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2569");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Room room28 = hotel1.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (short) 100);
        Room room31 = hotel30.findAvailableRoom();
        hotel1.reserveRoom(room31);
        Room room33 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        hotel36.displayRoomStatus();
        Room room38 = hotel36.findAvailableRoom();
        Room room39 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        hotel42.displayRoomStatus();
        Room room44 = hotel42.findAvailableRoom();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel55.reserveRoom(room64);
        hotel46.reserveRoom(room64);
        hotel42.reserveRoom(room64);
        hotel42.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel70.reserveRoom(room79);
        hotel42.reserveRoom(room79);
        Hotel hotel83 = new Hotel(0);
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel85.displayRoomStatus();
        Room room88 = hotel85.findAvailableRoom();
        hotel83.reserveRoom(room88);
        hotel42.reserveRoom(room88);
        hotel36.reserveRoom(room88);
        hotel1.reserveRoom(room88);
        java.lang.Class<?> wildcardClass93 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2570");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Room room36 = hotel15.findAvailableRoom();
        Room room37 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Room room39 = hotel15.findAvailableRoom();
        Hotel hotel41 = new Hotel((int) (short) 1);
        Hotel hotel43 = new Hotel((int) (short) 0);
        Room room44 = hotel43.findAvailableRoom();
        Hotel hotel46 = new Hotel(10);
        Room room47 = hotel46.findAvailableRoom();
        hotel43.reserveRoom(room47);
        hotel41.reserveRoom(room47);
        hotel41.displayRoomStatus();
        hotel41.displayRoomStatus();
        Hotel hotel53 = new Hotel(10);
        Room room54 = hotel53.findAvailableRoom();
        Room room55 = hotel53.findAvailableRoom();
        Hotel hotel57 = new Hotel((int) (short) 0);
        Room room58 = hotel57.findAvailableRoom();
        Room room59 = hotel57.findAvailableRoom();
        Room room60 = hotel57.findAvailableRoom();
        Room room61 = hotel57.findAvailableRoom();
        Hotel hotel63 = new Hotel(0);
        hotel63.displayRoomStatus();
        Room room65 = hotel63.findAvailableRoom();
        Room room66 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        hotel63.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) ' ');
        Hotel hotel72 = new Hotel((int) (short) 0);
        Room room73 = hotel72.findAvailableRoom();
        Hotel hotel75 = new Hotel(10);
        Room room76 = hotel75.findAvailableRoom();
        hotel72.reserveRoom(room76);
        hotel70.reserveRoom(room76);
        hotel63.reserveRoom(room76);
        hotel57.reserveRoom(room76);
        hotel53.reserveRoom(room76);
        hotel41.reserveRoom(room76);
        hotel15.reserveRoom(room76);
        hotel1.reserveRoom(room76);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room76);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2571");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) ' ');
        Hotel hotel33 = new Hotel((int) (short) 0);
        Room room34 = hotel33.findAvailableRoom();
        Hotel hotel36 = new Hotel(10);
        Room room37 = hotel36.findAvailableRoom();
        hotel33.reserveRoom(room37);
        hotel31.reserveRoom(room37);
        hotel1.reserveRoom(room37);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room37);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2572");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2573");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        Room room32 = hotel1.findAvailableRoom();
        Hotel hotel34 = new Hotel(0);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        hotel34.displayRoomStatus();
        Hotel hotel39 = new Hotel(0);
        hotel39.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel39.reserveRoom(room43);
        hotel34.reserveRoom(room43);
        Hotel hotel47 = new Hotel((int) (short) 0);
        Room room48 = hotel47.findAvailableRoom();
        Hotel hotel50 = new Hotel(10);
        Room room51 = hotel50.findAvailableRoom();
        hotel47.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Room room57 = hotel54.findAvailableRoom();
        hotel47.reserveRoom(room57);
        hotel34.reserveRoom(room57);
        Hotel hotel61 = new Hotel((int) 'a');
        Room room62 = hotel61.findAvailableRoom();
        Room room63 = hotel61.findAvailableRoom();
        hotel34.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        java.lang.Class<?> wildcardClass66 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2574");
        Hotel hotel1 = new Hotel((int) '#');
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel3.displayRoomStatus();
        hotel3.displayRoomStatus();
        Room room31 = hotel3.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        hotel33.displayRoomStatus();
        Room room35 = hotel33.findAvailableRoom();
        Room room36 = hotel33.findAvailableRoom();
        Hotel hotel38 = new Hotel(1);
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel42.reserveRoom(room69);
        hotel38.reserveRoom(room69);
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        Room room76 = hotel38.findAvailableRoom();
        hotel33.reserveRoom(room76);
        Room room78 = hotel33.findAvailableRoom();
        hotel3.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room78);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2575");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Room room23 = hotel1.findAvailableRoom();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Room room28 = hotel25.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        hotel30.displayRoomStatus();
        Room room32 = hotel30.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel30.reserveRoom(room52);
        hotel30.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel67.reserveRoom(room76);
        hotel58.reserveRoom(room76);
        hotel30.reserveRoom(room76);
        hotel25.reserveRoom(room76);
        hotel1.reserveRoom(room76);
        hotel1.displayRoomStatus();
        Room room83 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room83);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2576");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room52 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 10);
        Room room56 = hotel55.findAvailableRoom();
        hotel1.reserveRoom(room56);
        Room room58 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room58);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2577");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(10);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel(0);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Room room13 = hotel10.findAvailableRoom();
        Room room14 = hotel10.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Room room19 = hotel16.findAvailableRoom();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel16.reserveRoom(room26);
        hotel10.reserveRoom(room26);
        hotel6.reserveRoom(room26);
        hotel1.reserveRoom(room26);
        Room room32 = hotel1.findAvailableRoom();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel38.reserveRoom(room69);
        hotel34.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2578");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) ' ');
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel4.reserveRoom(room10);
        Room room13 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room13);
        Room room15 = hotel1.findAvailableRoom();
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room16);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2579");
        Hotel hotel1 = new Hotel((int) '4');
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel3.reserveRoom(room8);
        hotel3.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel12.reserveRoom(room21);
        hotel3.reserveRoom(room21);
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        hotel25.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel25.reserveRoom(room52);
        hotel3.reserveRoom(room52);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Room room61 = hotel58.findAvailableRoom();
        hotel3.reserveRoom(room61);
        hotel1.reserveRoom(room61);
        Room room64 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room64);
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2580");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        Room room11 = hotel1.findAvailableRoom();
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) 'a');
        hotel14.displayRoomStatus();
        Room room16 = hotel14.findAvailableRoom();
        Room room17 = hotel14.findAvailableRoom();
        Room room18 = hotel14.findAvailableRoom();
        Room room19 = hotel14.findAvailableRoom();
        hotel1.reserveRoom(room19);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room19);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2581");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        Room room41 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        hotel44.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        Room room58 = hotel47.findAvailableRoom();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel47.reserveRoom(room69);
        hotel44.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        Room room74 = hotel1.findAvailableRoom();
        Room room75 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNull(room75);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2582");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(0);
        hotel5.displayRoomStatus();
        Room room7 = hotel5.findAvailableRoom();
        Room room8 = hotel5.findAvailableRoom();
        Room room9 = hotel5.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Room room14 = hotel11.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel11.reserveRoom(room21);
        hotel5.reserveRoom(room21);
        hotel1.reserveRoom(room21);
        Room room26 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room26);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2583");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(0);
        hotel6.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel20.reserveRoom(room38);
        hotel16.reserveRoom(room38);
        Room room42 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) ' ');
        Hotel hotel47 = new Hotel((int) 'a');
        hotel47.displayRoomStatus();
        Room room49 = hotel47.findAvailableRoom();
        hotel45.reserveRoom(room49);
        hotel16.reserveRoom(room49);
        hotel1.reserveRoom(room49);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass55 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2584");
        Hotel hotel1 = new Hotel((-1));
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(0);
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room11 = hotel8.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) '4');
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel21.reserveRoom(room52);
        hotel17.reserveRoom(room52);
        hotel15.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2585");
        Hotel hotel1 = new Hotel((int) (byte) 0);
        Room room2 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = room2.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2586");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room10 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room10);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2587");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        hotel1.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (short) -1);
        hotel18.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) 'a');
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        Room room34 = hotel23.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel23.reserveRoom(room45);
        hotel21.reserveRoom(room45);
        hotel18.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        Room room51 = hotel1.findAvailableRoom();
        Room room52 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2588");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        Room room39 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Room room45 = hotel42.findAvailableRoom();
        Room room46 = hotel42.findAvailableRoom();
        Room room47 = hotel42.findAvailableRoom();
        hotel1.reserveRoom(room47);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2589");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel33.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel33.reserveRoom(room60);
        hotel11.reserveRoom(room60);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Room room69 = hotel66.findAvailableRoom();
        hotel11.reserveRoom(room69);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        hotel11.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        Room room84 = hotel1.findAvailableRoom();
        Hotel hotel86 = new Hotel((int) (byte) -1);
        Hotel hotel88 = new Hotel((int) (byte) -1);
        Room room89 = hotel88.findAvailableRoom();
        hotel88.displayRoomStatus();
        Hotel hotel92 = new Hotel((int) (byte) 1);
        Room room93 = hotel92.findAvailableRoom();
        hotel88.reserveRoom(room93);
        hotel86.reserveRoom(room93);
        hotel1.reserveRoom(room93);
        Room room97 = hotel1.findAvailableRoom();
        Room room98 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass99 = room98.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNull(room89);
        org.junit.Assert.assertNotNull(room93);
        org.junit.Assert.assertNull(room97);
        org.junit.Assert.assertNull(room98);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2590");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room29 = hotel1.findAvailableRoom();
        Room room30 = hotel1.findAvailableRoom();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2591");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        hotel70.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) -1);
        Room room80 = hotel79.findAvailableRoom();
        hotel79.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel79.reserveRoom(room84);
        Hotel hotel87 = new Hotel((int) (byte) 1);
        Room room88 = hotel87.findAvailableRoom();
        hotel79.reserveRoom(room88);
        hotel70.reserveRoom(room88);
        hotel61.reserveRoom(room88);
        hotel39.reserveRoom(room88);
        hotel1.reserveRoom(room88);
        hotel1.displayRoomStatus();
        Room room95 = hotel1.findAvailableRoom();
        Room room96 = hotel1.findAvailableRoom();
        Room room97 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNull(room95);
        org.junit.Assert.assertNull(room96);
        org.junit.Assert.assertNull(room97);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2592");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room7);
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Room room13 = hotel10.findAvailableRoom();
        Room room14 = hotel10.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel10.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        Room room20 = hotel1.findAvailableRoom();
        Hotel hotel22 = new Hotel((int) 'a');
        hotel22.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        hotel22.reserveRoom(room30);
        Room room33 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Room room35 = hotel22.findAvailableRoom();
        hotel1.reserveRoom(room35);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room35);
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2593");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        Room room12 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room14 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room12);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2594");
        Hotel hotel1 = new Hotel((int) (short) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        Room room39 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        hotel43.displayRoomStatus();
        Room room45 = hotel43.findAvailableRoom();
        Hotel hotel47 = new Hotel((int) (byte) 0);
        Hotel hotel49 = new Hotel(0);
        hotel49.displayRoomStatus();
        Room room51 = hotel49.findAvailableRoom();
        Room room52 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        hotel49.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) ' ');
        Hotel hotel58 = new Hotel((int) (short) 0);
        Room room59 = hotel58.findAvailableRoom();
        Hotel hotel61 = new Hotel(10);
        Room room62 = hotel61.findAvailableRoom();
        hotel58.reserveRoom(room62);
        hotel56.reserveRoom(room62);
        hotel49.reserveRoom(room62);
        hotel47.reserveRoom(room62);
        hotel43.reserveRoom(room62);
        hotel5.reserveRoom(room62);
        hotel1.reserveRoom(room62);
        java.lang.Class<?> wildcardClass70 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2595");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Room room59 = hotel56.findAvailableRoom();
        hotel1.reserveRoom(room59);
        Room room61 = hotel1.findAvailableRoom();
        Room room62 = hotel1.findAvailableRoom();
        Room room63 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room63);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2596");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room26 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass28 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2597");
        Hotel hotel1 = new Hotel((int) (byte) 100);
        Room room2 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2598");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Room room23 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room25 = hotel1.findAvailableRoom();
        Room room26 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room26);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2599");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel(1);
        hotel13.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel20.reserveRoom(room38);
        hotel16.reserveRoom(room38);
        hotel16.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel16.reserveRoom(room53);
        Hotel hotel57 = new Hotel(0);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Room room62 = hotel59.findAvailableRoom();
        hotel57.reserveRoom(room62);
        hotel16.reserveRoom(room62);
        hotel13.reserveRoom(room62);
        hotel9.reserveRoom(room62);
        hotel1.reserveRoom(room62);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room62);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2600");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room38 = hotel1.findAvailableRoom();
        Room room39 = hotel1.findAvailableRoom();
        Room room40 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass42 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2601");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Room room34 = hotel31.findAvailableRoom();
        Hotel hotel36 = new Hotel(1);
        hotel36.displayRoomStatus();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        hotel49.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel58.reserveRoom(room67);
        hotel49.reserveRoom(room67);
        hotel40.reserveRoom(room67);
        hotel36.reserveRoom(room67);
        hotel36.displayRoomStatus();
        hotel36.displayRoomStatus();
        Room room74 = hotel36.findAvailableRoom();
        hotel31.reserveRoom(room74);
        Room room76 = hotel31.findAvailableRoom();
        hotel1.reserveRoom(room76);
        Room room78 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass79 = room78.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room78);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2602");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Room room59 = hotel56.findAvailableRoom();
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        Room room62 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass64 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2603");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) 'a');
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room25);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        hotel30.displayRoomStatus();
        Room room38 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Room room40 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        hotel30.displayRoomStatus();
        hotel30.displayRoomStatus();
        Hotel hotel45 = new Hotel(10);
        Room room46 = hotel45.findAvailableRoom();
        Room room47 = hotel45.findAvailableRoom();
        Room room48 = hotel45.findAvailableRoom();
        hotel30.reserveRoom(room48);
        hotel1.reserveRoom(room48);
        java.lang.Class<?> wildcardClass51 = room48.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2604");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) ' ');
        Hotel hotel7 = new Hotel((int) 'a');
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        hotel5.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        Hotel hotel13 = new Hotel((int) (short) -1);
        hotel13.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) 'a');
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel18.reserveRoom(room27);
        Room room29 = hotel18.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel31.reserveRoom(room40);
        hotel18.reserveRoom(room40);
        hotel16.reserveRoom(room40);
        hotel13.reserveRoom(room40);
        hotel1.reserveRoom(room40);
        hotel1.displayRoomStatus();
        Room room47 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room47);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2605");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        Room room42 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass44 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2606");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Room room36 = hotel9.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (short) 100);
        Room room39 = hotel38.findAvailableRoom();
        hotel9.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass44 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2607");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        hotel23.reserveRoom(room45);
        hotel23.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel23.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        java.lang.Class<?> wildcardClass83 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2608");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        Room room13 = hotel1.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        hotel15.displayRoomStatus();
        Room room17 = hotel15.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel15.reserveRoom(room37);
        hotel15.displayRoomStatus();
        hotel15.displayRoomStatus();
        Room room43 = hotel15.findAvailableRoom();
        Room room44 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Room room53 = hotel50.findAvailableRoom();
        hotel47.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Room room59 = hotel56.findAvailableRoom();
        Room room60 = hotel56.findAvailableRoom();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel56.reserveRoom(room63);
        hotel47.reserveRoom(room63);
        hotel15.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room63);
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2609");
        Hotel hotel1 = new Hotel(0);
        Hotel hotel3 = new Hotel((int) (byte) 1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) '4');
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel16.reserveRoom(room47);
        hotel12.reserveRoom(room47);
        hotel10.reserveRoom(room47);
        hotel1.reserveRoom(room47);
        Room room53 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room53);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2610");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) -1);
        hotel46.displayRoomStatus();
        Room room48 = hotel46.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        hotel50.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel59.reserveRoom(room68);
        hotel50.reserveRoom(room68);
        hotel46.reserveRoom(room68);
        hotel46.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) -1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel74.reserveRoom(room79);
        hotel74.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) -1);
        Room room84 = hotel83.findAvailableRoom();
        hotel83.displayRoomStatus();
        Hotel hotel87 = new Hotel((int) (byte) 1);
        Room room88 = hotel87.findAvailableRoom();
        hotel83.reserveRoom(room88);
        Hotel hotel91 = new Hotel((int) (byte) 1);
        Room room92 = hotel91.findAvailableRoom();
        hotel83.reserveRoom(room92);
        hotel74.reserveRoom(room92);
        hotel46.reserveRoom(room92);
        hotel38.reserveRoom(room92);
        hotel1.reserveRoom(room92);
        java.lang.Class<?> wildcardClass98 = room92.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2611");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        Room room12 = hotel1.findAvailableRoom();
        Room room13 = hotel1.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Room room18 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        hotel30.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel39.reserveRoom(room48);
        hotel30.reserveRoom(room48);
        hotel21.reserveRoom(room48);
        Hotel hotel53 = new Hotel((int) 'a');
        hotel53.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) -1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel56.reserveRoom(room61);
        hotel53.reserveRoom(room61);
        Room room64 = hotel53.findAvailableRoom();
        hotel21.reserveRoom(room64);
        hotel15.reserveRoom(room64);
        hotel1.reserveRoom(room64);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room70 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room70);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2612");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel33 = new Hotel((int) 'a');
        hotel33.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel33.reserveRoom(room41);
        Room room44 = hotel33.findAvailableRoom();
        hotel1.reserveRoom(room44);
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room47);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2613");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        Room room63 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room67 = hotel1.findAvailableRoom();
        Room room68 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass69 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2614");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel8.reserveRoom(room35);
        hotel4.reserveRoom(room35);
        hotel1.reserveRoom(room35);
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        hotel64.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) -1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel73.reserveRoom(room78);
        hotel73.displayRoomStatus();
        Hotel hotel82 = new Hotel((int) (byte) -1);
        Room room83 = hotel82.findAvailableRoom();
        hotel82.displayRoomStatus();
        Hotel hotel86 = new Hotel((int) (byte) 1);
        Room room87 = hotel86.findAvailableRoom();
        hotel82.reserveRoom(room87);
        Hotel hotel90 = new Hotel((int) (byte) 1);
        Room room91 = hotel90.findAvailableRoom();
        hotel82.reserveRoom(room91);
        hotel73.reserveRoom(room91);
        hotel64.reserveRoom(room91);
        hotel42.reserveRoom(room91);
        hotel1.reserveRoom(room91);
        java.lang.Class<?> wildcardClass97 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room91);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2615");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        Room room39 = hotel28.findAvailableRoom();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel28.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) 'a');
        hotel56.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        hotel56.reserveRoom(room64);
        hotel56.displayRoomStatus();
        hotel56.displayRoomStatus();
        Room room69 = hotel56.findAvailableRoom();
        hotel1.reserveRoom(room69);
        Room room71 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room73 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room73);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2616");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room7 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass8 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2617");
        Hotel hotel1 = new Hotel(0);
        Hotel hotel3 = new Hotel((int) (byte) 1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Room room13 = hotel10.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        hotel15.displayRoomStatus();
        Room room17 = hotel15.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel15.reserveRoom(room37);
        hotel15.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        hotel43.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel52.reserveRoom(room61);
        hotel43.reserveRoom(room61);
        hotel15.reserveRoom(room61);
        hotel10.reserveRoom(room61);
        Room room66 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Room room68 = hotel10.findAvailableRoom();
        hotel1.reserveRoom(room68);
        Room room70 = hotel1.findAvailableRoom();
        Room room71 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass72 = room71.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room71);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2618");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel(0);
        hotel7.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel7.reserveRoom(room11);
        Room room13 = hotel7.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel19.reserveRoom(room50);
        hotel15.reserveRoom(room50);
        hotel7.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) 'a');
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        Room room71 = hotel60.findAvailableRoom();
        Hotel hotel73 = new Hotel((int) (byte) -1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel73.reserveRoom(room78);
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel73.reserveRoom(room82);
        hotel60.reserveRoom(room82);
        hotel58.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room82);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2619");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        hotel1.reserveRoom(room14);
        hotel1.displayRoomStatus();
        Hotel hotel20 = new Hotel((-1));
        Hotel hotel22 = new Hotel((int) (byte) -1);
        hotel22.displayRoomStatus();
        Room room24 = hotel22.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        hotel22.reserveRoom(room44);
        hotel20.reserveRoom(room44);
        Hotel hotel50 = new Hotel(0);
        hotel50.displayRoomStatus();
        Room room52 = hotel50.findAvailableRoom();
        Room room53 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        hotel50.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) ' ');
        Hotel hotel59 = new Hotel((int) (short) 0);
        Room room60 = hotel59.findAvailableRoom();
        Hotel hotel62 = new Hotel(10);
        Room room63 = hotel62.findAvailableRoom();
        hotel59.reserveRoom(room63);
        hotel57.reserveRoom(room63);
        hotel50.reserveRoom(room63);
        hotel20.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        Room room69 = hotel1.findAvailableRoom();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Room room74 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        hotel71.displayRoomStatus();
        Room room77 = hotel71.findAvailableRoom();
        hotel1.reserveRoom(room77);
        Room room79 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room79);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2620");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room52 = hotel1.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Room room57 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Room room60 = hotel54.findAvailableRoom();
        hotel1.reserveRoom(room60);
        Room room62 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room64 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass65 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2621");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        Room room12 = hotel8.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel8.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        Room room50 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass51 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2622");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) 'a');
        hotel8.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel8.reserveRoom(room16);
        Room room19 = hotel8.findAvailableRoom();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        hotel21.displayRoomStatus();
        Room room23 = hotel21.findAvailableRoom();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        hotel25.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room43);
        hotel25.reserveRoom(room43);
        hotel21.reserveRoom(room43);
        hotel21.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        hotel49.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel58.reserveRoom(room67);
        hotel49.reserveRoom(room67);
        hotel21.reserveRoom(room67);
        hotel8.reserveRoom(room67);
        hotel1.reserveRoom(room67);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room67);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2623");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        Room room63 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        Room room66 = hotel1.findAvailableRoom();
        Room room67 = hotel1.findAvailableRoom();
        Room room68 = hotel1.findAvailableRoom();
        Hotel hotel70 = new Hotel((int) (short) 0);
        Room room71 = hotel70.findAvailableRoom();
        Hotel hotel73 = new Hotel(10);
        Room room74 = hotel73.findAvailableRoom();
        hotel70.reserveRoom(room74);
        hotel1.reserveRoom(room74);
        Hotel hotel78 = new Hotel(0);
        hotel78.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel78.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room82);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2624");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Hotel hotel11 = new Hotel((int) (short) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel1.reserveRoom(room12);
        java.lang.Class<?> wildcardClass14 = hotel1.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2625");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        Room room29 = hotel1.findAvailableRoom();
        Room room30 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Room room36 = hotel33.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        hotel38.displayRoomStatus();
        Room room40 = hotel38.findAvailableRoom();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel38.reserveRoom(room60);
        hotel38.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) -1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel66.reserveRoom(room71);
        hotel66.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel75.reserveRoom(room84);
        hotel66.reserveRoom(room84);
        hotel38.reserveRoom(room84);
        hotel33.reserveRoom(room84);
        hotel33.displayRoomStatus();
        hotel33.displayRoomStatus();
        Room room91 = hotel33.findAvailableRoom();
        hotel1.reserveRoom(room91);
        java.lang.Class<?> wildcardClass93 = room91.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2626");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel3.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        hotel44.displayRoomStatus();
        Room room46 = hotel44.findAvailableRoom();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel44.reserveRoom(room66);
        hotel3.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        Room room72 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room72);
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2627");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel(10);
        Room room8 = hotel7.findAvailableRoom();
        Room room9 = hotel7.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (short) 0);
        Room room12 = hotel11.findAvailableRoom();
        Room room13 = hotel11.findAvailableRoom();
        Room room14 = hotel11.findAvailableRoom();
        Room room15 = hotel11.findAvailableRoom();
        Hotel hotel17 = new Hotel(0);
        hotel17.displayRoomStatus();
        Room room19 = hotel17.findAvailableRoom();
        Room room20 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        hotel17.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) ' ');
        Hotel hotel26 = new Hotel((int) (short) 0);
        Room room27 = hotel26.findAvailableRoom();
        Hotel hotel29 = new Hotel(10);
        Room room30 = hotel29.findAvailableRoom();
        hotel26.reserveRoom(room30);
        hotel24.reserveRoom(room30);
        hotel17.reserveRoom(room30);
        hotel11.reserveRoom(room30);
        hotel7.reserveRoom(room30);
        hotel1.reserveRoom(room30);
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel38.reserveRoom(room69);
        Room room72 = hotel38.findAvailableRoom();
        Room room73 = hotel38.findAvailableRoom();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Room room78 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Room room80 = hotel75.findAvailableRoom();
        hotel38.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel86 = new Hotel((int) (short) 1);
        Hotel hotel88 = new Hotel((int) (short) 0);
        Room room89 = hotel88.findAvailableRoom();
        Hotel hotel91 = new Hotel(10);
        Room room92 = hotel91.findAvailableRoom();
        hotel88.reserveRoom(room92);
        hotel86.reserveRoom(room92);
        hotel86.displayRoomStatus();
        Room room96 = hotel86.findAvailableRoom();
        hotel1.reserveRoom(room96);
        Room room98 = hotel1.findAvailableRoom();
        Room room99 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room89);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNotNull(room96);
        org.junit.Assert.assertNotNull(room98);
        org.junit.Assert.assertNotNull(room99);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2628");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room42);
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2629");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        Room room11 = hotel1.findAvailableRoom();
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel(0);
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Room room19 = hotel16.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room19);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2630");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Room room23 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) 'a');
        hotel27.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        hotel27.reserveRoom(room35);
        Room room38 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Room room40 = hotel27.findAvailableRoom();
        hotel1.reserveRoom(room40);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room40);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2631");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel8.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        Room room44 = hotel1.findAvailableRoom();
        Room room45 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room45);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2632");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room42);
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2633");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Room room28 = hotel7.findAvailableRoom();
        Room room29 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room31 = hotel7.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (short) 1);
        Hotel hotel35 = new Hotel((int) (short) 0);
        Room room36 = hotel35.findAvailableRoom();
        Hotel hotel38 = new Hotel(10);
        Room room39 = hotel38.findAvailableRoom();
        hotel35.reserveRoom(room39);
        hotel33.reserveRoom(room39);
        hotel33.displayRoomStatus();
        hotel33.displayRoomStatus();
        Hotel hotel45 = new Hotel(10);
        Room room46 = hotel45.findAvailableRoom();
        Room room47 = hotel45.findAvailableRoom();
        Hotel hotel49 = new Hotel((int) (short) 0);
        Room room50 = hotel49.findAvailableRoom();
        Room room51 = hotel49.findAvailableRoom();
        Room room52 = hotel49.findAvailableRoom();
        Room room53 = hotel49.findAvailableRoom();
        Hotel hotel55 = new Hotel(0);
        hotel55.displayRoomStatus();
        Room room57 = hotel55.findAvailableRoom();
        Room room58 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        hotel55.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) ' ');
        Hotel hotel64 = new Hotel((int) (short) 0);
        Room room65 = hotel64.findAvailableRoom();
        Hotel hotel67 = new Hotel(10);
        Room room68 = hotel67.findAvailableRoom();
        hotel64.reserveRoom(room68);
        hotel62.reserveRoom(room68);
        hotel55.reserveRoom(room68);
        hotel49.reserveRoom(room68);
        hotel45.reserveRoom(room68);
        hotel33.reserveRoom(room68);
        hotel7.reserveRoom(room68);
        hotel1.reserveRoom(room68);
        Room room77 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room77);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2634");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        hotel14.displayRoomStatus();
        Room room16 = hotel14.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel18.reserveRoom(room36);
        hotel14.reserveRoom(room36);
        hotel14.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel14.reserveRoom(room60);
        hotel1.reserveRoom(room60);
        Room room65 = hotel1.findAvailableRoom();
        Room room66 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room66);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2635");
        Hotel hotel1 = new Hotel((int) (byte) 100);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        hotel12.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2636");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(0);
        hotel5.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel5.reserveRoom(room9);
        hotel5.displayRoomStatus();
        Hotel hotel13 = new Hotel(10);
        hotel13.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) 'a');
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel20.reserveRoom(room47);
        hotel16.reserveRoom(room47);
        hotel13.reserveRoom(room47);
        hotel5.reserveRoom(room47);
        Room room54 = hotel5.findAvailableRoom();
        Hotel hotel56 = new Hotel((int) (short) 10);
        Room room57 = hotel56.findAvailableRoom();
        Room room58 = hotel56.findAvailableRoom();
        hotel5.reserveRoom(room58);
        hotel1.reserveRoom(room58);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room58);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2637");
        Hotel hotel1 = new Hotel(0);
        Hotel hotel3 = new Hotel((int) (byte) 1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2638");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel7.reserveRoom(room16);
        hotel1.reserveRoom(room16);
        Room room19 = hotel1.findAvailableRoom();
        Room room20 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2639");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel((int) (byte) 1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room6 = hotel3.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel12.reserveRoom(room30);
        hotel8.reserveRoom(room30);
        hotel8.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel45.reserveRoom(room54);
        hotel36.reserveRoom(room54);
        hotel8.reserveRoom(room54);
        hotel3.reserveRoom(room54);
        Room room59 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Room room61 = hotel3.findAvailableRoom();
        hotel1.reserveRoom(room61);
        Room room63 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass66 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2640");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel(0);
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        Room room15 = hotel9.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel21.reserveRoom(room52);
        hotel17.reserveRoom(room52);
        hotel9.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        hotel1.displayRoomStatus();
        Room room59 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room61 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass63 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2641");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) 'a');
        hotel4.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel4.reserveRoom(room12);
        Room room15 = hotel4.findAvailableRoom();
        Room room16 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room16);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel21.displayRoomStatus();
        hotel21.displayRoomStatus();
        Room room34 = hotel21.findAvailableRoom();
        Hotel hotel36 = new Hotel((int) ' ');
        Hotel hotel38 = new Hotel((int) 'a');
        hotel38.displayRoomStatus();
        Room room40 = hotel38.findAvailableRoom();
        hotel36.reserveRoom(room40);
        Hotel hotel43 = new Hotel(0);
        hotel43.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel43.reserveRoom(room47);
        Room room49 = hotel43.findAvailableRoom();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        hotel55.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel64.reserveRoom(room73);
        hotel55.reserveRoom(room73);
        Hotel hotel77 = new Hotel((int) (byte) -1);
        Room room78 = hotel77.findAvailableRoom();
        hotel77.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel77.reserveRoom(room82);
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel77.reserveRoom(room86);
        hotel55.reserveRoom(room86);
        hotel51.reserveRoom(room86);
        hotel43.reserveRoom(room86);
        hotel36.reserveRoom(room86);
        hotel21.reserveRoom(room86);
        hotel1.reserveRoom(room86);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass96 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2642");
        Hotel hotel1 = new Hotel((int) ' ');
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(10);
        Room room6 = hotel5.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        hotel8.displayRoomStatus();
        Room room10 = hotel8.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        hotel12.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel12.reserveRoom(room30);
        hotel8.reserveRoom(room30);
        hotel8.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel8.reserveRoom(room45);
        hotel5.reserveRoom(room45);
        Hotel hotel50 = new Hotel(10);
        hotel50.displayRoomStatus();
        Room room52 = hotel50.findAvailableRoom();
        hotel5.reserveRoom(room52);
        hotel5.displayRoomStatus();
        Room room55 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room55);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room55);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2643");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        Room room39 = hotel28.findAvailableRoom();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel28.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) 'a');
        hotel56.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        hotel56.reserveRoom(room64);
        hotel56.displayRoomStatus();
        hotel56.displayRoomStatus();
        Room room69 = hotel56.findAvailableRoom();
        hotel1.reserveRoom(room69);
        Room room71 = hotel1.findAvailableRoom();
        Room room72 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room71);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2644");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (short) 0);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Room room17 = hotel14.findAvailableRoom();
        Hotel hotel19 = new Hotel(1);
        hotel19.displayRoomStatus();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel19.reserveRoom(room50);
        hotel19.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Room room60 = hotel57.findAvailableRoom();
        Room room61 = hotel57.findAvailableRoom();
        hotel19.reserveRoom(room61);
        hotel14.reserveRoom(room61);
        hotel1.reserveRoom(room61);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room61);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2645");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        Room room13 = hotel1.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        hotel15.displayRoomStatus();
        Room room17 = hotel15.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel15.reserveRoom(room37);
        hotel15.displayRoomStatus();
        hotel15.displayRoomStatus();
        Room room43 = hotel15.findAvailableRoom();
        Room room44 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Room room53 = hotel50.findAvailableRoom();
        hotel47.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Room room59 = hotel56.findAvailableRoom();
        Room room60 = hotel56.findAvailableRoom();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel56.reserveRoom(room63);
        hotel47.reserveRoom(room63);
        hotel15.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        java.lang.Class<?> wildcardClass68 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2646");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room8);
        Hotel hotel11 = new Hotel((int) (short) 1);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Room room15 = hotel11.findAvailableRoom();
        hotel1.reserveRoom(room15);
        java.lang.Class<?> wildcardClass17 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2647");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) ' ');
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel4.reserveRoom(room10);
        Room room13 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room13);
        Hotel hotel16 = new Hotel((int) 'a');
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel20.reserveRoom(room47);
        hotel16.reserveRoom(room47);
        hotel1.reserveRoom(room47);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass56 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2648");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2649");
        Hotel hotel1 = new Hotel((int) (short) 10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel((int) (byte) 1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Room room9 = hotel6.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        hotel11.reserveRoom(room33);
        hotel11.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        hotel11.reserveRoom(room57);
        hotel6.reserveRoom(room57);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) '4');
        Hotel hotel67 = new Hotel(0);
        Room room68 = hotel67.findAvailableRoom();
        Hotel hotel70 = new Hotel((int) ' ');
        Hotel hotel72 = new Hotel((int) (short) 0);
        Room room73 = hotel72.findAvailableRoom();
        Hotel hotel75 = new Hotel(10);
        Room room76 = hotel75.findAvailableRoom();
        hotel72.reserveRoom(room76);
        hotel70.reserveRoom(room76);
        Room room79 = hotel70.findAvailableRoom();
        hotel67.reserveRoom(room79);
        Hotel hotel82 = new Hotel((int) 'a');
        hotel82.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) -1);
        Room room86 = hotel85.findAvailableRoom();
        hotel85.displayRoomStatus();
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel85.reserveRoom(room90);
        hotel82.reserveRoom(room90);
        Room room93 = hotel82.findAvailableRoom();
        Room room94 = hotel82.findAvailableRoom();
        Room room95 = hotel82.findAvailableRoom();
        hotel67.reserveRoom(room95);
        hotel65.reserveRoom(room95);
        hotel6.reserveRoom(room95);
        hotel1.reserveRoom(room95);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNotNull(room93);
        org.junit.Assert.assertNotNull(room94);
        org.junit.Assert.assertNotNull(room95);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2650");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        Room room19 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = room19.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room19);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2651");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) ' ');
        Hotel hotel11 = new Hotel((int) 'a');
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        hotel9.reserveRoom(room13);
        Hotel hotel16 = new Hotel(0);
        hotel16.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel16.reserveRoom(room20);
        Room room22 = hotel16.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel28.reserveRoom(room59);
        hotel24.reserveRoom(room59);
        hotel16.reserveRoom(room59);
        hotel9.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        Room room67 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room67);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2652");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel(10);
        hotel5.displayRoomStatus();
        Room room7 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room7);
        hotel1.displayRoomStatus();
        Room room10 = hotel1.findAvailableRoom();
        Room room11 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = room11.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room11);
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2653");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        Room room11 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass12 = room11.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2654");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room37);
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2655");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        Room room63 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        Room room66 = hotel1.findAvailableRoom();
        Room room67 = hotel1.findAvailableRoom();
        Room room68 = hotel1.findAvailableRoom();
        Room room69 = hotel1.findAvailableRoom();
        Room room70 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room69);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2656");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room12 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room12);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2657");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room10 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room10);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2658");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Room room36 = hotel9.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (short) 100);
        Room room39 = hotel38.findAvailableRoom();
        hotel9.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        Hotel hotel43 = new Hotel((int) (short) 10);
        Room room44 = hotel43.findAvailableRoom();
        Room room45 = hotel43.findAvailableRoom();
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Room room52 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Room room54 = hotel49.findAvailableRoom();
        Room room55 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel67.reserveRoom(room76);
        hotel58.reserveRoom(room76);
        Hotel hotel80 = new Hotel((int) 'a');
        hotel80.displayRoomStatus();
        Room room82 = hotel80.findAvailableRoom();
        hotel58.reserveRoom(room82);
        hotel49.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass87 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2659");
        Hotel hotel1 = new Hotel((int) (short) -1);
        Hotel hotel3 = new Hotel((int) ' ');
        Hotel hotel5 = new Hotel((int) (short) 0);
        Room room6 = hotel5.findAvailableRoom();
        Hotel hotel8 = new Hotel(10);
        Room room9 = hotel8.findAvailableRoom();
        hotel5.reserveRoom(room9);
        hotel3.reserveRoom(room9);
        Room room12 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Room room18 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        hotel15.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (short) 0);
        Room room23 = hotel22.findAvailableRoom();
        Hotel hotel25 = new Hotel((int) 'a');
        hotel25.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel25.reserveRoom(room33);
        Room room36 = hotel25.findAvailableRoom();
        Room room37 = hotel25.findAvailableRoom();
        hotel22.reserveRoom(room37);
        hotel15.reserveRoom(room37);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Room room44 = hotel41.findAvailableRoom();
        hotel15.reserveRoom(room44);
        Hotel hotel47 = new Hotel((int) (byte) -1);
        hotel47.displayRoomStatus();
        Room room49 = hotel47.findAvailableRoom();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel47.reserveRoom(room69);
        hotel47.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel75.reserveRoom(room84);
        hotel47.reserveRoom(room84);
        hotel15.reserveRoom(room84);
        hotel3.reserveRoom(room84);
        hotel1.reserveRoom(room84);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room84);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2660");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel(1);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        hotel6.reserveRoom(room37);
        hotel6.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Room room47 = hotel44.findAvailableRoom();
        Room room48 = hotel44.findAvailableRoom();
        hotel6.reserveRoom(room48);
        hotel1.reserveRoom(room48);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room54 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room54);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2661");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        Room room56 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room58 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room60 = hotel1.findAvailableRoom();
        Room room61 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) 'a');
        hotel66.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        hotel66.reserveRoom(room74);
        hotel66.displayRoomStatus();
        hotel66.displayRoomStatus();
        Room room79 = hotel66.findAvailableRoom();
        hotel1.reserveRoom(room79);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room79);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2662");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room11 = hotel8.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel13.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel13.reserveRoom(room59);
        hotel8.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        Room room66 = hotel1.findAvailableRoom();
        Room room67 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room70 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room70);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2663");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        hotel1.reserveRoom(room14);
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room18);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2664");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel33 = new Hotel((int) 'a');
        hotel33.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel33.reserveRoom(room41);
        Room room44 = hotel33.findAvailableRoom();
        hotel1.reserveRoom(room44);
        Hotel hotel47 = new Hotel(0);
        hotel47.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel47.reserveRoom(room51);
        Room room53 = hotel47.findAvailableRoom();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        hotel59.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) -1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel68.reserveRoom(room73);
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel68.reserveRoom(room77);
        hotel59.reserveRoom(room77);
        Hotel hotel81 = new Hotel((int) (byte) -1);
        Room room82 = hotel81.findAvailableRoom();
        hotel81.displayRoomStatus();
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel81.reserveRoom(room86);
        Hotel hotel89 = new Hotel((int) (byte) 1);
        Room room90 = hotel89.findAvailableRoom();
        hotel81.reserveRoom(room90);
        hotel59.reserveRoom(room90);
        hotel55.reserveRoom(room90);
        hotel47.reserveRoom(room90);
        hotel1.reserveRoom(room90);
        Room room96 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room98 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room90);
        org.junit.Assert.assertNull(room96);
        org.junit.Assert.assertNull(room98);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2665");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        Room room41 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room43 = hotel1.findAvailableRoom();
        Room room44 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room43);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2666");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) ' ');
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        hotel8.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 100);
        hotel13.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        hotel22.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel31.reserveRoom(room40);
        hotel22.reserveRoom(room40);
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel22.reserveRoom(room53);
        hotel18.reserveRoom(room53);
        hotel18.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        hotel59.displayRoomStatus();
        Room room61 = hotel59.findAvailableRoom();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel63.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel63.reserveRoom(room81);
        hotel59.reserveRoom(room81);
        hotel18.reserveRoom(room81);
        hotel16.reserveRoom(room81);
        hotel13.reserveRoom(room81);
        hotel8.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        java.lang.Class<?> wildcardClass90 = room81.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2667");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel9.reserveRoom(room46);
        hotel6.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        Hotel hotel52 = new Hotel(10);
        Room room53 = hotel52.findAvailableRoom();
        Room room54 = hotel52.findAvailableRoom();
        Hotel hotel56 = new Hotel((int) (short) 0);
        Room room57 = hotel56.findAvailableRoom();
        Room room58 = hotel56.findAvailableRoom();
        Room room59 = hotel56.findAvailableRoom();
        Room room60 = hotel56.findAvailableRoom();
        Hotel hotel62 = new Hotel(0);
        hotel62.displayRoomStatus();
        Room room64 = hotel62.findAvailableRoom();
        Room room65 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        hotel62.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) ' ');
        Hotel hotel71 = new Hotel((int) (short) 0);
        Room room72 = hotel71.findAvailableRoom();
        Hotel hotel74 = new Hotel(10);
        Room room75 = hotel74.findAvailableRoom();
        hotel71.reserveRoom(room75);
        hotel69.reserveRoom(room75);
        hotel62.reserveRoom(room75);
        hotel56.reserveRoom(room75);
        hotel52.reserveRoom(room75);
        hotel1.reserveRoom(room75);
        Room room82 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass83 = room82.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room82);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2668");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel1.reserveRoom(room11);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room16 = hotel1.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (short) 0);
        Room room19 = hotel18.findAvailableRoom();
        Hotel hotel21 = new Hotel(10);
        Room room22 = hotel21.findAvailableRoom();
        hotel18.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Room room28 = hotel25.findAvailableRoom();
        hotel18.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room28);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2669");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Room room59 = hotel56.findAvailableRoom();
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        Room room62 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel65 = new Hotel(10);
        hotel65.displayRoomStatus();
        Room room67 = hotel65.findAvailableRoom();
        Hotel hotel69 = new Hotel(0);
        Room room70 = hotel69.findAvailableRoom();
        Hotel hotel72 = new Hotel((int) ' ');
        Hotel hotel74 = new Hotel((int) (short) 0);
        Room room75 = hotel74.findAvailableRoom();
        Hotel hotel77 = new Hotel(10);
        Room room78 = hotel77.findAvailableRoom();
        hotel74.reserveRoom(room78);
        hotel72.reserveRoom(room78);
        Room room81 = hotel72.findAvailableRoom();
        hotel69.reserveRoom(room81);
        hotel65.reserveRoom(room81);
        Room room84 = hotel65.findAvailableRoom();
        Room room85 = hotel65.findAvailableRoom();
        hotel1.reserveRoom(room85);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room85);
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2670");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        Room room13 = hotel1.findAvailableRoom();
        Room room14 = hotel1.findAvailableRoom();
        Room room15 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room15);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2671");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (short) 1);
        hotel11.displayRoomStatus();
        Hotel hotel14 = new Hotel(10);
        Room room15 = hotel14.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        hotel26.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel26.reserveRoom(room44);
        hotel17.reserveRoom(room44);
        Hotel hotel49 = new Hotel((int) (short) 0);
        hotel49.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        hotel52.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel70.reserveRoom(room79);
        hotel61.reserveRoom(room79);
        hotel52.reserveRoom(room79);
        hotel49.reserveRoom(room79);
        hotel17.reserveRoom(room79);
        hotel14.reserveRoom(room79);
        hotel11.reserveRoom(room79);
        hotel1.reserveRoom(room79);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass89 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2672");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) 'a');
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room25);
        hotel1.displayRoomStatus();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel31.reserveRoom(room40);
        hotel1.reserveRoom(room40);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass46 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2673");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel22 = new Hotel(1);
        hotel22.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        hotel25.displayRoomStatus();
        Room room27 = hotel25.findAvailableRoom();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel25.reserveRoom(room47);
        hotel25.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel53.reserveRoom(room62);
        hotel25.reserveRoom(room62);
        Hotel hotel66 = new Hotel(0);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Room room71 = hotel68.findAvailableRoom();
        hotel66.reserveRoom(room71);
        hotel25.reserveRoom(room71);
        hotel22.reserveRoom(room71);
        hotel1.reserveRoom(room71);
        Hotel hotel77 = new Hotel((int) 'a');
        Room room78 = hotel77.findAvailableRoom();
        hotel1.reserveRoom(room78);
        Hotel hotel81 = new Hotel((int) 'a');
        hotel81.displayRoomStatus();
        Hotel hotel84 = new Hotel((int) (byte) -1);
        Room room85 = hotel84.findAvailableRoom();
        hotel84.displayRoomStatus();
        Hotel hotel88 = new Hotel((int) (byte) 1);
        Room room89 = hotel88.findAvailableRoom();
        hotel84.reserveRoom(room89);
        hotel81.reserveRoom(room89);
        hotel81.displayRoomStatus();
        hotel81.displayRoomStatus();
        Room room94 = hotel81.findAvailableRoom();
        hotel1.reserveRoom(room94);
        Room room96 = hotel1.findAvailableRoom();
        Room room97 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNull(room85);
        org.junit.Assert.assertNotNull(room89);
        org.junit.Assert.assertNotNull(room94);
        org.junit.Assert.assertNull(room96);
        org.junit.Assert.assertNull(room97);
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2674");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel1.reserveRoom(room11);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room16 = hotel1.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        hotel22.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel31.reserveRoom(room40);
        hotel22.reserveRoom(room40);
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel22.reserveRoom(room53);
        hotel18.reserveRoom(room53);
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        hotel18.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Room room69 = hotel66.findAvailableRoom();
        hotel63.reserveRoom(room69);
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Room room75 = hotel72.findAvailableRoom();
        Room room76 = hotel72.findAvailableRoom();
        Hotel hotel78 = new Hotel((int) (byte) 1);
        Room room79 = hotel78.findAvailableRoom();
        hotel72.reserveRoom(room79);
        hotel63.reserveRoom(room79);
        hotel18.reserveRoom(room79);
        hotel1.reserveRoom(room79);
        java.lang.Class<?> wildcardClass84 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2675");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        Hotel hotel18 = new Hotel(10);
        Room room19 = hotel18.findAvailableRoom();
        Room room20 = hotel18.findAvailableRoom();
        Hotel hotel22 = new Hotel((int) (short) 0);
        Room room23 = hotel22.findAvailableRoom();
        Room room24 = hotel22.findAvailableRoom();
        Room room25 = hotel22.findAvailableRoom();
        Room room26 = hotel22.findAvailableRoom();
        Hotel hotel28 = new Hotel(0);
        hotel28.displayRoomStatus();
        Room room30 = hotel28.findAvailableRoom();
        Room room31 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        hotel28.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) ' ');
        Hotel hotel37 = new Hotel((int) (short) 0);
        Room room38 = hotel37.findAvailableRoom();
        Hotel hotel40 = new Hotel(10);
        Room room41 = hotel40.findAvailableRoom();
        hotel37.reserveRoom(room41);
        hotel35.reserveRoom(room41);
        hotel28.reserveRoom(room41);
        hotel22.reserveRoom(room41);
        hotel18.reserveRoom(room41);
        Room room47 = hotel18.findAvailableRoom();
        hotel1.reserveRoom(room47);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room47);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2676");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel(0);
        hotel5.displayRoomStatus();
        Room room7 = hotel5.findAvailableRoom();
        Room room8 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        hotel5.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Room room15 = hotel12.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        hotel17.displayRoomStatus();
        Room room19 = hotel17.findAvailableRoom();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        hotel21.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel21.reserveRoom(room39);
        hotel17.reserveRoom(room39);
        hotel17.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        hotel45.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel54.reserveRoom(room63);
        hotel45.reserveRoom(room63);
        hotel17.reserveRoom(room63);
        hotel12.reserveRoom(room63);
        hotel5.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        Room room70 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room70);
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2677");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        Room room39 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room42);
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2678");
        Hotel hotel1 = new Hotel((int) '4');
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel3.reserveRoom(room8);
        hotel3.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        Room room13 = hotel12.findAvailableRoom();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel12.reserveRoom(room17);
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel12.reserveRoom(room21);
        hotel3.reserveRoom(room21);
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        hotel25.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        hotel34.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel43.reserveRoom(room52);
        hotel34.reserveRoom(room52);
        hotel25.reserveRoom(room52);
        hotel3.reserveRoom(room52);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Room room61 = hotel58.findAvailableRoom();
        hotel3.reserveRoom(room61);
        hotel1.reserveRoom(room61);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2679");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Room room20 = hotel17.findAvailableRoom();
        Room room21 = hotel17.findAvailableRoom();
        Hotel hotel23 = new Hotel(0);
        hotel23.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel23.reserveRoom(room27);
        Room room29 = hotel23.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel35.reserveRoom(room66);
        hotel31.reserveRoom(room66);
        hotel23.reserveRoom(room66);
        hotel17.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        Hotel hotel74 = new Hotel((int) (short) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        Room room77 = hotel74.findAvailableRoom();
        hotel1.reserveRoom(room77);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNotNull(room77);
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2680");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room29 = hotel1.findAvailableRoom();
        Room room30 = hotel1.findAvailableRoom();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room33);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2681");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) ' ');
        Hotel hotel7 = new Hotel((int) 'a');
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        hotel5.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room9);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2682");
        Hotel hotel1 = new Hotel((int) '4');
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        Room room43 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room43);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2683");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel4.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel13.reserveRoom(room22);
        hotel4.reserveRoom(room22);
        Hotel hotel26 = new Hotel((int) 'a');
        hotel26.displayRoomStatus();
        Room room28 = hotel26.findAvailableRoom();
        hotel4.reserveRoom(room28);
        Room room30 = hotel4.findAvailableRoom();
        Hotel hotel32 = new Hotel((int) 'a');
        hotel32.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel32.reserveRoom(room40);
        Room room43 = hotel32.findAvailableRoom();
        Room room44 = hotel32.findAvailableRoom();
        hotel4.reserveRoom(room44);
        hotel4.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) 'a');
        hotel48.displayRoomStatus();
        Room room50 = hotel48.findAvailableRoom();
        hotel4.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        Room room53 = hotel1.findAvailableRoom();
        Room room54 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room53);
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2684");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel1.reserveRoom(room47);
        hotel1.displayRoomStatus();
        Room room52 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2685");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room11 = hotel8.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel13.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel13.reserveRoom(room59);
        hotel8.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        Room room66 = hotel1.findAvailableRoom();
        Room room67 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room69 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass71 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2686");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel4.reserveRoom(room58);
        hotel1.reserveRoom(room58);
        java.lang.Class<?> wildcardClass64 = room58.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2687");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        hotel7.displayRoomStatus();
        Room room9 = hotel7.findAvailableRoom();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel(1);
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        hotel25.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room43);
        hotel25.reserveRoom(room43);
        hotel16.reserveRoom(room43);
        hotel12.reserveRoom(room43);
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Room room50 = hotel12.findAvailableRoom();
        hotel7.reserveRoom(room50);
        Room room52 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room54 = hotel7.findAvailableRoom();
        Room room55 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room55);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room55);
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2688");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room28 = hotel1.findAvailableRoom();
        Room room29 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (short) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel(0);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Room room41 = hotel38.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel32.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room41);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2689");
        Hotel hotel1 = new Hotel((-1));
        Hotel hotel3 = new Hotel(1);
        hotel3.displayRoomStatus();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel6.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room43);
        hotel6.reserveRoom(room43);
        Hotel hotel47 = new Hotel(0);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Room room52 = hotel49.findAvailableRoom();
        hotel47.reserveRoom(room52);
        hotel6.reserveRoom(room52);
        hotel3.reserveRoom(room52);
        hotel1.reserveRoom(room52);
        java.lang.Class<?> wildcardClass57 = room52.getClass();
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2690");
        Hotel hotel1 = new Hotel((int) (short) 1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(0);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel11 = new Hotel(0);
        hotel11.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel11.reserveRoom(room15);
        hotel6.reserveRoom(room15);
        Hotel hotel19 = new Hotel((int) (short) 0);
        Room room20 = hotel19.findAvailableRoom();
        Hotel hotel22 = new Hotel(10);
        Room room23 = hotel22.findAvailableRoom();
        hotel19.reserveRoom(room23);
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Room room29 = hotel26.findAvailableRoom();
        hotel19.reserveRoom(room29);
        hotel6.reserveRoom(room29);
        Hotel hotel33 = new Hotel((int) (short) -1);
        hotel33.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) 'a');
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        Room room49 = hotel38.findAvailableRoom();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel38.reserveRoom(room60);
        hotel36.reserveRoom(room60);
        hotel33.reserveRoom(room60);
        hotel6.reserveRoom(room60);
        hotel1.reserveRoom(room60);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2691");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel11.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        hotel11.reserveRoom(room29);
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel33.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel33.reserveRoom(room60);
        hotel11.reserveRoom(room60);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Room room69 = hotel66.findAvailableRoom();
        hotel11.reserveRoom(room69);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        hotel11.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        hotel1.displayRoomStatus();
        Room room85 = hotel1.findAvailableRoom();
        Room room86 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room85);
        org.junit.Assert.assertNull(room86);
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2692");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel8.reserveRoom(room39);
        Room room42 = hotel8.findAvailableRoom();
        Room room43 = hotel8.findAvailableRoom();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Room room48 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Room room50 = hotel45.findAvailableRoom();
        hotel8.reserveRoom(room50);
        hotel8.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        hotel54.displayRoomStatus();
        Room room56 = hotel54.findAvailableRoom();
        Hotel hotel58 = new Hotel((int) (byte) 0);
        Hotel hotel60 = new Hotel(0);
        hotel60.displayRoomStatus();
        Room room62 = hotel60.findAvailableRoom();
        Room room63 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        hotel60.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) ' ');
        Hotel hotel69 = new Hotel((int) (short) 0);
        Room room70 = hotel69.findAvailableRoom();
        Hotel hotel72 = new Hotel(10);
        Room room73 = hotel72.findAvailableRoom();
        hotel69.reserveRoom(room73);
        hotel67.reserveRoom(room73);
        hotel60.reserveRoom(room73);
        hotel58.reserveRoom(room73);
        hotel54.reserveRoom(room73);
        hotel8.reserveRoom(room73);
        hotel1.reserveRoom(room73);
        hotel1.displayRoomStatus();
        Room room82 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room73);
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2693");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room11);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2694");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) 'a');
        hotel11.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel11.reserveRoom(room19);
        Room room22 = hotel11.findAvailableRoom();
        Room room23 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Room room30 = hotel27.findAvailableRoom();
        hotel1.reserveRoom(room30);
        hotel1.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (short) 10);
        Room room35 = hotel34.findAvailableRoom();
        Room room36 = hotel34.findAvailableRoom();
        Hotel hotel38 = new Hotel(0);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        Hotel hotel43 = new Hotel(0);
        hotel43.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel43.reserveRoom(room47);
        hotel38.reserveRoom(room47);
        Hotel hotel51 = new Hotel((int) (short) 0);
        Room room52 = hotel51.findAvailableRoom();
        Hotel hotel54 = new Hotel(10);
        Room room55 = hotel54.findAvailableRoom();
        hotel51.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Room room61 = hotel58.findAvailableRoom();
        hotel51.reserveRoom(room61);
        hotel38.reserveRoom(room61);
        hotel34.reserveRoom(room61);
        hotel34.displayRoomStatus();
        Room room66 = hotel34.findAvailableRoom();
        hotel1.reserveRoom(room66);
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room66);
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2695");
        Hotel hotel1 = new Hotel((int) 'a');
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(10);
        Room room6 = hotel5.findAvailableRoom();
        Room room7 = hotel5.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel9.reserveRoom(room14);
        hotel9.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel18.reserveRoom(room36);
        hotel9.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        Room room41 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Room room43 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room43);
        Room room45 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room43);
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2696");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel15.reserveRoom(room46);
        hotel11.reserveRoom(room46);
        hotel8.reserveRoom(room46);
        hotel8.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) ' ');
        Hotel hotel55 = new Hotel((int) 'a');
        hotel55.displayRoomStatus();
        Room room57 = hotel55.findAvailableRoom();
        hotel53.reserveRoom(room57);
        hotel8.reserveRoom(room57);
        Hotel hotel61 = new Hotel(10);
        Room room62 = hotel61.findAvailableRoom();
        Room room63 = hotel61.findAvailableRoom();
        hotel8.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        Room room66 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room63);
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2697");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) ' ');
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Room room13 = hotel10.findAvailableRoom();
        Hotel hotel15 = new Hotel(1);
        hotel15.displayRoomStatus();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        hotel19.reserveRoom(room46);
        hotel15.reserveRoom(room46);
        hotel15.displayRoomStatus();
        hotel15.displayRoomStatus();
        Room room53 = hotel15.findAvailableRoom();
        hotel10.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        Room room56 = hotel1.findAvailableRoom();
        Room room57 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room57);
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2698");
        Hotel hotel1 = new Hotel((int) (byte) 0);
        Hotel hotel3 = new Hotel(0);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Room room6 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        hotel3.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) ' ');
        Hotel hotel12 = new Hotel((int) (short) 0);
        Room room13 = hotel12.findAvailableRoom();
        Hotel hotel15 = new Hotel(10);
        Room room16 = hotel15.findAvailableRoom();
        hotel12.reserveRoom(room16);
        hotel10.reserveRoom(room16);
        hotel3.reserveRoom(room16);
        hotel1.reserveRoom(room16);
        Room room21 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room21);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2699");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2700");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room13 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room13);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2701");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel(0);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel15 = new Hotel(0);
        hotel15.displayRoomStatus();
        Room room17 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        hotel15.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) -1);
        Room room22 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel21.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel21.reserveRoom(room30);
        hotel15.reserveRoom(room30);
        hotel10.reserveRoom(room30);
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        hotel44.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel53.reserveRoom(room62);
        hotel44.reserveRoom(room62);
        hotel35.reserveRoom(room62);
        hotel10.reserveRoom(room62);
        hotel1.reserveRoom(room62);
        Room room68 = hotel1.findAvailableRoom();
        Room room69 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room69);
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2702");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room30 = hotel1.findAvailableRoom();
        Hotel hotel32 = new Hotel((int) 'a');
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room43);
        Room room45 = hotel34.findAvailableRoom();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel34.reserveRoom(room56);
        hotel32.reserveRoom(room56);
        hotel1.reserveRoom(room56);
        hotel1.displayRoomStatus();
        Room room62 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room62);
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2703");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel55 = new Hotel(100);
        hotel55.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (short) -1);
        hotel58.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        hotel61.displayRoomStatus();
        hotel61.displayRoomStatus();
        Room room66 = hotel61.findAvailableRoom();
        Hotel hotel68 = new Hotel(10);
        Room room69 = hotel68.findAvailableRoom();
        hotel61.reserveRoom(room69);
        hotel58.reserveRoom(room69);
        hotel55.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        java.lang.Class<?> wildcardClass74 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2704");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room10 = hotel1.findAvailableRoom();
        Room room11 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass12 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2705");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        Room room56 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room58 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room60 = hotel1.findAvailableRoom();
        Room room61 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room61);
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2706");
        Hotel hotel1 = new Hotel((int) '4');
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        Room room43 = hotel1.findAvailableRoom();
        Hotel hotel45 = new Hotel(1);
        hotel45.displayRoomStatus();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        hotel49.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel67.reserveRoom(room76);
        hotel58.reserveRoom(room76);
        hotel49.reserveRoom(room76);
        hotel45.reserveRoom(room76);
        hotel45.displayRoomStatus();
        hotel45.displayRoomStatus();
        Room room83 = hotel45.findAvailableRoom();
        hotel1.reserveRoom(room83);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room83);
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2707");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room37 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass38 = room37.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2708");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2709");
        Hotel hotel1 = new Hotel((int) (byte) 10);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) ' ');
        Hotel hotel8 = new Hotel((int) (short) 0);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel(10);
        Room room12 = hotel11.findAvailableRoom();
        hotel8.reserveRoom(room12);
        hotel6.reserveRoom(room12);
        hotel1.reserveRoom(room12);
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        Room room19 = hotel17.findAvailableRoom();
        Room room20 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        hotel17.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        hotel24.displayRoomStatus();
        Room room28 = hotel24.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        hotel30.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel39.reserveRoom(room48);
        hotel30.reserveRoom(room48);
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel52.reserveRoom(room61);
        hotel30.reserveRoom(room61);
        hotel24.reserveRoom(room61);
        hotel17.reserveRoom(room61);
        hotel1.reserveRoom(room61);
        java.lang.Class<?> wildcardClass67 = room61.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2710");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Room room13 = hotel10.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        hotel15.displayRoomStatus();
        Room room17 = hotel15.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel15.reserveRoom(room37);
        hotel15.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        hotel43.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel52.reserveRoom(room61);
        hotel43.reserveRoom(room61);
        hotel15.reserveRoom(room61);
        hotel10.reserveRoom(room61);
        Room room66 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        hotel10.displayRoomStatus();
        hotel10.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Room room74 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Room room76 = hotel71.findAvailableRoom();
        Room room77 = hotel71.findAvailableRoom();
        hotel10.reserveRoom(room77);
        Room room79 = hotel10.findAvailableRoom();
        hotel1.reserveRoom(room79);
        Room room81 = hotel1.findAvailableRoom();
        Hotel hotel83 = new Hotel((int) (byte) 10);
        hotel83.displayRoomStatus();
        Room room85 = hotel83.findAvailableRoom();
        hotel1.reserveRoom(room85);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNull(room81);
        org.junit.Assert.assertNotNull(room85);
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2711");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass40 = room39.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room39);
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2712");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room14 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass16 = hotel1.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2713");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room38 = hotel1.findAvailableRoom();
        Hotel hotel40 = new Hotel(10);
        Room room41 = hotel40.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        hotel60.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel69.reserveRoom(room78);
        hotel60.reserveRoom(room78);
        hotel51.reserveRoom(room78);
        hotel43.reserveRoom(room78);
        hotel40.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        Room room85 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass86 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNull(room85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2714");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (short) 0);
        Room room18 = hotel17.findAvailableRoom();
        Room room19 = hotel17.findAvailableRoom();
        Room room20 = hotel17.findAvailableRoom();
        Room room21 = hotel17.findAvailableRoom();
        Hotel hotel23 = new Hotel(0);
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        Room room26 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        hotel23.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) ' ');
        Hotel hotel32 = new Hotel((int) (short) 0);
        Room room33 = hotel32.findAvailableRoom();
        Hotel hotel35 = new Hotel(10);
        Room room36 = hotel35.findAvailableRoom();
        hotel32.reserveRoom(room36);
        hotel30.reserveRoom(room36);
        hotel23.reserveRoom(room36);
        hotel17.reserveRoom(room36);
        hotel13.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        Room room43 = hotel1.findAvailableRoom();
        Room room44 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) '#');
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        hotel47.displayRoomStatus();
        Room room51 = hotel47.findAvailableRoom();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        hotel53.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (short) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel56.displayRoomStatus();
        Room room59 = hotel56.findAvailableRoom();
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel61.reserveRoom(room68);
        hotel56.reserveRoom(room68);
        Room room72 = hotel56.findAvailableRoom();
        hotel53.reserveRoom(room72);
        hotel47.reserveRoom(room72);
        hotel1.reserveRoom(room72);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room72);
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2715");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel9.reserveRoom(room55);
        hotel4.reserveRoom(room55);
        Room room60 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room62 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room64 = hotel4.findAvailableRoom();
        Hotel hotel66 = new Hotel(0);
        hotel66.displayRoomStatus();
        Room room68 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        hotel66.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel66.reserveRoom(room81);
        hotel4.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        Room room86 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2716");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (short) 0);
        Room room6 = hotel5.findAvailableRoom();
        Room room7 = hotel5.findAvailableRoom();
        Room room8 = hotel5.findAvailableRoom();
        Room room9 = hotel5.findAvailableRoom();
        Hotel hotel11 = new Hotel(0);
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Room room14 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) ' ');
        Hotel hotel20 = new Hotel((int) (short) 0);
        Room room21 = hotel20.findAvailableRoom();
        Hotel hotel23 = new Hotel(10);
        Room room24 = hotel23.findAvailableRoom();
        hotel20.reserveRoom(room24);
        hotel18.reserveRoom(room24);
        hotel11.reserveRoom(room24);
        hotel5.reserveRoom(room24);
        hotel1.reserveRoom(room24);
        Room room30 = hotel1.findAvailableRoom();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel1.reserveRoom(room33);
        Hotel hotel36 = new Hotel(10);
        Room room37 = hotel36.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        hotel39.displayRoomStatus();
        Room room41 = hotel39.findAvailableRoom();
        Hotel hotel43 = new Hotel((int) (byte) -1);
        Room room44 = hotel43.findAvailableRoom();
        hotel43.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel43.reserveRoom(room48);
        hotel43.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        Room room53 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel52.reserveRoom(room57);
        Hotel hotel60 = new Hotel((int) (byte) 1);
        Room room61 = hotel60.findAvailableRoom();
        hotel52.reserveRoom(room61);
        hotel43.reserveRoom(room61);
        hotel39.reserveRoom(room61);
        hotel39.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel67.reserveRoom(room76);
        hotel39.reserveRoom(room76);
        hotel36.reserveRoom(room76);
        Room room80 = hotel36.findAvailableRoom();
        Hotel hotel82 = new Hotel((int) (byte) 1);
        Room room83 = hotel82.findAvailableRoom();
        hotel36.reserveRoom(room83);
        Room room85 = hotel36.findAvailableRoom();
        hotel1.reserveRoom(room85);
        java.lang.Class<?> wildcardClass87 = room85.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room83);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2717");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        Room room51 = hotel1.findAvailableRoom();
        Room room52 = hotel1.findAvailableRoom();
        Hotel hotel54 = new Hotel((-1));
        hotel54.displayRoomStatus();
        Hotel hotel57 = new Hotel(0);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        hotel57.displayRoomStatus();
        Hotel hotel62 = new Hotel(0);
        hotel62.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel62.reserveRoom(room66);
        hotel57.reserveRoom(room66);
        hotel54.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room66);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2718");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        Room room12 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel15.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        java.lang.Class<?> wildcardClass56 = room50.getClass();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2719");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel7.reserveRoom(room16);
        hotel1.reserveRoom(room16);
        Room room19 = hotel1.findAvailableRoom();
        Room room20 = hotel1.findAvailableRoom();
        Hotel hotel22 = new Hotel(10);
        Room room23 = hotel22.findAvailableRoom();
        Room room24 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Room room26 = hotel22.findAvailableRoom();
        hotel1.reserveRoom(room26);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room26);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2720");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Hotel hotel29 = new Hotel((int) (short) 0);
        Room room30 = hotel29.findAvailableRoom();
        Room room31 = hotel29.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel33.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel42.reserveRoom(room51);
        hotel33.reserveRoom(room51);
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        hotel55.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        hotel64.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) -1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel73.reserveRoom(room78);
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel73.reserveRoom(room82);
        hotel64.reserveRoom(room82);
        hotel55.reserveRoom(room82);
        hotel33.reserveRoom(room82);
        hotel29.reserveRoom(room82);
        hotel1.reserveRoom(room82);
        Room room89 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room94 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNull(room89);
        org.junit.Assert.assertNull(room94);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2721");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room36 = hotel1.findAvailableRoom();
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room38);
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2722");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) 'a');
        hotel10.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel10.reserveRoom(room18);
        hotel10.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel27.reserveRoom(room58);
        hotel23.reserveRoom(room58);
        hotel10.reserveRoom(room58);
        hotel1.reserveRoom(room58);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2723");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel(1);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        hotel6.reserveRoom(room37);
        hotel6.displayRoomStatus();
        hotel6.displayRoomStatus();
        Room room44 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room44);
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        hotel49.displayRoomStatus();
        Room room51 = hotel49.findAvailableRoom();
        Room room52 = hotel49.findAvailableRoom();
        Hotel hotel54 = new Hotel(1);
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        hotel58.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        Room room68 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel67.reserveRoom(room72);
        hotel67.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel67.reserveRoom(room85);
        hotel58.reserveRoom(room85);
        hotel54.reserveRoom(room85);
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Room room92 = hotel54.findAvailableRoom();
        hotel49.reserveRoom(room92);
        hotel1.reserveRoom(room92);
        Room room95 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room4);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNotNull(room95);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2724");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        hotel9.displayRoomStatus();
        Room room11 = hotel9.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel9.reserveRoom(room31);
        hotel9.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel9.reserveRoom(room46);
        hotel6.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        Hotel hotel52 = new Hotel(10);
        Room room53 = hotel52.findAvailableRoom();
        Room room54 = hotel52.findAvailableRoom();
        Hotel hotel56 = new Hotel((int) (short) 0);
        Room room57 = hotel56.findAvailableRoom();
        Room room58 = hotel56.findAvailableRoom();
        Room room59 = hotel56.findAvailableRoom();
        Room room60 = hotel56.findAvailableRoom();
        Hotel hotel62 = new Hotel(0);
        hotel62.displayRoomStatus();
        Room room64 = hotel62.findAvailableRoom();
        Room room65 = hotel62.findAvailableRoom();
        hotel62.displayRoomStatus();
        hotel62.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) ' ');
        Hotel hotel71 = new Hotel((int) (short) 0);
        Room room72 = hotel71.findAvailableRoom();
        Hotel hotel74 = new Hotel(10);
        Room room75 = hotel74.findAvailableRoom();
        hotel71.reserveRoom(room75);
        hotel69.reserveRoom(room75);
        hotel62.reserveRoom(room75);
        hotel56.reserveRoom(room75);
        hotel52.reserveRoom(room75);
        hotel1.reserveRoom(room75);
        Room room82 = hotel1.findAvailableRoom();
        Hotel hotel84 = new Hotel((int) ' ');
        Room room85 = hotel84.findAvailableRoom();
        hotel1.reserveRoom(room85);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room85);
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2725");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (short) 0);
        Room room6 = hotel5.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) 'a');
        hotel8.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        hotel8.reserveRoom(room16);
        Room room19 = hotel8.findAvailableRoom();
        Room room20 = hotel8.findAvailableRoom();
        hotel5.reserveRoom(room20);
        hotel1.reserveRoom(room20);
        Room room23 = hotel1.findAvailableRoom();
        Room room24 = hotel1.findAvailableRoom();
        Room room25 = hotel1.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (short) -1);
        Room room28 = hotel27.findAvailableRoom();
        Room room29 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Room room31 = hotel27.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        hotel33.displayRoomStatus();
        Room room35 = hotel33.findAvailableRoom();
        Room room36 = hotel33.findAvailableRoom();
        Hotel hotel38 = new Hotel(1);
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        hotel38.displayRoomStatus();
        Room room46 = hotel38.findAvailableRoom();
        hotel33.reserveRoom(room46);
        hotel27.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        java.lang.Class<?> wildcardClass50 = room46.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2726");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel5.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        Room room43 = hotel1.findAvailableRoom();
        Room room44 = hotel1.findAvailableRoom();
        Room room45 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room47 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room47);
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2727");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        Room room46 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room48 = hotel1.findAvailableRoom();
        Room room49 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room49);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2728");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room32 = hotel1.findAvailableRoom();
        Room room33 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room33);
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2729");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel33 = new Hotel((int) (short) 0);
        hotel33.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        hotel36.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        hotel45.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel54.reserveRoom(room63);
        hotel45.reserveRoom(room63);
        hotel36.reserveRoom(room63);
        hotel33.reserveRoom(room63);
        hotel1.reserveRoom(room63);
        Hotel hotel70 = new Hotel((int) ' ');
        Hotel hotel72 = new Hotel((int) (short) 0);
        Room room73 = hotel72.findAvailableRoom();
        Hotel hotel75 = new Hotel(10);
        Room room76 = hotel75.findAvailableRoom();
        hotel72.reserveRoom(room76);
        hotel70.reserveRoom(room76);
        hotel1.reserveRoom(room76);
        hotel1.displayRoomStatus();
        Room room81 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNull(room81);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2730");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room25 = hotel1.findAvailableRoom();
        Room room26 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room26);
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2731");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(0);
        Room room6 = hotel5.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) ' ');
        Hotel hotel10 = new Hotel((int) (short) 0);
        Room room11 = hotel10.findAvailableRoom();
        Hotel hotel13 = new Hotel(10);
        Room room14 = hotel13.findAvailableRoom();
        hotel10.reserveRoom(room14);
        hotel8.reserveRoom(room14);
        Room room17 = hotel8.findAvailableRoom();
        hotel5.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        hotel1.displayRoomStatus();
        Room room21 = hotel1.findAvailableRoom();
        Room room22 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass23 = room22.getClass();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2732");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel60 = new Hotel(10);
        Room room61 = hotel60.findAvailableRoom();
        Room room62 = hotel60.findAvailableRoom();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        hotel64.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) -1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel73.reserveRoom(room78);
        hotel73.displayRoomStatus();
        Hotel hotel82 = new Hotel((int) (byte) -1);
        Room room83 = hotel82.findAvailableRoom();
        hotel82.displayRoomStatus();
        Hotel hotel86 = new Hotel((int) (byte) 1);
        Room room87 = hotel86.findAvailableRoom();
        hotel82.reserveRoom(room87);
        Hotel hotel90 = new Hotel((int) (byte) 1);
        Room room91 = hotel90.findAvailableRoom();
        hotel82.reserveRoom(room91);
        hotel73.reserveRoom(room91);
        hotel64.reserveRoom(room91);
        hotel60.reserveRoom(room91);
        hotel1.reserveRoom(room91);
        Room room97 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass98 = room97.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room91);
        org.junit.Assert.assertNull(room97);
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2733");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel9.reserveRoom(room14);
        hotel9.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel18.reserveRoom(room36);
        hotel9.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        Hotel hotel42 = new Hotel(1);
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        hotel46.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) -1);
        Room room56 = hotel55.findAvailableRoom();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel55.reserveRoom(room60);
        hotel55.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel64.reserveRoom(room73);
        hotel55.reserveRoom(room73);
        hotel46.reserveRoom(room73);
        hotel42.reserveRoom(room73);
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        hotel42.displayRoomStatus();
        Room room82 = hotel42.findAvailableRoom();
        hotel1.reserveRoom(room82);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass85 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2734");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        hotel35.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel35.reserveRoom(room53);
        hotel31.reserveRoom(room53);
        Hotel hotel58 = new Hotel((int) (byte) -1);
        Room room59 = hotel58.findAvailableRoom();
        hotel58.displayRoomStatus();
        Hotel hotel62 = new Hotel((int) (byte) 1);
        Room room63 = hotel62.findAvailableRoom();
        hotel58.reserveRoom(room63);
        Hotel hotel66 = new Hotel((int) (byte) 1);
        Room room67 = hotel66.findAvailableRoom();
        hotel58.reserveRoom(room67);
        Room room69 = hotel58.findAvailableRoom();
        Hotel hotel71 = new Hotel((int) (byte) -1);
        Room room72 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) 1);
        Room room76 = hotel75.findAvailableRoom();
        hotel71.reserveRoom(room76);
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel71.reserveRoom(room80);
        hotel58.reserveRoom(room80);
        hotel31.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room59);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNull(room72);
        org.junit.Assert.assertNotNull(room76);
        org.junit.Assert.assertNotNull(room80);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2735");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel8.reserveRoom(room35);
        hotel4.reserveRoom(room35);
        hotel1.reserveRoom(room35);
        java.lang.Class<?> wildcardClass41 = room35.getClass();
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2736");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room23 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room23);
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2737");
        Hotel hotel1 = new Hotel((int) (byte) 10);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel(1);
        hotel5.displayRoomStatus();
        Hotel hotel8 = new Hotel(10);
        Room room9 = hotel8.findAvailableRoom();
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) 1);
        Room room16 = hotel15.findAvailableRoom();
        hotel11.reserveRoom(room16);
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        hotel19.reserveRoom(room46);
        hotel11.reserveRoom(room46);
        hotel8.reserveRoom(room46);
        hotel5.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass56 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2738");
        Hotel hotel1 = new Hotel((int) (short) 0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel4.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        hotel4.reserveRoom(room31);
        hotel1.reserveRoom(room31);
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Room room38 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room38);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2739");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        Room room13 = hotel1.findAvailableRoom();
        Hotel hotel15 = new Hotel(10);
        Room room16 = hotel15.findAvailableRoom();
        Room room17 = hotel15.findAvailableRoom();
        hotel1.reserveRoom(room17);
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel20.reserveRoom(room38);
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel42.reserveRoom(room51);
        hotel20.reserveRoom(room51);
        hotel20.displayRoomStatus();
        Room room55 = hotel20.findAvailableRoom();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        hotel57.displayRoomStatus();
        hotel57.displayRoomStatus();
        hotel57.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (short) 0);
        Room room65 = hotel64.findAvailableRoom();
        Room room66 = hotel64.findAvailableRoom();
        Hotel hotel68 = new Hotel((int) (byte) -1);
        hotel68.displayRoomStatus();
        Room room70 = hotel68.findAvailableRoom();
        Hotel hotel72 = new Hotel((int) (byte) 0);
        Hotel hotel74 = new Hotel(0);
        hotel74.displayRoomStatus();
        Room room76 = hotel74.findAvailableRoom();
        Room room77 = hotel74.findAvailableRoom();
        hotel74.displayRoomStatus();
        hotel74.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) ' ');
        Hotel hotel83 = new Hotel((int) (short) 0);
        Room room84 = hotel83.findAvailableRoom();
        Hotel hotel86 = new Hotel(10);
        Room room87 = hotel86.findAvailableRoom();
        hotel83.reserveRoom(room87);
        hotel81.reserveRoom(room87);
        hotel74.reserveRoom(room87);
        hotel72.reserveRoom(room87);
        hotel68.reserveRoom(room87);
        hotel64.reserveRoom(room87);
        hotel57.reserveRoom(room87);
        hotel20.reserveRoom(room87);
        hotel1.reserveRoom(room87);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNotNull(room87);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2740");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room9);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2741");
        Hotel hotel1 = new Hotel((int) (short) 1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel7.reserveRoom(room34);
        Hotel hotel39 = new Hotel((int) (short) 0);
        hotel39.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel42.reserveRoom(room69);
        hotel39.reserveRoom(room69);
        hotel7.reserveRoom(room69);
        hotel4.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        hotel1.displayRoomStatus();
        Room room78 = hotel1.findAvailableRoom();
        Room room79 = hotel1.findAvailableRoom();
        Room room80 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room79);
        org.junit.Assert.assertNotNull(room80);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2742");
        Hotel hotel1 = new Hotel(10);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        hotel4.displayRoomStatus();
        Room room6 = hotel4.findAvailableRoom();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        hotel4.reserveRoom(room26);
        hotel4.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel32.reserveRoom(room41);
        hotel4.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        Room room45 = hotel1.findAvailableRoom();
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel1.reserveRoom(room48);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room48);
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2743");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        hotel70.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) -1);
        Room room80 = hotel79.findAvailableRoom();
        hotel79.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel79.reserveRoom(room84);
        Hotel hotel87 = new Hotel((int) (byte) 1);
        Room room88 = hotel87.findAvailableRoom();
        hotel79.reserveRoom(room88);
        hotel70.reserveRoom(room88);
        hotel61.reserveRoom(room88);
        hotel39.reserveRoom(room88);
        hotel1.reserveRoom(room88);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass96 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2744");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Hotel hotel27 = new Hotel(10);
        Room room28 = hotel27.findAvailableRoom();
        hotel24.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        Room room32 = hotel1.findAvailableRoom();
        Room room33 = hotel1.findAvailableRoom();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2745");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        Hotel hotel12 = new Hotel(1);
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        hotel25.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room43);
        hotel25.reserveRoom(room43);
        hotel16.reserveRoom(room43);
        hotel12.reserveRoom(room43);
        hotel12.displayRoomStatus();
        hotel12.displayRoomStatus();
        Room room50 = hotel12.findAvailableRoom();
        Hotel hotel52 = new Hotel(0);
        hotel52.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel52.reserveRoom(room56);
        hotel52.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) 'a');
        hotel60.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel60.reserveRoom(room68);
        hotel52.reserveRoom(room68);
        hotel12.reserveRoom(room68);
        Room room73 = hotel12.findAvailableRoom();
        hotel1.reserveRoom(room73);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room73);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2746");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room28 = hotel1.findAvailableRoom();
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        hotel30.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        Hotel hotel47 = new Hotel((int) (byte) 1);
        Room room48 = hotel47.findAvailableRoom();
        hotel39.reserveRoom(room48);
        hotel30.reserveRoom(room48);
        Hotel hotel52 = new Hotel((int) 'a');
        hotel52.displayRoomStatus();
        Room room54 = hotel52.findAvailableRoom();
        hotel30.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (short) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel(0);
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Room room66 = hotel63.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel57.reserveRoom(room66);
        hotel30.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room48);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room66);
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2747");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((-1));
        Hotel hotel10 = new Hotel((int) (byte) -1);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel10.reserveRoom(room32);
        hotel8.reserveRoom(room32);
        Room room37 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) ' ');
        Room room41 = hotel40.findAvailableRoom();
        hotel8.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        Room room44 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass45 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2748");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel(10);
        hotel9.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) 'a');
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        hotel25.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room43);
        hotel25.reserveRoom(room43);
        hotel16.reserveRoom(room43);
        hotel12.reserveRoom(room43);
        hotel9.reserveRoom(room43);
        hotel1.reserveRoom(room43);
        Room room50 = hotel1.findAvailableRoom();
        Hotel hotel52 = new Hotel((int) (byte) -1);
        hotel52.displayRoomStatus();
        Room room54 = hotel52.findAvailableRoom();
        Room room55 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        hotel52.displayRoomStatus();
        Hotel hotel59 = new Hotel((-1));
        Hotel hotel61 = new Hotel(0);
        hotel61.displayRoomStatus();
        Room room63 = hotel61.findAvailableRoom();
        Room room64 = hotel61.findAvailableRoom();
        Room room65 = hotel61.findAvailableRoom();
        Hotel hotel67 = new Hotel((int) (byte) -1);
        hotel67.displayRoomStatus();
        Room room69 = hotel67.findAvailableRoom();
        Room room70 = hotel67.findAvailableRoom();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        hotel67.reserveRoom(room77);
        hotel61.reserveRoom(room77);
        hotel59.reserveRoom(room77);
        hotel52.reserveRoom(room77);
        hotel1.reserveRoom(room77);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2749");
        Hotel hotel1 = new Hotel((-1));
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(0);
        Room room5 = hotel4.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) ' ');
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel7.reserveRoom(room13);
        Room room16 = hotel7.findAvailableRoom();
        hotel4.reserveRoom(room16);
        Hotel hotel19 = new Hotel((int) 'a');
        hotel19.displayRoomStatus();
        Room room21 = hotel19.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        hotel23.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel41.reserveRoom(room50);
        hotel32.reserveRoom(room50);
        hotel23.reserveRoom(room50);
        hotel19.reserveRoom(room50);
        hotel4.reserveRoom(room50);
        hotel1.reserveRoom(room50);
        Room room57 = hotel1.findAvailableRoom();
        Room room58 = hotel1.findAvailableRoom();
        Room room59 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room59);
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2750");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel14 = new Hotel(1);
        hotel14.displayRoomStatus();
        hotel14.displayRoomStatus();
        hotel14.displayRoomStatus();
        hotel14.displayRoomStatus();
        Hotel hotel20 = new Hotel(10);
        Room room21 = hotel20.findAvailableRoom();
        Room room22 = hotel20.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Room room26 = hotel24.findAvailableRoom();
        Room room27 = hotel24.findAvailableRoom();
        Room room28 = hotel24.findAvailableRoom();
        Hotel hotel30 = new Hotel(0);
        hotel30.displayRoomStatus();
        Room room32 = hotel30.findAvailableRoom();
        Room room33 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        hotel30.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) ' ');
        Hotel hotel39 = new Hotel((int) (short) 0);
        Room room40 = hotel39.findAvailableRoom();
        Hotel hotel42 = new Hotel(10);
        Room room43 = hotel42.findAvailableRoom();
        hotel39.reserveRoom(room43);
        hotel37.reserveRoom(room43);
        hotel30.reserveRoom(room43);
        hotel24.reserveRoom(room43);
        hotel20.reserveRoom(room43);
        hotel14.reserveRoom(room43);
        hotel1.reserveRoom(room43);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass52 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2751");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        Room room63 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room67 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room69 = hotel1.findAvailableRoom();
        Room room70 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNull(room70);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2752");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room11 = hotel8.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel13.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel13.reserveRoom(room59);
        hotel8.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        Room room66 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass67 = hotel1.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2753");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        Room room50 = hotel1.findAvailableRoom();
        Hotel hotel52 = new Hotel((int) (short) 1);
        Hotel hotel54 = new Hotel((int) (short) 0);
        Room room55 = hotel54.findAvailableRoom();
        Hotel hotel57 = new Hotel(10);
        Room room58 = hotel57.findAvailableRoom();
        hotel54.reserveRoom(room58);
        hotel52.reserveRoom(room58);
        Room room61 = hotel52.findAvailableRoom();
        hotel1.reserveRoom(room61);
        Hotel hotel64 = new Hotel(0);
        hotel64.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel64.reserveRoom(room68);
        hotel1.reserveRoom(room68);
        hotel1.displayRoomStatus();
        Room room72 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room72);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2754");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        Hotel hotel35 = new Hotel(10);
        Room room36 = hotel35.findAvailableRoom();
        Room room37 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Room room39 = hotel35.findAvailableRoom();
        Hotel hotel41 = new Hotel((int) (short) 10);
        Room room42 = hotel41.findAvailableRoom();
        Room room43 = hotel41.findAvailableRoom();
        hotel35.reserveRoom(room43);
        hotel1.reserveRoom(room43);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room43);
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2755");
        Hotel hotel1 = new Hotel((int) (short) 10);
        Hotel hotel3 = new Hotel(0);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Room room6 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        hotel3.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) ' ');
        Hotel hotel12 = new Hotel((int) (short) 0);
        Room room13 = hotel12.findAvailableRoom();
        Hotel hotel15 = new Hotel(10);
        Room room16 = hotel15.findAvailableRoom();
        hotel12.reserveRoom(room16);
        hotel10.reserveRoom(room16);
        hotel3.reserveRoom(room16);
        hotel3.displayRoomStatus();
        Hotel hotel22 = new Hotel((-1));
        Hotel hotel24 = new Hotel((int) (byte) -1);
        hotel24.displayRoomStatus();
        Room room26 = hotel24.findAvailableRoom();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel28.reserveRoom(room46);
        hotel24.reserveRoom(room46);
        hotel22.reserveRoom(room46);
        Hotel hotel52 = new Hotel(0);
        hotel52.displayRoomStatus();
        Room room54 = hotel52.findAvailableRoom();
        Room room55 = hotel52.findAvailableRoom();
        hotel52.displayRoomStatus();
        hotel52.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) ' ');
        Hotel hotel61 = new Hotel((int) (short) 0);
        Room room62 = hotel61.findAvailableRoom();
        Hotel hotel64 = new Hotel(10);
        Room room65 = hotel64.findAvailableRoom();
        hotel61.reserveRoom(room65);
        hotel59.reserveRoom(room65);
        hotel52.reserveRoom(room65);
        hotel22.reserveRoom(room65);
        hotel3.reserveRoom(room65);
        hotel1.reserveRoom(room65);
        Hotel hotel73 = new Hotel((int) 'a');
        hotel73.displayRoomStatus();
        Room room75 = hotel73.findAvailableRoom();
        Hotel hotel77 = new Hotel((int) (short) 0);
        Room room78 = hotel77.findAvailableRoom();
        Hotel hotel80 = new Hotel((int) 'a');
        hotel80.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) -1);
        Room room84 = hotel83.findAvailableRoom();
        hotel83.displayRoomStatus();
        Hotel hotel87 = new Hotel((int) (byte) 1);
        Room room88 = hotel87.findAvailableRoom();
        hotel83.reserveRoom(room88);
        hotel80.reserveRoom(room88);
        Room room91 = hotel80.findAvailableRoom();
        Room room92 = hotel80.findAvailableRoom();
        hotel77.reserveRoom(room92);
        hotel73.reserveRoom(room92);
        Room room95 = hotel73.findAvailableRoom();
        hotel1.reserveRoom(room95);
        Room room97 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNull(room84);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(room91);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNotNull(room95);
        org.junit.Assert.assertNotNull(room97);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2756");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        Room room6 = hotel1.findAvailableRoom();
        Room room7 = hotel1.findAvailableRoom();
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room10 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room10);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2757");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Hotel hotel27 = new Hotel(10);
        Room room28 = hotel27.findAvailableRoom();
        hotel24.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Room room31 = hotel1.findAvailableRoom();
        Room room32 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room36 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNull(room36);
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2758");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Room room3 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2759");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel(10);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room11 = hotel8.findAvailableRoom();
        hotel1.reserveRoom(room11);
        Room room13 = hotel1.findAvailableRoom();
        Room room14 = hotel1.findAvailableRoom();
        java.lang.Class<?> wildcardClass15 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room13);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2760");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Room room8 = hotel5.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel10.reserveRoom(room32);
        hotel10.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        hotel10.reserveRoom(room56);
        hotel5.reserveRoom(room56);
        Room room61 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Room room63 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Room room65 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room65);
        Room room67 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room67);
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2761");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room42);
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2762");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        Room room11 = hotel1.findAvailableRoom();
        Hotel hotel13 = new Hotel(0);
        hotel13.displayRoomStatus();
        hotel13.displayRoomStatus();
        hotel13.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        hotel18.displayRoomStatus();
        Room room20 = hotel18.findAvailableRoom();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        hotel22.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel31.reserveRoom(room40);
        hotel22.reserveRoom(room40);
        hotel18.reserveRoom(room40);
        Room room44 = hotel18.findAvailableRoom();
        Room room45 = hotel18.findAvailableRoom();
        Room room46 = hotel18.findAvailableRoom();
        Hotel hotel48 = new Hotel((int) (short) 0);
        hotel48.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        hotel60.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) (byte) -1);
        Room room70 = hotel69.findAvailableRoom();
        hotel69.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) 1);
        Room room74 = hotel73.findAvailableRoom();
        hotel69.reserveRoom(room74);
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel69.reserveRoom(room78);
        hotel60.reserveRoom(room78);
        hotel51.reserveRoom(room78);
        hotel48.reserveRoom(room78);
        hotel18.reserveRoom(room78);
        hotel13.reserveRoom(room78);
        hotel1.reserveRoom(room78);
        Room room86 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room44);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNotNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNotNull(room86);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2763");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) ' ');
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel4.reserveRoom(room10);
        Room room13 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room13);
        Hotel hotel16 = new Hotel((int) 'a');
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel20.reserveRoom(room47);
        hotel16.reserveRoom(room47);
        hotel1.reserveRoom(room47);
        hotel1.displayRoomStatus();
        Hotel hotel55 = new Hotel(1);
        hotel55.displayRoomStatus();
        hotel55.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        hotel59.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) -1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel68.reserveRoom(room73);
        hotel68.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) -1);
        Room room78 = hotel77.findAvailableRoom();
        hotel77.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel77.reserveRoom(room82);
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel77.reserveRoom(room86);
        hotel68.reserveRoom(room86);
        hotel59.reserveRoom(room86);
        hotel55.reserveRoom(room86);
        hotel1.reserveRoom(room86);
        hotel1.displayRoomStatus();
        Room room93 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room86);
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2764");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel16 = new Hotel(10);
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel(0);
        hotel20.displayRoomStatus();
        Room room22 = hotel20.findAvailableRoom();
        Room room23 = hotel20.findAvailableRoom();
        Room room24 = hotel20.findAvailableRoom();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        hotel26.displayRoomStatus();
        Room room28 = hotel26.findAvailableRoom();
        Room room29 = hotel26.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        hotel26.reserveRoom(room36);
        hotel20.reserveRoom(room36);
        hotel16.reserveRoom(room36);
        hotel1.reserveRoom(room36);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2765");
        Hotel hotel1 = new Hotel(1);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel5.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        hotel1.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Room room42 = hotel39.findAvailableRoom();
        Room room43 = hotel39.findAvailableRoom();
        hotel1.reserveRoom(room43);
        Room room45 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room45);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2766");
        Hotel hotel1 = new Hotel((int) (byte) 1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel29.reserveRoom(room38);
        hotel7.reserveRoom(room38);
        hotel3.reserveRoom(room38);
        hotel1.reserveRoom(room38);
        hotel1.displayRoomStatus();
        Hotel hotel45 = new Hotel(10);
        hotel45.displayRoomStatus();
        Room room47 = hotel45.findAvailableRoom();
        Hotel hotel49 = new Hotel(0);
        Room room50 = hotel49.findAvailableRoom();
        Hotel hotel52 = new Hotel((int) ' ');
        Hotel hotel54 = new Hotel((int) (short) 0);
        Room room55 = hotel54.findAvailableRoom();
        Hotel hotel57 = new Hotel(10);
        Room room58 = hotel57.findAvailableRoom();
        hotel54.reserveRoom(room58);
        hotel52.reserveRoom(room58);
        Room room61 = hotel52.findAvailableRoom();
        hotel49.reserveRoom(room61);
        hotel45.reserveRoom(room61);
        Room room64 = hotel45.findAvailableRoom();
        hotel1.reserveRoom(room64);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room61);
        org.junit.Assert.assertNotNull(room64);
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2767");
        Hotel hotel1 = new Hotel(10);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel((int) (byte) 100);
        hotel6.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Room room12 = hotel9.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        hotel14.displayRoomStatus();
        Room room16 = hotel14.findAvailableRoom();
        Hotel hotel18 = new Hotel((int) (byte) -1);
        Room room19 = hotel18.findAvailableRoom();
        hotel18.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel18.reserveRoom(room23);
        hotel18.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel27.reserveRoom(room36);
        hotel18.reserveRoom(room36);
        hotel14.reserveRoom(room36);
        hotel14.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel14.reserveRoom(room60);
        hotel9.reserveRoom(room60);
        Room room65 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Room room67 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Room room69 = hotel9.findAvailableRoom();
        Hotel hotel71 = new Hotel(0);
        hotel71.displayRoomStatus();
        Room room73 = hotel71.findAvailableRoom();
        hotel71.displayRoomStatus();
        hotel71.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) -1);
        Room room78 = hotel77.findAvailableRoom();
        hotel77.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) (byte) 1);
        Room room82 = hotel81.findAvailableRoom();
        hotel77.reserveRoom(room82);
        Hotel hotel85 = new Hotel((int) (byte) 1);
        Room room86 = hotel85.findAvailableRoom();
        hotel77.reserveRoom(room86);
        hotel71.reserveRoom(room86);
        hotel9.reserveRoom(room86);
        hotel6.reserveRoom(room86);
        Room room91 = hotel6.findAvailableRoom();
        hotel1.reserveRoom(room91);
        Room room93 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room96 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room3);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNotNull(room82);
        org.junit.Assert.assertNotNull(room86);
        org.junit.Assert.assertNotNull(room91);
        org.junit.Assert.assertNotNull(room93);
        org.junit.Assert.assertNotNull(room96);
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2768");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Hotel hotel27 = new Hotel(10);
        Room room28 = hotel27.findAvailableRoom();
        hotel24.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Room room36 = hotel33.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        hotel38.displayRoomStatus();
        Room room40 = hotel38.findAvailableRoom();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel38.reserveRoom(room60);
        hotel38.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) -1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel66.reserveRoom(room71);
        hotel66.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel75.reserveRoom(room84);
        hotel66.reserveRoom(room84);
        hotel38.reserveRoom(room84);
        hotel33.reserveRoom(room84);
        hotel1.reserveRoom(room84);
        Room room90 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNull(room90);
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2769");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Room room22 = hotel1.findAvailableRoom();
        Hotel hotel24 = new Hotel((int) (short) 0);
        Room room25 = hotel24.findAvailableRoom();
        Hotel hotel27 = new Hotel(10);
        Room room28 = hotel27.findAvailableRoom();
        hotel24.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel32 = new Hotel((int) (byte) -1);
        Room room33 = hotel32.findAvailableRoom();
        hotel32.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel32.reserveRoom(room37);
        hotel32.displayRoomStatus();
        Hotel hotel41 = new Hotel(1);
        hotel41.displayRoomStatus();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        hotel45.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        hotel54.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel63.reserveRoom(room72);
        hotel54.reserveRoom(room72);
        hotel45.reserveRoom(room72);
        hotel41.reserveRoom(room72);
        hotel32.reserveRoom(room72);
        hotel32.displayRoomStatus();
        hotel32.displayRoomStatus();
        Hotel hotel81 = new Hotel((int) 'a');
        hotel81.displayRoomStatus();
        Hotel hotel84 = new Hotel((int) (byte) -1);
        Room room85 = hotel84.findAvailableRoom();
        hotel84.displayRoomStatus();
        Hotel hotel88 = new Hotel((int) (byte) 1);
        Room room89 = hotel88.findAvailableRoom();
        hotel84.reserveRoom(room89);
        hotel81.reserveRoom(room89);
        Room room92 = hotel81.findAvailableRoom();
        hotel32.reserveRoom(room92);
        hotel1.reserveRoom(room92);
        java.lang.Class<?> wildcardClass95 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room85);
        org.junit.Assert.assertNotNull(room89);
        org.junit.Assert.assertNotNull(room92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2770");
        Hotel hotel1 = new Hotel((int) 'a');
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel4.reserveRoom(room9);
        hotel1.reserveRoom(room9);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room16 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room16);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2771");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        Hotel hotel12 = new Hotel((int) (byte) -1);
        hotel12.displayRoomStatus();
        Room room14 = hotel12.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        hotel16.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel25.reserveRoom(room34);
        hotel16.reserveRoom(room34);
        hotel12.reserveRoom(room34);
        hotel12.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        hotel40.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) -1);
        Room room50 = hotel49.findAvailableRoom();
        hotel49.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel49.reserveRoom(room54);
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel49.reserveRoom(room58);
        hotel40.reserveRoom(room58);
        hotel12.reserveRoom(room58);
        hotel7.reserveRoom(room58);
        Room room63 = hotel7.findAvailableRoom();
        hotel1.reserveRoom(room63);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel69 = new Hotel((int) 'a');
        hotel69.displayRoomStatus();
        Room room71 = hotel69.findAvailableRoom();
        hotel1.reserveRoom(room71);
        java.lang.Class<?> wildcardClass73 = room71.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2772");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Hotel hotel3 = new Hotel((int) (byte) -1);
        hotel3.displayRoomStatus();
        Room room5 = hotel3.findAvailableRoom();
        Hotel hotel7 = new Hotel((int) (byte) -1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel7.reserveRoom(room12);
        hotel7.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel7.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel3.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        hotel31.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) -1);
        Room room41 = hotel40.findAvailableRoom();
        hotel40.displayRoomStatus();
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel40.reserveRoom(room45);
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel40.reserveRoom(room49);
        hotel31.reserveRoom(room49);
        hotel3.reserveRoom(room49);
        hotel1.reserveRoom(room49);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNotNull(room49);
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2773");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Hotel hotel5 = new Hotel((int) (byte) -1);
        Room room6 = hotel5.findAvailableRoom();
        hotel5.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel5.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel5.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        Room room27 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass28 = room27.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2774");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room7);
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Room room13 = hotel10.findAvailableRoom();
        Room room14 = hotel10.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel10.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room22 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (short) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel1.reserveRoom(room27);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room22);
        org.junit.Assert.assertNotNull(room27);
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2775");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (byte) -1);
        Room room28 = hotel27.findAvailableRoom();
        hotel27.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel27.reserveRoom(room32);
        hotel27.displayRoomStatus();
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel27.reserveRoom(room45);
        hotel23.reserveRoom(room45);
        hotel23.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        hotel51.displayRoomStatus();
        Hotel hotel60 = new Hotel((int) (byte) -1);
        Room room61 = hotel60.findAvailableRoom();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) 1);
        Room room65 = hotel64.findAvailableRoom();
        hotel60.reserveRoom(room65);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel60.reserveRoom(room69);
        hotel51.reserveRoom(room69);
        hotel23.reserveRoom(room69);
        hotel1.reserveRoom(room69);
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        hotel1.reserveRoom(room80);
        Room room83 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room85 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNull(room85);
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2776");
        Hotel hotel1 = new Hotel((int) (short) 1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel(0);
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel7.displayRoomStatus();
        Room room10 = hotel7.findAvailableRoom();
        hotel5.reserveRoom(room10);
        hotel1.reserveRoom(room10);
        hotel1.displayRoomStatus();
        Room room14 = hotel1.findAvailableRoom();
        Room room15 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room2);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room15);
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2777");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) -1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) -1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel12 = new Hotel((int) (byte) 1);
        Room room13 = hotel12.findAvailableRoom();
        hotel8.reserveRoom(room13);
        hotel8.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        Hotel hotel25 = new Hotel((int) (byte) 1);
        Room room26 = hotel25.findAvailableRoom();
        hotel17.reserveRoom(room26);
        hotel8.reserveRoom(room26);
        Hotel hotel30 = new Hotel((int) (byte) -1);
        Room room31 = hotel30.findAvailableRoom();
        hotel30.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel30.reserveRoom(room35);
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel30.reserveRoom(room39);
        hotel8.reserveRoom(room39);
        hotel4.reserveRoom(room39);
        hotel1.reserveRoom(room39);
        hotel1.displayRoomStatus();
        Room room45 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass46 = room45.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNull(room45);
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2778");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        Hotel hotel36 = new Hotel((int) (byte) -1);
        Room room37 = hotel36.findAvailableRoom();
        hotel36.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) (byte) 1);
        Room room41 = hotel40.findAvailableRoom();
        hotel36.reserveRoom(room41);
        Hotel hotel44 = new Hotel((int) (byte) 1);
        Room room45 = hotel44.findAvailableRoom();
        hotel36.reserveRoom(room45);
        hotel14.reserveRoom(room45);
        hotel10.reserveRoom(room45);
        hotel1.reserveRoom(room45);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room52 = hotel1.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Room room57 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        hotel54.displayRoomStatus();
        Room room60 = hotel54.findAvailableRoom();
        hotel1.reserveRoom(room60);
        Room room62 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel66 = new Hotel((int) (byte) -1);
        Room room67 = hotel66.findAvailableRoom();
        hotel66.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) 1);
        Room room71 = hotel70.findAvailableRoom();
        hotel66.reserveRoom(room71);
        hotel66.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) (byte) -1);
        Room room76 = hotel75.findAvailableRoom();
        hotel75.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) 1);
        Room room80 = hotel79.findAvailableRoom();
        hotel75.reserveRoom(room80);
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel75.reserveRoom(room84);
        hotel66.reserveRoom(room84);
        Room room87 = hotel66.findAvailableRoom();
        Hotel hotel89 = new Hotel((int) (short) 0);
        Room room90 = hotel89.findAvailableRoom();
        Hotel hotel92 = new Hotel(10);
        Room room93 = hotel92.findAvailableRoom();
        hotel89.reserveRoom(room93);
        hotel66.reserveRoom(room93);
        hotel1.reserveRoom(room93);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room45);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room76);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNull(room87);
        org.junit.Assert.assertNull(room90);
        org.junit.Assert.assertNotNull(room93);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2779");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room39);
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2780");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room7);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room12 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = room12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room12);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2781");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass29 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2782");
        Hotel hotel1 = new Hotel((int) ' ');
        Hotel hotel3 = new Hotel((int) (short) 0);
        Room room4 = hotel3.findAvailableRoom();
        Hotel hotel6 = new Hotel(10);
        Room room7 = hotel6.findAvailableRoom();
        hotel3.reserveRoom(room7);
        hotel1.reserveRoom(room7);
        Room room10 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room13 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (short) 100);
        hotel16.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        Room room40 = hotel19.findAvailableRoom();
        Room room41 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Room room43 = hotel19.findAvailableRoom();
        Hotel hotel45 = new Hotel((int) (short) 1);
        Hotel hotel47 = new Hotel((int) (short) 0);
        Room room48 = hotel47.findAvailableRoom();
        Hotel hotel50 = new Hotel(10);
        Room room51 = hotel50.findAvailableRoom();
        hotel47.reserveRoom(room51);
        hotel45.reserveRoom(room51);
        hotel45.displayRoomStatus();
        hotel45.displayRoomStatus();
        Hotel hotel57 = new Hotel(10);
        Room room58 = hotel57.findAvailableRoom();
        Room room59 = hotel57.findAvailableRoom();
        Hotel hotel61 = new Hotel((int) (short) 0);
        Room room62 = hotel61.findAvailableRoom();
        Room room63 = hotel61.findAvailableRoom();
        Room room64 = hotel61.findAvailableRoom();
        Room room65 = hotel61.findAvailableRoom();
        Hotel hotel67 = new Hotel(0);
        hotel67.displayRoomStatus();
        Room room69 = hotel67.findAvailableRoom();
        Room room70 = hotel67.findAvailableRoom();
        hotel67.displayRoomStatus();
        hotel67.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) ' ');
        Hotel hotel76 = new Hotel((int) (short) 0);
        Room room77 = hotel76.findAvailableRoom();
        Hotel hotel79 = new Hotel(10);
        Room room80 = hotel79.findAvailableRoom();
        hotel76.reserveRoom(room80);
        hotel74.reserveRoom(room80);
        hotel67.reserveRoom(room80);
        hotel61.reserveRoom(room80);
        hotel57.reserveRoom(room80);
        hotel45.reserveRoom(room80);
        hotel19.reserveRoom(room80);
        hotel16.reserveRoom(room80);
        Room room89 = hotel16.findAvailableRoom();
        hotel1.reserveRoom(room89);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(room89);
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2783");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room7);
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Room room13 = hotel10.findAvailableRoom();
        Room room14 = hotel10.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) 1);
        Room room17 = hotel16.findAvailableRoom();
        hotel10.reserveRoom(room17);
        hotel1.reserveRoom(room17);
        Hotel hotel21 = new Hotel((int) (byte) -1);
        hotel21.displayRoomStatus();
        Room room23 = hotel21.findAvailableRoom();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        Room room26 = hotel25.findAvailableRoom();
        hotel25.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) 1);
        Room room30 = hotel29.findAvailableRoom();
        hotel25.reserveRoom(room30);
        hotel25.displayRoomStatus();
        Hotel hotel34 = new Hotel((int) (byte) -1);
        Room room35 = hotel34.findAvailableRoom();
        hotel34.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel34.reserveRoom(room39);
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel34.reserveRoom(room43);
        hotel25.reserveRoom(room43);
        hotel21.reserveRoom(room43);
        hotel21.displayRoomStatus();
        hotel21.displayRoomStatus();
        Room room49 = hotel21.findAvailableRoom();
        Room room50 = hotel21.findAvailableRoom();
        hotel21.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) 1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Room room56 = hotel53.findAvailableRoom();
        Room room57 = hotel53.findAvailableRoom();
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel53.reserveRoom(room60);
        Room room62 = hotel53.findAvailableRoom();
        hotel21.reserveRoom(room62);
        hotel1.reserveRoom(room62);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNull(room26);
        org.junit.Assert.assertNotNull(room30);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNotNull(room62);
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2784");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel16 = new Hotel(10);
        Room room17 = hotel16.findAvailableRoom();
        Room room18 = hotel16.findAvailableRoom();
        Room room19 = hotel16.findAvailableRoom();
        hotel1.reserveRoom(room19);
        Room room21 = hotel1.findAvailableRoom();
        Hotel hotel23 = new Hotel((int) ' ');
        Hotel hotel25 = new Hotel((int) 'a');
        hotel25.displayRoomStatus();
        Room room27 = hotel25.findAvailableRoom();
        hotel23.reserveRoom(room27);
        Hotel hotel30 = new Hotel(0);
        hotel30.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel30.reserveRoom(room34);
        Room room36 = hotel30.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        Hotel hotel72 = new Hotel((int) (byte) 1);
        Room room73 = hotel72.findAvailableRoom();
        hotel64.reserveRoom(room73);
        hotel42.reserveRoom(room73);
        hotel38.reserveRoom(room73);
        hotel30.reserveRoom(room73);
        hotel23.reserveRoom(room73);
        hotel1.reserveRoom(room73);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room73);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2785");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel13.reserveRoom(room44);
        hotel9.reserveRoom(room44);
        hotel1.reserveRoom(room44);
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room58 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass60 = hotel1.getClass();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2786");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel6 = new Hotel((int) ' ');
        hotel6.displayRoomStatus();
        Room room8 = hotel6.findAvailableRoom();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        Room room12 = hotel10.findAvailableRoom();
        Hotel hotel14 = new Hotel(0);
        hotel14.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel14.reserveRoom(room18);
        hotel14.displayRoomStatus();
        Hotel hotel22 = new Hotel(10);
        hotel22.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) 'a');
        hotel25.displayRoomStatus();
        Room room27 = hotel25.findAvailableRoom();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        hotel38.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (byte) -1);
        Room room48 = hotel47.findAvailableRoom();
        hotel47.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) 1);
        Room room52 = hotel51.findAvailableRoom();
        hotel47.reserveRoom(room52);
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel47.reserveRoom(room56);
        hotel38.reserveRoom(room56);
        hotel29.reserveRoom(room56);
        hotel25.reserveRoom(room56);
        hotel22.reserveRoom(room56);
        hotel14.reserveRoom(room56);
        Room room63 = hotel14.findAvailableRoom();
        Hotel hotel65 = new Hotel((int) (short) 10);
        Room room66 = hotel65.findAvailableRoom();
        Room room67 = hotel65.findAvailableRoom();
        hotel14.reserveRoom(room67);
        hotel10.reserveRoom(room67);
        hotel6.reserveRoom(room67);
        hotel1.reserveRoom(room67);
        java.lang.Class<?> wildcardClass72 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNull(room63);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(room67);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2787");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel16 = new Hotel(10);
        Room room17 = hotel16.findAvailableRoom();
        Room room18 = hotel16.findAvailableRoom();
        Room room19 = hotel16.findAvailableRoom();
        hotel1.reserveRoom(room19);
        Room room21 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = room21.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room21);
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2788");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((-1));
        Hotel hotel10 = new Hotel((int) (byte) -1);
        hotel10.displayRoomStatus();
        Room room12 = hotel10.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        hotel14.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel14.reserveRoom(room32);
        hotel10.reserveRoom(room32);
        hotel8.reserveRoom(room32);
        Room room37 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) ' ');
        Room room41 = hotel40.findAvailableRoom();
        hotel8.reserveRoom(room41);
        hotel1.reserveRoom(room41);
        Hotel hotel45 = new Hotel(0);
        hotel45.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel45.reserveRoom(room49);
        hotel45.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (short) 0);
        Room room54 = hotel53.findAvailableRoom();
        Hotel hotel56 = new Hotel(10);
        Room room57 = hotel56.findAvailableRoom();
        hotel53.reserveRoom(room57);
        hotel45.reserveRoom(room57);
        Room room60 = hotel45.findAvailableRoom();
        Hotel hotel62 = new Hotel(10);
        Room room63 = hotel62.findAvailableRoom();
        Room room64 = hotel62.findAvailableRoom();
        Hotel hotel66 = new Hotel((int) (short) 0);
        Room room67 = hotel66.findAvailableRoom();
        Room room68 = hotel66.findAvailableRoom();
        Room room69 = hotel66.findAvailableRoom();
        Room room70 = hotel66.findAvailableRoom();
        Hotel hotel72 = new Hotel(0);
        hotel72.displayRoomStatus();
        Room room74 = hotel72.findAvailableRoom();
        Room room75 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        hotel72.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) ' ');
        Hotel hotel81 = new Hotel((int) (short) 0);
        Room room82 = hotel81.findAvailableRoom();
        Hotel hotel84 = new Hotel(10);
        Room room85 = hotel84.findAvailableRoom();
        hotel81.reserveRoom(room85);
        hotel79.reserveRoom(room85);
        hotel72.reserveRoom(room85);
        hotel66.reserveRoom(room85);
        hotel62.reserveRoom(room85);
        Room room91 = hotel62.findAvailableRoom();
        hotel45.reserveRoom(room91);
        hotel1.reserveRoom(room91);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room63);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room68);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNull(room70);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNull(room75);
        org.junit.Assert.assertNull(room82);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNotNull(room91);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2789");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (short) 1);
        Hotel hotel7 = new Hotel((int) (short) 0);
        Room room8 = hotel7.findAvailableRoom();
        Hotel hotel10 = new Hotel(10);
        Room room11 = hotel10.findAvailableRoom();
        hotel7.reserveRoom(room11);
        hotel5.reserveRoom(room11);
        hotel5.displayRoomStatus();
        Hotel hotel16 = new Hotel((int) (short) 0);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        hotel16.displayRoomStatus();
        Room room20 = hotel16.findAvailableRoom();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        hotel22.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel31.reserveRoom(room40);
        hotel22.reserveRoom(room40);
        Hotel hotel44 = new Hotel((int) (byte) -1);
        Room room45 = hotel44.findAvailableRoom();
        hotel44.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) 1);
        Room room49 = hotel48.findAvailableRoom();
        hotel44.reserveRoom(room49);
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel44.reserveRoom(room53);
        hotel22.reserveRoom(room53);
        hotel16.reserveRoom(room53);
        hotel5.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room45);
        org.junit.Assert.assertNotNull(room49);
        org.junit.Assert.assertNotNull(room53);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2790");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (short) 0);
        Room room10 = hotel9.findAvailableRoom();
        Hotel hotel12 = new Hotel(10);
        Room room13 = hotel12.findAvailableRoom();
        hotel9.reserveRoom(room13);
        hotel1.reserveRoom(room13);
        Room room16 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room18 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel22 = new Hotel(1);
        hotel22.displayRoomStatus();
        Hotel hotel25 = new Hotel((int) (byte) -1);
        hotel25.displayRoomStatus();
        Room room27 = hotel25.findAvailableRoom();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel25.reserveRoom(room47);
        hotel25.displayRoomStatus();
        Hotel hotel53 = new Hotel((int) (byte) -1);
        Room room54 = hotel53.findAvailableRoom();
        hotel53.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) 1);
        Room room58 = hotel57.findAvailableRoom();
        hotel53.reserveRoom(room58);
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel53.reserveRoom(room62);
        hotel25.reserveRoom(room62);
        Hotel hotel66 = new Hotel(0);
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel68.displayRoomStatus();
        Room room71 = hotel68.findAvailableRoom();
        hotel66.reserveRoom(room71);
        hotel25.reserveRoom(room71);
        hotel22.reserveRoom(room71);
        hotel1.reserveRoom(room71);
        Room room76 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room54);
        org.junit.Assert.assertNotNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNotNull(room71);
        org.junit.Assert.assertNull(room76);
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2791");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Room room7 = hotel4.findAvailableRoom();
        hotel4.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel19.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        Hotel hotel36 = new Hotel((int) (byte) 1);
        Room room37 = hotel36.findAvailableRoom();
        hotel28.reserveRoom(room37);
        hotel19.reserveRoom(room37);
        hotel10.reserveRoom(room37);
        Hotel hotel42 = new Hotel((int) 'a');
        hotel42.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) -1);
        Room room46 = hotel45.findAvailableRoom();
        hotel45.displayRoomStatus();
        Hotel hotel49 = new Hotel((int) (byte) 1);
        Room room50 = hotel49.findAvailableRoom();
        hotel45.reserveRoom(room50);
        hotel42.reserveRoom(room50);
        Room room53 = hotel42.findAvailableRoom();
        hotel10.reserveRoom(room53);
        hotel4.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        java.lang.Class<?> wildcardClass57 = room53.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNotNull(room7);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNotNull(room37);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNotNull(room50);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2792");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel(10);
        hotel8.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) 'a');
        hotel11.displayRoomStatus();
        Room room13 = hotel11.findAvailableRoom();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        hotel24.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel24.reserveRoom(room42);
        hotel15.reserveRoom(room42);
        hotel11.reserveRoom(room42);
        hotel8.reserveRoom(room42);
        Hotel hotel49 = new Hotel((int) (short) 0);
        Room room50 = hotel49.findAvailableRoom();
        Hotel hotel52 = new Hotel(10);
        Room room53 = hotel52.findAvailableRoom();
        hotel49.reserveRoom(room53);
        hotel8.reserveRoom(room53);
        hotel1.reserveRoom(room53);
        Hotel hotel58 = new Hotel((int) (short) 1);
        Hotel hotel60 = new Hotel((int) (short) 0);
        Room room61 = hotel60.findAvailableRoom();
        Hotel hotel63 = new Hotel(10);
        Room room64 = hotel63.findAvailableRoom();
        hotel60.reserveRoom(room64);
        hotel58.reserveRoom(room64);
        hotel58.displayRoomStatus();
        Room room68 = hotel58.findAvailableRoom();
        hotel1.reserveRoom(room68);
        Room room70 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room61);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room70);
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2793");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) (byte) 1);
        Room room5 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room5);
        Room room7 = hotel1.findAvailableRoom();
        Hotel hotel9 = new Hotel((int) (byte) -1);
        Room room10 = hotel9.findAvailableRoom();
        hotel9.displayRoomStatus();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Hotel hotel17 = new Hotel((int) (byte) 1);
        Room room18 = hotel17.findAvailableRoom();
        hotel13.reserveRoom(room18);
        hotel13.displayRoomStatus();
        Hotel hotel22 = new Hotel((int) (byte) -1);
        Room room23 = hotel22.findAvailableRoom();
        hotel22.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) 1);
        Room room27 = hotel26.findAvailableRoom();
        hotel22.reserveRoom(room27);
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel22.reserveRoom(room31);
        hotel13.reserveRoom(room31);
        Hotel hotel35 = new Hotel((int) (byte) -1);
        Room room36 = hotel35.findAvailableRoom();
        hotel35.displayRoomStatus();
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel35.reserveRoom(room40);
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel35.reserveRoom(room44);
        hotel13.reserveRoom(room44);
        hotel9.reserveRoom(room44);
        hotel1.reserveRoom(room44);
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        Room room58 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNotNull(room5);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room23);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room58);
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2794");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        Room room10 = hotel1.findAvailableRoom();
        Room room11 = hotel1.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) 1);
        Room room14 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        Room room16 = hotel13.findAvailableRoom();
        Room room17 = hotel13.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel13.reserveRoom(room20);
        Room room22 = hotel13.findAvailableRoom();
        hotel13.displayRoomStatus();
        hotel13.displayRoomStatus();
        Room room25 = hotel13.findAvailableRoom();
        Room room26 = hotel13.findAvailableRoom();
        hotel1.reserveRoom(room26);
        Hotel hotel29 = new Hotel((int) (byte) 0);
        Hotel hotel31 = new Hotel(0);
        hotel31.displayRoomStatus();
        Room room33 = hotel31.findAvailableRoom();
        Room room34 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        hotel31.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) ' ');
        Hotel hotel40 = new Hotel((int) (short) 0);
        Room room41 = hotel40.findAvailableRoom();
        Hotel hotel43 = new Hotel(10);
        Room room44 = hotel43.findAvailableRoom();
        hotel40.reserveRoom(room44);
        hotel38.reserveRoom(room44);
        hotel31.reserveRoom(room44);
        hotel29.reserveRoom(room44);
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        hotel50.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) (byte) -1);
        Room room60 = hotel59.findAvailableRoom();
        hotel59.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) 1);
        Room room64 = hotel63.findAvailableRoom();
        hotel59.reserveRoom(room64);
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel59.reserveRoom(room68);
        hotel50.reserveRoom(room68);
        Room room71 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        hotel50.displayRoomStatus();
        Hotel hotel75 = new Hotel((int) ' ');
        Hotel hotel77 = new Hotel((int) (short) 0);
        Room room78 = hotel77.findAvailableRoom();
        Hotel hotel80 = new Hotel(10);
        Room room81 = hotel80.findAvailableRoom();
        hotel77.reserveRoom(room81);
        hotel75.reserveRoom(room81);
        Room room84 = hotel75.findAvailableRoom();
        hotel50.reserveRoom(room84);
        hotel29.reserveRoom(room84);
        hotel1.reserveRoom(room84);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room10);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room14);
        org.junit.Assert.assertNotNull(room16);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room26);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNull(room60);
        org.junit.Assert.assertNotNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNull(room78);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room84);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2795");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room39 = hotel1.findAvailableRoom();
        Room room40 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room42 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNull(room42);
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2796");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        hotel10.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel10.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room34 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room37 = hotel1.findAvailableRoom();
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        Hotel hotel56 = new Hotel((int) (byte) 1);
        Room room57 = hotel56.findAvailableRoom();
        hotel48.reserveRoom(room57);
        hotel39.reserveRoom(room57);
        Hotel hotel61 = new Hotel((int) (byte) -1);
        Room room62 = hotel61.findAvailableRoom();
        hotel61.displayRoomStatus();
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel61.reserveRoom(room66);
        hotel61.displayRoomStatus();
        Hotel hotel70 = new Hotel((int) (byte) -1);
        Room room71 = hotel70.findAvailableRoom();
        hotel70.displayRoomStatus();
        Hotel hotel74 = new Hotel((int) (byte) 1);
        Room room75 = hotel74.findAvailableRoom();
        hotel70.reserveRoom(room75);
        hotel70.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) -1);
        Room room80 = hotel79.findAvailableRoom();
        hotel79.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel79.reserveRoom(room84);
        Hotel hotel87 = new Hotel((int) (byte) 1);
        Room room88 = hotel87.findAvailableRoom();
        hotel79.reserveRoom(room88);
        hotel70.reserveRoom(room88);
        hotel61.reserveRoom(room88);
        hotel39.reserveRoom(room88);
        hotel1.reserveRoom(room88);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room97 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNull(room37);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNotNull(room57);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNull(room71);
        org.junit.Assert.assertNotNull(room75);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNull(room97);
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2797");
        Hotel hotel1 = new Hotel((int) 'a');
        Hotel hotel3 = new Hotel((int) (byte) -1);
        Room room4 = hotel3.findAvailableRoom();
        hotel3.displayRoomStatus();
        Hotel hotel7 = new Hotel((int) (byte) 1);
        Room room8 = hotel7.findAvailableRoom();
        hotel3.reserveRoom(room8);
        Hotel hotel11 = new Hotel((int) (byte) 1);
        Room room12 = hotel11.findAvailableRoom();
        hotel3.reserveRoom(room12);
        Room room14 = hotel3.findAvailableRoom();
        Hotel hotel16 = new Hotel((int) (byte) -1);
        Room room17 = hotel16.findAvailableRoom();
        hotel16.displayRoomStatus();
        Hotel hotel20 = new Hotel((int) (byte) 1);
        Room room21 = hotel20.findAvailableRoom();
        hotel16.reserveRoom(room21);
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel16.reserveRoom(room25);
        hotel3.reserveRoom(room25);
        hotel1.reserveRoom(room25);
        Room room29 = hotel1.findAvailableRoom();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) -1);
        Room room40 = hotel39.findAvailableRoom();
        hotel39.displayRoomStatus();
        Hotel hotel43 = new Hotel((int) (byte) 1);
        Room room44 = hotel43.findAvailableRoom();
        hotel39.reserveRoom(room44);
        hotel39.displayRoomStatus();
        Hotel hotel48 = new Hotel((int) (byte) -1);
        Room room49 = hotel48.findAvailableRoom();
        hotel48.displayRoomStatus();
        Hotel hotel52 = new Hotel((int) (byte) 1);
        Room room53 = hotel52.findAvailableRoom();
        hotel48.reserveRoom(room53);
        hotel48.displayRoomStatus();
        Hotel hotel57 = new Hotel((int) (byte) -1);
        Room room58 = hotel57.findAvailableRoom();
        hotel57.displayRoomStatus();
        Hotel hotel61 = new Hotel((int) (byte) 1);
        Room room62 = hotel61.findAvailableRoom();
        hotel57.reserveRoom(room62);
        Hotel hotel65 = new Hotel((int) (byte) 1);
        Room room66 = hotel65.findAvailableRoom();
        hotel57.reserveRoom(room66);
        hotel48.reserveRoom(room66);
        hotel39.reserveRoom(room66);
        hotel31.reserveRoom(room66);
        hotel1.reserveRoom(room66);
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass73 = hotel1.getClass();
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room8);
        org.junit.Assert.assertNotNull(room12);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNotNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNull(room49);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNotNull(room62);
        org.junit.Assert.assertNotNull(room66);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2798");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel8 = new Hotel((int) (byte) 1);
        Room room9 = hotel8.findAvailableRoom();
        hotel8.displayRoomStatus();
        Room room11 = hotel8.findAvailableRoom();
        Hotel hotel13 = new Hotel((int) (byte) -1);
        hotel13.displayRoomStatus();
        Room room15 = hotel13.findAvailableRoom();
        Hotel hotel17 = new Hotel((int) (byte) -1);
        Room room18 = hotel17.findAvailableRoom();
        hotel17.displayRoomStatus();
        Hotel hotel21 = new Hotel((int) (byte) 1);
        Room room22 = hotel21.findAvailableRoom();
        hotel17.reserveRoom(room22);
        hotel17.displayRoomStatus();
        Hotel hotel26 = new Hotel((int) (byte) -1);
        Room room27 = hotel26.findAvailableRoom();
        hotel26.displayRoomStatus();
        Hotel hotel30 = new Hotel((int) (byte) 1);
        Room room31 = hotel30.findAvailableRoom();
        hotel26.reserveRoom(room31);
        Hotel hotel34 = new Hotel((int) (byte) 1);
        Room room35 = hotel34.findAvailableRoom();
        hotel26.reserveRoom(room35);
        hotel17.reserveRoom(room35);
        hotel13.reserveRoom(room35);
        hotel13.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) -1);
        Room room42 = hotel41.findAvailableRoom();
        hotel41.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel41.reserveRoom(room46);
        hotel41.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel50.reserveRoom(room55);
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel50.reserveRoom(room59);
        hotel41.reserveRoom(room59);
        hotel13.reserveRoom(room59);
        hotel8.reserveRoom(room59);
        hotel1.reserveRoom(room59);
        hotel1.displayRoomStatus();
        Room room66 = hotel1.findAvailableRoom();
        Room room67 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room69 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel72 = new Hotel(1);
        hotel72.displayRoomStatus();
        hotel72.displayRoomStatus();
        hotel72.displayRoomStatus();
        hotel72.displayRoomStatus();
        hotel72.displayRoomStatus();
        hotel72.displayRoomStatus();
        hotel72.displayRoomStatus();
        Room room80 = hotel72.findAvailableRoom();
        hotel1.reserveRoom(room80);
        java.lang.Class<?> wildcardClass82 = room80.getClass();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNotNull(room9);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNull(room18);
        org.junit.Assert.assertNotNull(room22);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNotNull(room31);
        org.junit.Assert.assertNotNull(room35);
        org.junit.Assert.assertNull(room42);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNotNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room66);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNull(room69);
        org.junit.Assert.assertNotNull(room80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2799");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) 'a');
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room25);
        hotel1.displayRoomStatus();
        Room room28 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel31 = new Hotel((int) (byte) -1);
        Room room32 = hotel31.findAvailableRoom();
        hotel31.displayRoomStatus();
        Hotel hotel35 = new Hotel((int) (byte) 1);
        Room room36 = hotel35.findAvailableRoom();
        hotel31.reserveRoom(room36);
        Hotel hotel39 = new Hotel((int) (byte) 1);
        Room room40 = hotel39.findAvailableRoom();
        hotel31.reserveRoom(room40);
        hotel1.reserveRoom(room40);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel47 = new Hotel((int) (short) 1);
        Hotel hotel49 = new Hotel((int) (short) 0);
        Room room50 = hotel49.findAvailableRoom();
        Hotel hotel52 = new Hotel(10);
        Room room53 = hotel52.findAvailableRoom();
        hotel49.reserveRoom(room53);
        hotel47.reserveRoom(room53);
        hotel47.displayRoomStatus();
        hotel47.displayRoomStatus();
        Hotel hotel59 = new Hotel((int) '4');
        Hotel hotel61 = new Hotel(0);
        Room room62 = hotel61.findAvailableRoom();
        Hotel hotel64 = new Hotel((int) ' ');
        Hotel hotel66 = new Hotel((int) (short) 0);
        Room room67 = hotel66.findAvailableRoom();
        Hotel hotel69 = new Hotel(10);
        Room room70 = hotel69.findAvailableRoom();
        hotel66.reserveRoom(room70);
        hotel64.reserveRoom(room70);
        Room room73 = hotel64.findAvailableRoom();
        hotel61.reserveRoom(room73);
        Hotel hotel76 = new Hotel((int) 'a');
        hotel76.displayRoomStatus();
        Hotel hotel79 = new Hotel((int) (byte) -1);
        Room room80 = hotel79.findAvailableRoom();
        hotel79.displayRoomStatus();
        Hotel hotel83 = new Hotel((int) (byte) 1);
        Room room84 = hotel83.findAvailableRoom();
        hotel79.reserveRoom(room84);
        hotel76.reserveRoom(room84);
        Room room87 = hotel76.findAvailableRoom();
        Room room88 = hotel76.findAvailableRoom();
        Room room89 = hotel76.findAvailableRoom();
        hotel61.reserveRoom(room89);
        hotel59.reserveRoom(room89);
        hotel47.reserveRoom(room89);
        hotel1.reserveRoom(room89);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room32);
        org.junit.Assert.assertNotNull(room36);
        org.junit.Assert.assertNotNull(room40);
        org.junit.Assert.assertNull(room50);
        org.junit.Assert.assertNotNull(room53);
        org.junit.Assert.assertNull(room62);
        org.junit.Assert.assertNull(room67);
        org.junit.Assert.assertNotNull(room70);
        org.junit.Assert.assertNotNull(room73);
        org.junit.Assert.assertNull(room80);
        org.junit.Assert.assertNotNull(room84);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room88);
        org.junit.Assert.assertNotNull(room89);
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2800");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel11 = new Hotel((int) (short) 1);
        Hotel hotel13 = new Hotel((int) (short) 0);
        Room room14 = hotel13.findAvailableRoom();
        Hotel hotel16 = new Hotel(10);
        Room room17 = hotel16.findAvailableRoom();
        hotel13.reserveRoom(room17);
        hotel11.reserveRoom(room17);
        hotel11.displayRoomStatus();
        hotel11.displayRoomStatus();
        Hotel hotel23 = new Hotel(10);
        Room room24 = hotel23.findAvailableRoom();
        Room room25 = hotel23.findAvailableRoom();
        Hotel hotel27 = new Hotel((int) (short) 0);
        Room room28 = hotel27.findAvailableRoom();
        Room room29 = hotel27.findAvailableRoom();
        Room room30 = hotel27.findAvailableRoom();
        Room room31 = hotel27.findAvailableRoom();
        Hotel hotel33 = new Hotel(0);
        hotel33.displayRoomStatus();
        Room room35 = hotel33.findAvailableRoom();
        Room room36 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        hotel33.displayRoomStatus();
        Hotel hotel40 = new Hotel((int) ' ');
        Hotel hotel42 = new Hotel((int) (short) 0);
        Room room43 = hotel42.findAvailableRoom();
        Hotel hotel45 = new Hotel(10);
        Room room46 = hotel45.findAvailableRoom();
        hotel42.reserveRoom(room46);
        hotel40.reserveRoom(room46);
        hotel33.reserveRoom(room46);
        hotel27.reserveRoom(room46);
        hotel23.reserveRoom(room46);
        hotel11.reserveRoom(room46);
        hotel11.displayRoomStatus();
        Room room54 = hotel11.findAvailableRoom();
        hotel1.reserveRoom(room54);
        hotel1.displayRoomStatus();
        Room room57 = hotel1.findAvailableRoom();
        Room room58 = hotel1.findAvailableRoom();
        Hotel hotel60 = new Hotel(1);
        hotel60.displayRoomStatus();
        hotel60.displayRoomStatus();
        Hotel hotel64 = new Hotel((int) (byte) -1);
        Room room65 = hotel64.findAvailableRoom();
        hotel64.displayRoomStatus();
        Hotel hotel68 = new Hotel((int) (byte) 1);
        Room room69 = hotel68.findAvailableRoom();
        hotel64.reserveRoom(room69);
        hotel64.displayRoomStatus();
        Hotel hotel73 = new Hotel((int) (byte) -1);
        Room room74 = hotel73.findAvailableRoom();
        hotel73.displayRoomStatus();
        Hotel hotel77 = new Hotel((int) (byte) 1);
        Room room78 = hotel77.findAvailableRoom();
        hotel73.reserveRoom(room78);
        hotel73.displayRoomStatus();
        Hotel hotel82 = new Hotel((int) (byte) -1);
        Room room83 = hotel82.findAvailableRoom();
        hotel82.displayRoomStatus();
        Hotel hotel86 = new Hotel((int) (byte) 1);
        Room room87 = hotel86.findAvailableRoom();
        hotel82.reserveRoom(room87);
        Hotel hotel90 = new Hotel((int) (byte) 1);
        Room room91 = hotel90.findAvailableRoom();
        hotel82.reserveRoom(room91);
        hotel73.reserveRoom(room91);
        hotel64.reserveRoom(room91);
        hotel60.reserveRoom(room91);
        Room room96 = hotel60.findAvailableRoom();
        Room room97 = hotel60.findAvailableRoom();
        hotel1.reserveRoom(room97);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room14);
        org.junit.Assert.assertNotNull(room17);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNotNull(room54);
        org.junit.Assert.assertNull(room57);
        org.junit.Assert.assertNull(room58);
        org.junit.Assert.assertNull(room65);
        org.junit.Assert.assertNotNull(room69);
        org.junit.Assert.assertNull(room74);
        org.junit.Assert.assertNotNull(room78);
        org.junit.Assert.assertNull(room83);
        org.junit.Assert.assertNotNull(room87);
        org.junit.Assert.assertNotNull(room91);
        org.junit.Assert.assertNotNull(room96);
        org.junit.Assert.assertNotNull(room97);
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2801");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Room room8 = hotel1.findAvailableRoom();
        Room room9 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room11 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) ' ');
        hotel15.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) 'a');
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel20.reserveRoom(room29);
        Room room31 = hotel20.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel33.reserveRoom(room42);
        hotel20.reserveRoom(room42);
        hotel18.reserveRoom(room42);
        Room room46 = hotel18.findAvailableRoom();
        hotel15.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room8);
        org.junit.Assert.assertNull(room9);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2802");
        Hotel hotel1 = new Hotel((int) (short) -1);
        hotel1.displayRoomStatus();
        Hotel hotel4 = new Hotel((int) 'a');
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel6.reserveRoom(room15);
        Room room17 = hotel6.findAvailableRoom();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel19.reserveRoom(room28);
        hotel6.reserveRoom(room28);
        hotel4.reserveRoom(room28);
        hotel1.reserveRoom(room28);
        Hotel hotel34 = new Hotel(0);
        hotel34.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel34.reserveRoom(room38);
        Room room40 = hotel34.findAvailableRoom();
        Hotel hotel42 = new Hotel(0);
        hotel42.displayRoomStatus();
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel42.reserveRoom(room46);
        Room room48 = hotel42.findAvailableRoom();
        Hotel hotel50 = new Hotel((int) (byte) -1);
        Room room51 = hotel50.findAvailableRoom();
        hotel50.displayRoomStatus();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        hotel54.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        Hotel hotel71 = new Hotel((int) (byte) 1);
        Room room72 = hotel71.findAvailableRoom();
        hotel63.reserveRoom(room72);
        hotel54.reserveRoom(room72);
        Hotel hotel76 = new Hotel((int) (byte) -1);
        Room room77 = hotel76.findAvailableRoom();
        hotel76.displayRoomStatus();
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel76.reserveRoom(room81);
        Hotel hotel84 = new Hotel((int) (byte) 1);
        Room room85 = hotel84.findAvailableRoom();
        hotel76.reserveRoom(room85);
        hotel54.reserveRoom(room85);
        hotel50.reserveRoom(room85);
        hotel42.reserveRoom(room85);
        hotel34.reserveRoom(room85);
        hotel1.reserveRoom(room85);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        Room room95 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNull(room17);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room40);
        org.junit.Assert.assertNotNull(room46);
        org.junit.Assert.assertNull(room48);
        org.junit.Assert.assertNull(room51);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNotNull(room72);
        org.junit.Assert.assertNull(room77);
        org.junit.Assert.assertNotNull(room81);
        org.junit.Assert.assertNotNull(room85);
        org.junit.Assert.assertNull(room95);
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2803");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Hotel hotel6 = new Hotel((int) (byte) -1);
        Room room7 = hotel6.findAvailableRoom();
        hotel6.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) 1);
        Room room11 = hotel10.findAvailableRoom();
        hotel6.reserveRoom(room11);
        hotel6.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel15.reserveRoom(room24);
        hotel6.reserveRoom(room24);
        Hotel hotel28 = new Hotel((int) (byte) -1);
        Room room29 = hotel28.findAvailableRoom();
        hotel28.displayRoomStatus();
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel28.reserveRoom(room33);
        hotel28.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        hotel37.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) -1);
        Room room47 = hotel46.findAvailableRoom();
        hotel46.displayRoomStatus();
        Hotel hotel50 = new Hotel((int) (byte) 1);
        Room room51 = hotel50.findAvailableRoom();
        hotel46.reserveRoom(room51);
        Hotel hotel54 = new Hotel((int) (byte) 1);
        Room room55 = hotel54.findAvailableRoom();
        hotel46.reserveRoom(room55);
        hotel37.reserveRoom(room55);
        hotel28.reserveRoom(room55);
        hotel6.reserveRoom(room55);
        hotel1.reserveRoom(room55);
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room11);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNull(room47);
        org.junit.Assert.assertNotNull(room51);
        org.junit.Assert.assertNotNull(room55);
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2804");
        Hotel hotel1 = new Hotel(0);
        hotel1.displayRoomStatus();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room6 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Hotel hotel11 = new Hotel((int) (byte) -1);
        Room room12 = hotel11.findAvailableRoom();
        hotel11.displayRoomStatus();
        Hotel hotel15 = new Hotel((int) (byte) -1);
        Room room16 = hotel15.findAvailableRoom();
        hotel15.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) 1);
        Room room20 = hotel19.findAvailableRoom();
        hotel15.reserveRoom(room20);
        hotel15.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) -1);
        Room room25 = hotel24.findAvailableRoom();
        hotel24.displayRoomStatus();
        Hotel hotel28 = new Hotel((int) (byte) 1);
        Room room29 = hotel28.findAvailableRoom();
        hotel24.reserveRoom(room29);
        Hotel hotel32 = new Hotel((int) (byte) 1);
        Room room33 = hotel32.findAvailableRoom();
        hotel24.reserveRoom(room33);
        hotel15.reserveRoom(room33);
        Hotel hotel37 = new Hotel((int) (byte) -1);
        Room room38 = hotel37.findAvailableRoom();
        hotel37.displayRoomStatus();
        Hotel hotel41 = new Hotel((int) (byte) 1);
        Room room42 = hotel41.findAvailableRoom();
        hotel37.reserveRoom(room42);
        Hotel hotel45 = new Hotel((int) (byte) 1);
        Room room46 = hotel45.findAvailableRoom();
        hotel37.reserveRoom(room46);
        hotel15.reserveRoom(room46);
        hotel11.reserveRoom(room46);
        hotel9.reserveRoom(room46);
        hotel1.reserveRoom(room46);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room6);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room16);
        org.junit.Assert.assertNotNull(room20);
        org.junit.Assert.assertNull(room25);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNotNull(room33);
        org.junit.Assert.assertNull(room38);
        org.junit.Assert.assertNotNull(room42);
        org.junit.Assert.assertNotNull(room46);
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2805");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) ' ');
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel4.reserveRoom(room10);
        Room room13 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room13);
        Hotel hotel16 = new Hotel((int) 'a');
        hotel16.displayRoomStatus();
        Hotel hotel19 = new Hotel((int) (byte) -1);
        Room room20 = hotel19.findAvailableRoom();
        hotel19.displayRoomStatus();
        Hotel hotel23 = new Hotel((int) (byte) 1);
        Room room24 = hotel23.findAvailableRoom();
        hotel19.reserveRoom(room24);
        hotel16.reserveRoom(room24);
        Room room27 = hotel16.findAvailableRoom();
        Room room28 = hotel16.findAvailableRoom();
        Room room29 = hotel16.findAvailableRoom();
        hotel1.reserveRoom(room29);
        Room room31 = hotel1.findAvailableRoom();
        Hotel hotel33 = new Hotel((int) (byte) -1);
        Room room34 = hotel33.findAvailableRoom();
        hotel33.displayRoomStatus();
        Hotel hotel37 = new Hotel((int) (byte) 1);
        Room room38 = hotel37.findAvailableRoom();
        hotel33.reserveRoom(room38);
        hotel33.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) -1);
        Room room43 = hotel42.findAvailableRoom();
        hotel42.displayRoomStatus();
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel42.reserveRoom(room47);
        hotel42.displayRoomStatus();
        Hotel hotel51 = new Hotel((int) (byte) -1);
        Room room52 = hotel51.findAvailableRoom();
        hotel51.displayRoomStatus();
        Hotel hotel55 = new Hotel((int) (byte) 1);
        Room room56 = hotel55.findAvailableRoom();
        hotel51.reserveRoom(room56);
        Hotel hotel59 = new Hotel((int) (byte) 1);
        Room room60 = hotel59.findAvailableRoom();
        hotel51.reserveRoom(room60);
        hotel42.reserveRoom(room60);
        hotel33.reserveRoom(room60);
        hotel1.reserveRoom(room60);
        Room room65 = hotel1.findAvailableRoom();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass66 = room65.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNull(room20);
        org.junit.Assert.assertNotNull(room24);
        org.junit.Assert.assertNotNull(room27);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room29);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room34);
        org.junit.Assert.assertNotNull(room38);
        org.junit.Assert.assertNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room52);
        org.junit.Assert.assertNotNull(room56);
        org.junit.Assert.assertNotNull(room60);
        org.junit.Assert.assertNull(room65);
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2806");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        Hotel hotel9 = new Hotel((int) (byte) 1);
        Room room10 = hotel9.findAvailableRoom();
        hotel1.reserveRoom(room10);
        Room room12 = hotel1.findAvailableRoom();
        Hotel hotel14 = new Hotel((int) (byte) -1);
        Room room15 = hotel14.findAvailableRoom();
        hotel14.displayRoomStatus();
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel14.reserveRoom(room19);
        Hotel hotel22 = new Hotel((int) (byte) 1);
        Room room23 = hotel22.findAvailableRoom();
        hotel14.reserveRoom(room23);
        hotel1.reserveRoom(room23);
        hotel1.displayRoomStatus();
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        Room room29 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNull(room12);
        org.junit.Assert.assertNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room23);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2807");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room37 = null;
        // The following exception was thrown during execution in test generation
        try {
            hotel1.reserveRoom(room37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Room.setOccupied(boolean)\" because \"room\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2808");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) (byte) -1);
        Room room24 = hotel23.findAvailableRoom();
        hotel23.displayRoomStatus();
        Hotel hotel27 = new Hotel((int) (byte) 1);
        Room room28 = hotel27.findAvailableRoom();
        hotel23.reserveRoom(room28);
        Hotel hotel31 = new Hotel((int) (byte) 1);
        Room room32 = hotel31.findAvailableRoom();
        hotel23.reserveRoom(room32);
        hotel1.reserveRoom(room32);
        Room room35 = hotel1.findAvailableRoom();
        Room room36 = hotel1.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) (byte) 1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Room room41 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Room room43 = hotel38.findAvailableRoom();
        hotel1.reserveRoom(room43);
        hotel1.displayRoomStatus();
        Room room46 = hotel1.findAvailableRoom();
        Room room47 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNull(room24);
        org.junit.Assert.assertNotNull(room28);
        org.junit.Assert.assertNotNull(room32);
        org.junit.Assert.assertNull(room35);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNotNull(room39);
        org.junit.Assert.assertNotNull(room41);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNull(room46);
        org.junit.Assert.assertNull(room47);
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2809");
        Hotel hotel1 = new Hotel((int) (byte) -1);
        Room room2 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Hotel hotel5 = new Hotel((int) (byte) 1);
        Room room6 = hotel5.findAvailableRoom();
        hotel1.reserveRoom(room6);
        hotel1.displayRoomStatus();
        Hotel hotel10 = new Hotel((int) (byte) -1);
        Room room11 = hotel10.findAvailableRoom();
        hotel10.displayRoomStatus();
        Hotel hotel14 = new Hotel((int) (byte) 1);
        Room room15 = hotel14.findAvailableRoom();
        hotel10.reserveRoom(room15);
        Hotel hotel18 = new Hotel((int) (byte) 1);
        Room room19 = hotel18.findAvailableRoom();
        hotel10.reserveRoom(room19);
        hotel1.reserveRoom(room19);
        Hotel hotel23 = new Hotel((int) 'a');
        hotel23.displayRoomStatus();
        Room room25 = hotel23.findAvailableRoom();
        hotel1.reserveRoom(room25);
        Room room27 = hotel1.findAvailableRoom();
        Room room28 = hotel1.findAvailableRoom();
        Room room29 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room31 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        Room room33 = hotel1.findAvailableRoom();
        Hotel hotel35 = new Hotel(0);
        Room room36 = hotel35.findAvailableRoom();
        Hotel hotel38 = new Hotel((int) ' ');
        Hotel hotel40 = new Hotel((int) (short) 0);
        Room room41 = hotel40.findAvailableRoom();
        Hotel hotel43 = new Hotel(10);
        Room room44 = hotel43.findAvailableRoom();
        hotel40.reserveRoom(room44);
        hotel38.reserveRoom(room44);
        Room room47 = hotel38.findAvailableRoom();
        hotel35.reserveRoom(room47);
        Hotel hotel50 = new Hotel((int) 'a');
        hotel50.displayRoomStatus();
        Room room52 = hotel50.findAvailableRoom();
        Hotel hotel54 = new Hotel((int) (byte) -1);
        Room room55 = hotel54.findAvailableRoom();
        hotel54.displayRoomStatus();
        Hotel hotel58 = new Hotel((int) (byte) 1);
        Room room59 = hotel58.findAvailableRoom();
        hotel54.reserveRoom(room59);
        hotel54.displayRoomStatus();
        Hotel hotel63 = new Hotel((int) (byte) -1);
        Room room64 = hotel63.findAvailableRoom();
        hotel63.displayRoomStatus();
        Hotel hotel67 = new Hotel((int) (byte) 1);
        Room room68 = hotel67.findAvailableRoom();
        hotel63.reserveRoom(room68);
        hotel63.displayRoomStatus();
        Hotel hotel72 = new Hotel((int) (byte) -1);
        Room room73 = hotel72.findAvailableRoom();
        hotel72.displayRoomStatus();
        Hotel hotel76 = new Hotel((int) (byte) 1);
        Room room77 = hotel76.findAvailableRoom();
        hotel72.reserveRoom(room77);
        Hotel hotel80 = new Hotel((int) (byte) 1);
        Room room81 = hotel80.findAvailableRoom();
        hotel72.reserveRoom(room81);
        hotel63.reserveRoom(room81);
        hotel54.reserveRoom(room81);
        hotel50.reserveRoom(room81);
        hotel35.reserveRoom(room81);
        hotel1.reserveRoom(room81);
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNotNull(room6);
        org.junit.Assert.assertNull(room11);
        org.junit.Assert.assertNotNull(room15);
        org.junit.Assert.assertNotNull(room19);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room27);
        org.junit.Assert.assertNull(room28);
        org.junit.Assert.assertNull(room29);
        org.junit.Assert.assertNull(room31);
        org.junit.Assert.assertNull(room33);
        org.junit.Assert.assertNull(room36);
        org.junit.Assert.assertNull(room41);
        org.junit.Assert.assertNotNull(room44);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNotNull(room52);
        org.junit.Assert.assertNull(room55);
        org.junit.Assert.assertNotNull(room59);
        org.junit.Assert.assertNull(room64);
        org.junit.Assert.assertNotNull(room68);
        org.junit.Assert.assertNull(room73);
        org.junit.Assert.assertNotNull(room77);
        org.junit.Assert.assertNotNull(room81);
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2810");
        Hotel hotel1 = new Hotel((int) (short) 0);
        Room room2 = hotel1.findAvailableRoom();
        Room room3 = hotel1.findAvailableRoom();
        Room room4 = hotel1.findAvailableRoom();
        Room room5 = hotel1.findAvailableRoom();
        hotel1.displayRoomStatus();
        java.lang.Class<?> wildcardClass7 = hotel1.getClass();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room3);
        org.junit.Assert.assertNull(room4);
        org.junit.Assert.assertNull(room5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "HotelTest5.test2811");
        Hotel hotel1 = new Hotel(0);
        Room room2 = hotel1.findAvailableRoom();
        Hotel hotel4 = new Hotel((int) ' ');
        Hotel hotel6 = new Hotel((int) (short) 0);
        Room room7 = hotel6.findAvailableRoom();
        Hotel hotel9 = new Hotel(10);
        Room room10 = hotel9.findAvailableRoom();
        hotel6.reserveRoom(room10);
        hotel4.reserveRoom(room10);
        Room room13 = hotel4.findAvailableRoom();
        hotel1.reserveRoom(room13);
        Hotel hotel16 = new Hotel((int) 'a');
        hotel16.displayRoomStatus();
        Room room18 = hotel16.findAvailableRoom();
        Hotel hotel20 = new Hotel((int) (byte) -1);
        Room room21 = hotel20.findAvailableRoom();
        hotel20.displayRoomStatus();
        Hotel hotel24 = new Hotel((int) (byte) 1);
        Room room25 = hotel24.findAvailableRoom();
        hotel20.reserveRoom(room25);
        hotel20.displayRoomStatus();
        Hotel hotel29 = new Hotel((int) (byte) -1);
        Room room30 = hotel29.findAvailableRoom();
        hotel29.displayRoomStatus();
        Hotel hotel33 = new Hotel((int) (byte) 1);
        Room room34 = hotel33.findAvailableRoom();
        hotel29.reserveRoom(room34);
        hotel29.displayRoomStatus();
        Hotel hotel38 = new Hotel((int) (byte) -1);
        Room room39 = hotel38.findAvailableRoom();
        hotel38.displayRoomStatus();
        Hotel hotel42 = new Hotel((int) (byte) 1);
        Room room43 = hotel42.findAvailableRoom();
        hotel38.reserveRoom(room43);
        Hotel hotel46 = new Hotel((int) (byte) 1);
        Room room47 = hotel46.findAvailableRoom();
        hotel38.reserveRoom(room47);
        hotel29.reserveRoom(room47);
        hotel20.reserveRoom(room47);
        hotel16.reserveRoom(room47);
        hotel1.reserveRoom(room47);
        Room room53 = hotel1.findAvailableRoom();
        Room room54 = hotel1.findAvailableRoom();
        org.junit.Assert.assertNull(room2);
        org.junit.Assert.assertNull(room7);
        org.junit.Assert.assertNotNull(room10);
        org.junit.Assert.assertNotNull(room13);
        org.junit.Assert.assertNotNull(room18);
        org.junit.Assert.assertNull(room21);
        org.junit.Assert.assertNotNull(room25);
        org.junit.Assert.assertNull(room30);
        org.junit.Assert.assertNotNull(room34);
        org.junit.Assert.assertNull(room39);
        org.junit.Assert.assertNotNull(room43);
        org.junit.Assert.assertNotNull(room47);
        org.junit.Assert.assertNull(room53);
        org.junit.Assert.assertNull(room54);
    }
}

