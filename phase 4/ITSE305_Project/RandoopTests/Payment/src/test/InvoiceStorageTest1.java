import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class InvoiceStorageTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0501");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage0.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass21 = invoiceList20.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0502");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice10 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList6);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0503");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0504");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList27);
        invoiceStorage12.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice33 = null;
        invoiceStorage0.addInvoice(invoice33);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0505");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice10 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0506");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList21);
        java.lang.Class<?> wildcardClass23 = invoiceList21.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0507");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        Invoice invoice24 = invoiceStorage19.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList35 = invoiceStorage25.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList35);
        invoiceStorage0.addAllInvoices(invoiceList35);
        Invoice invoice38 = null;
        invoiceStorage0.addInvoice(invoice38);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList35);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0508");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        invoiceStorage10.addAllInvoices(invoiceList19);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        Invoice invoice23 = null;
        invoiceStorage22.addInvoice(invoice23);
        Invoice invoice26 = invoiceStorage22.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        Invoice invoice28 = null;
        invoiceStorage27.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage27.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage27.addInvoice(invoice31);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        Invoice invoice34 = null;
        invoiceStorage33.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage33.getAllInvoices();
        Invoice invoice37 = null;
        invoiceStorage33.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage33.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList39);
        invoiceStorage22.addAllInvoices(invoiceList39);
        java.util.List<Invoice> invoiceList42 = invoiceStorage22.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList44);
        java.lang.Class<?> wildcardClass46 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNull(invoice26);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0509");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage22.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList29);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice32 = invoiceStorage0.getInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0510");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage0.getInvoice(0);
        Invoice invoice22 = null;
        invoiceStorage0.addInvoice(invoice22);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice25 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice21);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0511");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage27.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        Invoice invoice35 = null;
        invoiceStorage34.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage34.getAllInvoices();
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        java.util.List<Invoice> invoiceList41 = invoiceStorage0.getAllInvoices();
        Invoice invoice43 = invoiceStorage0.getInvoice(0);
        java.lang.Class<?> wildcardClass44 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNull(invoice43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0512");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        Invoice invoice21 = null;
        invoiceStorage0.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList28);
        Invoice invoice31 = invoiceStorage23.getInvoice(0);
        Invoice invoice32 = null;
        invoiceStorage23.addInvoice(invoice32);
        Invoice invoice34 = null;
        invoiceStorage23.addInvoice(invoice34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage36.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage36.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList42);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage44.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        Invoice invoice49 = null;
        invoiceStorage44.addInvoice(invoice49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList52 = invoiceStorage44.getAllInvoices();
        invoiceStorage44.deleteInvoice(0);
        InvoiceStorage invoiceStorage55 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList56 = invoiceStorage55.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage55.addInvoice(invoice57);
        Invoice invoice60 = invoiceStorage55.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList61 = invoiceStorage55.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList61);
        Invoice invoice63 = null;
        invoiceStorage44.addInvoice(invoice63);
        java.util.List<Invoice> invoiceList65 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList66 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList67 = invoiceStorage44.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList67);
        invoiceStorage0.addAllInvoices(invoiceList67);
        java.lang.Class<?> wildcardClass70 = invoiceList67.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNull(invoice31);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNull(invoice60);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0513");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        java.lang.Class<?> wildcardClass30 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0514");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage0.addInvoice(invoice26);
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0515");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice16 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList14);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0516");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        Invoice invoice16 = invoiceStorage0.getInvoice(0);
        Invoice invoice17 = null;
        invoiceStorage0.addInvoice(invoice17);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice20 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice16);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0517");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0518");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice12 = invoiceStorage0.getInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0519");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage20.addInvoice(invoice25);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList35);
        invoiceStorage20.addAllInvoices(invoiceList35);
        Invoice invoice38 = null;
        invoiceStorage20.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage20.getAllInvoices();
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList42 = invoiceStorage41.getAllInvoices();
        Invoice invoice43 = null;
        invoiceStorage41.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage46.getAllInvoices();
        invoiceStorage41.addAllInvoices(invoiceList49);
        Invoice invoice52 = invoiceStorage41.getInvoice(0);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList54 = invoiceStorage53.getAllInvoices();
        Invoice invoice55 = null;
        invoiceStorage53.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage53.addInvoice(invoice58);
        InvoiceStorage invoiceStorage60 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList61 = invoiceStorage60.getAllInvoices();
        Invoice invoice62 = null;
        invoiceStorage60.addInvoice(invoice62);
        java.util.List<Invoice> invoiceList64 = invoiceStorage60.getAllInvoices();
        InvoiceStorage invoiceStorage65 = new InvoiceStorage();
        Invoice invoice66 = null;
        invoiceStorage65.addInvoice(invoice66);
        java.util.List<Invoice> invoiceList68 = invoiceStorage65.getAllInvoices();
        invoiceStorage60.addAllInvoices(invoiceList68);
        invoiceStorage53.addAllInvoices(invoiceList68);
        invoiceStorage41.addAllInvoices(invoiceList68);
        invoiceStorage20.addAllInvoices(invoiceList68);
        java.util.List<Invoice> invoiceList73 = invoiceStorage20.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList73);
        invoiceStorage0.addAllInvoices(invoiceList73);
        java.lang.Class<?> wildcardClass76 = invoiceList73.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNull(invoice52);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList73);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0520");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice39 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        Invoice invoice46 = null;
        invoiceStorage45.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage45.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList48);
        Invoice invoice51 = invoiceStorage40.getInvoice(0);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage52.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage52.addInvoice(invoice57);
        InvoiceStorage invoiceStorage59 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList60 = invoiceStorage59.getAllInvoices();
        Invoice invoice61 = null;
        invoiceStorage59.addInvoice(invoice61);
        java.util.List<Invoice> invoiceList63 = invoiceStorage59.getAllInvoices();
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        Invoice invoice65 = null;
        invoiceStorage64.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage64.getAllInvoices();
        invoiceStorage59.addAllInvoices(invoiceList67);
        invoiceStorage52.addAllInvoices(invoiceList67);
        invoiceStorage40.addAllInvoices(invoiceList67);
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList72 = invoiceStorage71.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage71.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage71.getAllInvoices();
        InvoiceStorage invoiceStorage76 = new InvoiceStorage();
        Invoice invoice77 = null;
        invoiceStorage76.addInvoice(invoice77);
        java.util.List<Invoice> invoiceList79 = invoiceStorage76.getAllInvoices();
        invoiceStorage71.addAllInvoices(invoiceList79);
        Invoice invoice82 = invoiceStorage71.getInvoice(0);
        invoiceStorage71.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList85 = invoiceStorage71.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList85);
        invoiceStorage0.addAllInvoices(invoiceList85);
        InvoiceStorage invoiceStorage88 = new InvoiceStorage();
        Invoice invoice89 = null;
        invoiceStorage88.addInvoice(invoice89);
        java.util.List<Invoice> invoiceList91 = invoiceStorage88.getAllInvoices();
        Invoice invoice92 = null;
        invoiceStorage88.addInvoice(invoice92);
        Invoice invoice95 = invoiceStorage88.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList96 = invoiceStorage88.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList96);
        Invoice invoice99 = invoiceStorage0.getInvoice((int) (byte) 0);
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNull(invoice51);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList63);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNotNull(invoiceList79);
        org.junit.Assert.assertNull(invoice82);
        org.junit.Assert.assertNotNull(invoiceList85);
        org.junit.Assert.assertNotNull(invoiceList91);
        org.junit.Assert.assertNull(invoice95);
        org.junit.Assert.assertNotNull(invoiceList96);
        org.junit.Assert.assertNull(invoice99);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0521");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage6.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        Invoice invoice15 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList18 = invoiceStorage17.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage17.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage24.getAllInvoices();
        Invoice invoice33 = invoiceStorage24.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList34 = invoiceStorage24.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList34);
        invoiceStorage0.addAllInvoices(invoiceList34);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice38 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNull(invoice33);
        org.junit.Assert.assertNotNull(invoiceList34);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0522");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage5.addInvoice(invoice9);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage11.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage11.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList17);
        invoiceStorage0.addAllInvoices(invoiceList17);
        java.util.List<Invoice> invoiceList20 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass21 = invoiceStorage0.getClass();
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0523");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNull(invoice8);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0524");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice27 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0525");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList29 = invoiceStorage28.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage28.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        Invoice invoice34 = null;
        invoiceStorage33.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage33.getAllInvoices();
        invoiceStorage28.addAllInvoices(invoiceList36);
        invoiceStorage27.addAllInvoices(invoiceList36);
        Invoice invoice39 = null;
        invoiceStorage27.addInvoice(invoice39);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage41.addInvoice(invoice44);
        Invoice invoice46 = null;
        invoiceStorage41.addInvoice(invoice46);
        Invoice invoice48 = null;
        invoiceStorage41.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList51 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList52 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList53 = invoiceStorage41.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList53);
        invoiceStorage0.addAllInvoices(invoiceList53);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice57 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList53);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0526");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage19.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage19.getAllInvoices();
        invoiceStorage19.deleteInvoice(0);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        Invoice invoice35 = invoiceStorage30.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList36 = invoiceStorage30.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList36);
        Invoice invoice38 = null;
        invoiceStorage19.addInvoice(invoice38);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        Invoice invoice41 = null;
        invoiceStorage40.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage40.getAllInvoices();
        Invoice invoice44 = null;
        invoiceStorage40.addInvoice(invoice44);
        Invoice invoice46 = null;
        invoiceStorage40.addInvoice(invoice46);
        Invoice invoice49 = invoiceStorage40.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList51 = invoiceStorage50.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage50.addInvoice(invoice52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage50.getAllInvoices();
        Invoice invoice55 = null;
        invoiceStorage50.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage50.getAllInvoices();
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        InvoiceStorage invoiceStorage59 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList60 = invoiceStorage59.getAllInvoices();
        Invoice invoice61 = null;
        invoiceStorage59.addInvoice(invoice61);
        java.util.List<Invoice> invoiceList63 = invoiceStorage59.getAllInvoices();
        invoiceStorage58.addAllInvoices(invoiceList63);
        Invoice invoice66 = invoiceStorage58.getInvoice(0);
        Invoice invoice67 = null;
        invoiceStorage58.addInvoice(invoice67);
        Invoice invoice69 = null;
        invoiceStorage58.addInvoice(invoice69);
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList72 = invoiceStorage71.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage71.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage71.getAllInvoices();
        InvoiceStorage invoiceStorage76 = new InvoiceStorage();
        Invoice invoice77 = null;
        invoiceStorage76.addInvoice(invoice77);
        java.util.List<Invoice> invoiceList79 = invoiceStorage76.getAllInvoices();
        invoiceStorage71.addAllInvoices(invoiceList79);
        java.util.List<Invoice> invoiceList81 = invoiceStorage71.getAllInvoices();
        invoiceStorage58.addAllInvoices(invoiceList81);
        invoiceStorage50.addAllInvoices(invoiceList81);
        InvoiceStorage invoiceStorage84 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList85 = invoiceStorage84.getAllInvoices();
        Invoice invoice86 = null;
        invoiceStorage84.addInvoice(invoice86);
        java.util.List<Invoice> invoiceList88 = invoiceStorage84.getAllInvoices();
        InvoiceStorage invoiceStorage89 = new InvoiceStorage();
        Invoice invoice90 = null;
        invoiceStorage89.addInvoice(invoice90);
        java.util.List<Invoice> invoiceList92 = invoiceStorage89.getAllInvoices();
        invoiceStorage84.addAllInvoices(invoiceList92);
        java.util.List<Invoice> invoiceList94 = invoiceStorage84.getAllInvoices();
        invoiceStorage50.addAllInvoices(invoiceList94);
        invoiceStorage40.addAllInvoices(invoiceList94);
        invoiceStorage19.addAllInvoices(invoiceList94);
        invoiceStorage0.addAllInvoices(invoiceList94);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNull(invoice35);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNull(invoice49);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList63);
        org.junit.Assert.assertNull(invoice66);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNotNull(invoiceList79);
        org.junit.Assert.assertNotNull(invoiceList81);
        org.junit.Assert.assertNotNull(invoiceList85);
        org.junit.Assert.assertNotNull(invoiceList88);
        org.junit.Assert.assertNotNull(invoiceList92);
        org.junit.Assert.assertNotNull(invoiceList94);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0527");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = null;
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.addAllInvoices(invoiceList10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0528");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        Invoice invoice20 = invoiceStorage13.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList21 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList21);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNull(invoice20);
        org.junit.Assert.assertNotNull(invoiceList21);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0529");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage8.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage8.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage8.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage8.getAllInvoices();
        invoiceStorage8.deleteInvoice(0);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        Invoice invoice24 = invoiceStorage19.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList25 = invoiceStorage19.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList25);
        Invoice invoice27 = null;
        invoiceStorage8.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage29.addInvoice(invoice34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage41.getAllInvoices();
        invoiceStorage36.addAllInvoices(invoiceList44);
        invoiceStorage29.addAllInvoices(invoiceList44);
        invoiceStorage8.addAllInvoices(invoiceList44);
        invoiceStorage0.addAllInvoices(invoiceList44);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList44);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0530");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList13);
        Invoice invoice16 = invoiceStorage8.getInvoice(0);
        Invoice invoice17 = null;
        invoiceStorage8.addInvoice(invoice17);
        Invoice invoice19 = null;
        invoiceStorage8.addInvoice(invoice19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        Invoice invoice27 = null;
        invoiceStorage26.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage26.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage21.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList31);
        invoiceStorage0.addAllInvoices(invoiceList31);
        java.lang.Class<?> wildcardClass34 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0531");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice13 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0532");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice21 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0533");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice12 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0534");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass14 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0535");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage30.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage30.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList38 = invoiceStorage30.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        java.util.List<Invoice> invoiceList41 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass42 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0536");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        invoiceStorage0.deleteInvoice(0);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList17);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0537");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        invoiceStorage0.deleteInvoice(0);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage25.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList34);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice37 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0538");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList23);
        invoiceStorage0.addAllInvoices(invoiceList23);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice27 = invoiceStorage0.getInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0539");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice11 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0540");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        Invoice invoice27 = null;
        invoiceStorage0.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        invoiceStorage30.addAllInvoices(invoiceList38);
        invoiceStorage29.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        Invoice invoice42 = null;
        invoiceStorage0.addInvoice(invoice42);
        java.lang.Class<?> wildcardClass44 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0541");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage30.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage30.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList38 = invoiceStorage30.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        Invoice invoice42 = invoiceStorage0.getInvoice(1);
        java.util.List<Invoice> invoiceList43 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass44 = invoiceList43.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0542");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage30.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage30.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList38 = invoiceStorage30.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        Invoice invoice42 = invoiceStorage0.getInvoice(1);
        java.util.List<Invoice> invoiceList43 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice45 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList43);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0543");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.lang.Class<?> wildcardClass12 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0544");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.lang.Class<?> wildcardClass27 = invoiceList25.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0545");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice7 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0546");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        Invoice invoice5 = null;
        invoiceStorage4.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage4.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage4.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage4.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        invoiceStorage4.addAllInvoices(invoiceList23);
        invoiceStorage0.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass28 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0547");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        Invoice invoice9 = null;
        invoiceStorage8.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage8.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage8.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage8.addInvoice(invoice14);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList27);
        invoiceStorage8.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage31.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage31.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage31.addInvoice(invoice39);
        invoiceStorage31.deleteInvoice(0);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage43.getAllInvoices();
        InvoiceStorage invoiceStorage48 = new InvoiceStorage();
        Invoice invoice49 = null;
        invoiceStorage48.addInvoice(invoice49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage48.getAllInvoices();
        invoiceStorage43.addAllInvoices(invoiceList51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage43.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList53);
        InvoiceStorage invoiceStorage55 = new InvoiceStorage();
        Invoice invoice56 = null;
        invoiceStorage55.addInvoice(invoice56);
        java.util.List<Invoice> invoiceList58 = invoiceStorage55.getAllInvoices();
        java.util.List<Invoice> invoiceList59 = invoiceStorage55.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage55.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage55.getAllInvoices();
        InvoiceStorage invoiceStorage63 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList64 = invoiceStorage63.getAllInvoices();
        Invoice invoice65 = null;
        invoiceStorage63.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage63.getAllInvoices();
        InvoiceStorage invoiceStorage68 = new InvoiceStorage();
        Invoice invoice69 = null;
        invoiceStorage68.addInvoice(invoice69);
        java.util.List<Invoice> invoiceList71 = invoiceStorage68.getAllInvoices();
        invoiceStorage63.addAllInvoices(invoiceList71);
        invoiceStorage55.addAllInvoices(invoiceList71);
        invoiceStorage31.addAllInvoices(invoiceList71);
        invoiceStorage0.addAllInvoices(invoiceList71);
        java.lang.Class<?> wildcardClass76 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList71);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0548");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice6 = invoiceStorage0.getInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0549");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage11.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        Invoice invoice22 = null;
        invoiceStorage21.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage21.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList24);
        invoiceStorage11.addAllInvoices(invoiceList24);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage27.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        Invoice invoice35 = null;
        invoiceStorage34.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage34.getAllInvoices();
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList38);
        invoiceStorage11.addAllInvoices(invoiceList38);
        Invoice invoice41 = null;
        invoiceStorage11.addInvoice(invoice41);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage43.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage43.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage43.getAllInvoices();
        Invoice invoice52 = invoiceStorage43.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList53 = invoiceStorage43.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList53);
        invoiceStorage0.addAllInvoices(invoiceList53);
        java.util.List<Invoice> invoiceList56 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice58 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNull(invoice15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNull(invoice52);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0550");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        invoiceStorage0.deleteInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        Invoice invoice15 = null;
        invoiceStorage14.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage14.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage14.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage14.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList22 = invoiceStorage14.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage14.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice26 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0551");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        Invoice invoice21 = null;
        invoiceStorage20.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage20.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList23);
        Invoice invoice26 = invoiceStorage15.getInvoice(0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList29 = invoiceStorage28.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage28.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        Invoice invoice40 = null;
        invoiceStorage39.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage39.getAllInvoices();
        invoiceStorage34.addAllInvoices(invoiceList42);
        Invoice invoice45 = invoiceStorage34.getInvoice(0);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList47 = invoiceStorage46.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage46.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage46.addInvoice(invoice51);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList54 = invoiceStorage53.getAllInvoices();
        Invoice invoice55 = null;
        invoiceStorage53.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        Invoice invoice59 = null;
        invoiceStorage58.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage58.getAllInvoices();
        invoiceStorage53.addAllInvoices(invoiceList61);
        invoiceStorage46.addAllInvoices(invoiceList61);
        invoiceStorage34.addAllInvoices(invoiceList61);
        invoiceStorage27.addAllInvoices(invoiceList61);
        invoiceStorage27.deleteInvoice(0);
        java.util.List<Invoice> invoiceList68 = invoiceStorage27.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList68);
        invoiceStorage0.addAllInvoices(invoiceList68);
        java.lang.Class<?> wildcardClass71 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNull(invoice26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0552");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice10 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0553");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage15.addInvoice(invoice20);
        Invoice invoice22 = null;
        invoiceStorage15.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage15.getAllInvoices();
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage25.addInvoice(invoice33);
        Invoice invoice35 = null;
        invoiceStorage25.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage25.getAllInvoices();
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage38.addInvoice(invoice42);
        Invoice invoice45 = invoiceStorage38.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList46 = invoiceStorage38.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList46);
        invoiceStorage15.addAllInvoices(invoiceList46);
        java.util.List<Invoice> invoiceList49 = invoiceStorage15.getAllInvoices();
        java.util.List<Invoice> invoiceList50 = invoiceStorage15.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList50);
        java.lang.Class<?> wildcardClass52 = invoiceList50.getClass();
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0554");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice(0);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice13 = invoiceStorage0.getInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0555");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        Invoice invoice21 = null;
        invoiceStorage0.addInvoice(invoice21);
        java.lang.Class<?> wildcardClass23 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0556");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        Invoice invoice12 = null;
        invoiceStorage5.addInvoice(invoice12);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList15 = invoiceStorage14.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage14.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage14.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList20 = invoiceStorage14.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList24 = invoiceStorage23.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage23.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage23.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage23.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage23.addInvoice(invoice31);
        Invoice invoice33 = null;
        invoiceStorage23.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage23.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage36.addInvoice(invoice40);
        Invoice invoice43 = invoiceStorage36.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList44 = invoiceStorage36.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList44);
        invoiceStorage0.addAllInvoices(invoiceList44);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice48 = invoiceStorage0.getInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNull(invoice43);
        org.junit.Assert.assertNotNull(invoiceList44);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0557");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage11.addInvoice(invoice14);
        Invoice invoice16 = null;
        invoiceStorage11.addInvoice(invoice16);
        Invoice invoice18 = null;
        invoiceStorage11.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage11.getAllInvoices();
        invoiceStorage11.deleteInvoice(1);
        java.util.List<Invoice> invoiceList23 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        java.lang.Class<?> wildcardClass25 = invoiceList23.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0558");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        Invoice invoice27 = null;
        invoiceStorage0.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        invoiceStorage30.addAllInvoices(invoiceList38);
        invoiceStorage29.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        Invoice invoice42 = null;
        invoiceStorage0.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage0.addInvoice(invoice44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList47 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 9");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList47);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0559");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice26 = invoiceStorage0.getInvoice((int) (byte) 0);
        Invoice invoice27 = null;
        invoiceStorage0.addInvoice(invoice27);
        java.lang.Class<?> wildcardClass29 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNull(invoice26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0560");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        Invoice invoice10 = invoiceStorage6.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage11.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList19 = invoiceStorage11.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList19);
        invoiceStorage0.addAllInvoices(invoiceList19);
        java.lang.Class<?> wildcardClass22 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0561");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        Invoice invoice13 = null;
        invoiceStorage0.addInvoice(invoice13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList20);
        Invoice invoice23 = invoiceStorage15.getInvoice(0);
        Invoice invoice24 = null;
        invoiceStorage15.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage15.addInvoice(invoice26);
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        Invoice invoice29 = null;
        invoiceStorage28.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage28.getAllInvoices();
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList32);
        invoiceStorage15.deleteInvoice(0);
        invoiceStorage15.deleteInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList40 = invoiceStorage39.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage39.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage39.getAllInvoices();
        invoiceStorage38.addAllInvoices(invoiceList43);
        Invoice invoice46 = invoiceStorage38.getInvoice(0);
        Invoice invoice47 = null;
        invoiceStorage38.addInvoice(invoice47);
        Invoice invoice49 = null;
        invoiceStorage38.addInvoice(invoice49);
        InvoiceStorage invoiceStorage51 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList52 = invoiceStorage51.getAllInvoices();
        Invoice invoice53 = null;
        invoiceStorage51.addInvoice(invoice53);
        java.util.List<Invoice> invoiceList55 = invoiceStorage51.getAllInvoices();
        InvoiceStorage invoiceStorage56 = new InvoiceStorage();
        Invoice invoice57 = null;
        invoiceStorage56.addInvoice(invoice57);
        java.util.List<Invoice> invoiceList59 = invoiceStorage56.getAllInvoices();
        invoiceStorage51.addAllInvoices(invoiceList59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage51.getAllInvoices();
        invoiceStorage38.addAllInvoices(invoiceList61);
        invoiceStorage15.addAllInvoices(invoiceList61);
        invoiceStorage0.addAllInvoices(invoiceList61);
        java.lang.Class<?> wildcardClass65 = invoiceList61.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice23);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNull(invoice46);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList55);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0562");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        Invoice invoice17 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList19 = invoiceStorage18.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage18.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage18.getAllInvoices();
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList26);
        Invoice invoice29 = invoiceStorage18.getInvoice(0);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        invoiceStorage30.addAllInvoices(invoiceList35);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList38 = invoiceStorage37.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage37.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        InvoiceStorage invoiceStorage42 = new InvoiceStorage();
        Invoice invoice43 = null;
        invoiceStorage42.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage42.getAllInvoices();
        invoiceStorage37.addAllInvoices(invoiceList45);
        Invoice invoice48 = invoiceStorage37.getInvoice(0);
        InvoiceStorage invoiceStorage49 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList50 = invoiceStorage49.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage49.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage49.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage49.addInvoice(invoice54);
        InvoiceStorage invoiceStorage56 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList57 = invoiceStorage56.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage56.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage56.getAllInvoices();
        InvoiceStorage invoiceStorage61 = new InvoiceStorage();
        Invoice invoice62 = null;
        invoiceStorage61.addInvoice(invoice62);
        java.util.List<Invoice> invoiceList64 = invoiceStorage61.getAllInvoices();
        invoiceStorage56.addAllInvoices(invoiceList64);
        invoiceStorage49.addAllInvoices(invoiceList64);
        invoiceStorage37.addAllInvoices(invoiceList64);
        invoiceStorage30.addAllInvoices(invoiceList64);
        invoiceStorage30.deleteInvoice(0);
        java.util.List<Invoice> invoiceList71 = invoiceStorage30.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList71);
        invoiceStorage0.addAllInvoices(invoiceList71);
        java.lang.Class<?> wildcardClass74 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNull(invoice48);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList71);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0563");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage21.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList30 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList31 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList32 = invoiceStorage21.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList32);
        Invoice invoice34 = null;
        invoiceStorage0.addInvoice(invoice34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage36.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage36.getAllInvoices();
        Invoice invoice45 = invoiceStorage36.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        Invoice invoice50 = invoiceStorage46.getInvoice((int) (short) 0);
        Invoice invoice51 = null;
        invoiceStorage46.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage46.getAllInvoices();
        java.util.List<Invoice> invoiceList54 = invoiceStorage46.getAllInvoices();
        invoiceStorage36.addAllInvoices(invoiceList54);
        invoiceStorage0.addAllInvoices(invoiceList54);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNull(invoice50);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList54);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0564");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        Invoice invoice10 = invoiceStorage5.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage11.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList19 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage23.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage23.getAllInvoices();
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        Invoice invoice32 = null;
        invoiceStorage31.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage31.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage31.addInvoice(invoice35);
        Invoice invoice37 = null;
        invoiceStorage31.addInvoice(invoice37);
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList40 = invoiceStorage39.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage39.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage39.getAllInvoices();
        Invoice invoice44 = null;
        invoiceStorage39.addInvoice(invoice44);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage46.getAllInvoices();
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        invoiceStorage39.addAllInvoices(invoiceList50);
        invoiceStorage31.addAllInvoices(invoiceList50);
        invoiceStorage23.addAllInvoices(invoiceList50);
        invoiceStorage5.addAllInvoices(invoiceList50);
        invoiceStorage0.addAllInvoices(invoiceList50);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNull(invoice10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList50);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0565");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        Invoice invoice15 = null;
        invoiceStorage0.addInvoice(invoice15);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice18 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0566");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList27);
        invoiceStorage12.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        Invoice invoice42 = invoiceStorage31.getInvoice(0);
        invoiceStorage31.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList45 = invoiceStorage31.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList45);
        Invoice invoice47 = null;
        invoiceStorage0.addInvoice(invoice47);
        Invoice invoice49 = null;
        invoiceStorage0.addInvoice(invoice49);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice52 = invoiceStorage0.getInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList45);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0567");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        Invoice invoice12 = null;
        invoiceStorage9.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage16.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage16.getAllInvoices();
        invoiceStorage9.addAllInvoices(invoiceList25);
        invoiceStorage0.addAllInvoices(invoiceList25);
        invoiceStorage0.deleteInvoice((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList25);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0568");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        Invoice invoice23 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice28 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice23);
        org.junit.Assert.assertNotNull(invoiceList26);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0569");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage27.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        Invoice invoice35 = null;
        invoiceStorage34.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage34.getAllInvoices();
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList38);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0570");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0571");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList26);
        Invoice invoice29 = invoiceStorage21.getInvoice(0);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage30.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage30.getAllInvoices();
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage38.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage38.addInvoice(invoice44);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList47 = invoiceStorage46.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage46.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage46.addInvoice(invoice51);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        invoiceStorage46.addAllInvoices(invoiceList57);
        invoiceStorage38.addAllInvoices(invoiceList57);
        invoiceStorage30.addAllInvoices(invoiceList57);
        invoiceStorage21.addAllInvoices(invoiceList57);
        Invoice invoice62 = null;
        invoiceStorage21.addInvoice(invoice62);
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList65 = invoiceStorage64.getAllInvoices();
        Invoice invoice66 = null;
        invoiceStorage64.addInvoice(invoice66);
        Invoice invoice69 = invoiceStorage64.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList70 = invoiceStorage64.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList70);
        invoiceStorage0.addAllInvoices(invoiceList70);
        Invoice invoice74 = invoiceStorage0.getInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice76 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice29);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNull(invoice69);
        org.junit.Assert.assertNotNull(invoiceList70);
        org.junit.Assert.assertNull(invoice74);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0572");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        Invoice invoice19 = null;
        invoiceStorage13.addInvoice(invoice19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage21.addInvoice(invoice26);
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        Invoice invoice29 = null;
        invoiceStorage28.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage28.getAllInvoices();
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList32);
        invoiceStorage13.addAllInvoices(invoiceList32);
        invoiceStorage9.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        Invoice invoice40 = null;
        invoiceStorage37.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage37.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList42);
        java.lang.Class<?> wildcardClass44 = invoiceList42.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0573");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage2 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList3 = invoiceStorage2.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage2.addInvoice(invoice4);
        java.util.List<Invoice> invoiceList6 = invoiceStorage2.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage2.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage2.addAllInvoices(invoiceList13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage2.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage16.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage16.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage29.addInvoice(invoice33);
        Invoice invoice36 = invoiceStorage29.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList37 = invoiceStorage29.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList37);
        invoiceStorage2.addAllInvoices(invoiceList37);
        invoiceStorage0.addAllInvoices(invoiceList37);
        java.lang.Class<?> wildcardClass41 = invoiceList37.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice36);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0574");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage8.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage8.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage8.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage8.getAllInvoices();
        invoiceStorage8.deleteInvoice(0);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        Invoice invoice24 = invoiceStorage19.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList25 = invoiceStorage19.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList25);
        Invoice invoice27 = null;
        invoiceStorage8.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage29.addInvoice(invoice34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage41.getAllInvoices();
        invoiceStorage36.addAllInvoices(invoiceList44);
        invoiceStorage29.addAllInvoices(invoiceList44);
        invoiceStorage8.addAllInvoices(invoiceList44);
        invoiceStorage0.addAllInvoices(invoiceList44);
        Invoice invoice49 = null;
        invoiceStorage0.addInvoice(invoice49);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice52 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList44);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0575");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass28 = invoiceList27.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0576");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        invoiceStorage0.deleteInvoice(1);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList14);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0577");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage10.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage20.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage20.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage20.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage20.getAllInvoices();
        java.util.List<Invoice> invoiceList30 = invoiceStorage20.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList30);
        invoiceStorage10.addAllInvoices(invoiceList30);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        Invoice invoice34 = null;
        invoiceStorage33.addInvoice(invoice34);
        Invoice invoice36 = null;
        invoiceStorage33.addInvoice(invoice36);
        Invoice invoice38 = null;
        invoiceStorage33.addInvoice(invoice38);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage40.addInvoice(invoice45);
        Invoice invoice47 = null;
        invoiceStorage40.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage40.getAllInvoices();
        invoiceStorage33.addAllInvoices(invoiceList49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage33.getAllInvoices();
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        Invoice invoice57 = invoiceStorage52.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList59 = invoiceStorage58.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage58.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage58.getAllInvoices();
        Invoice invoice63 = null;
        invoiceStorage58.addInvoice(invoice63);
        java.util.List<Invoice> invoiceList65 = invoiceStorage58.getAllInvoices();
        java.util.List<Invoice> invoiceList66 = invoiceStorage58.getAllInvoices();
        java.util.List<Invoice> invoiceList67 = invoiceStorage58.getAllInvoices();
        java.util.List<Invoice> invoiceList68 = invoiceStorage58.getAllInvoices();
        invoiceStorage52.addAllInvoices(invoiceList68);
        invoiceStorage33.addAllInvoices(invoiceList68);
        invoiceStorage10.addAllInvoices(invoiceList68);
        invoiceStorage0.addAllInvoices(invoiceList68);
        InvoiceStorage invoiceStorage73 = new InvoiceStorage();
        Invoice invoice74 = null;
        invoiceStorage73.addInvoice(invoice74);
        java.util.List<Invoice> invoiceList76 = invoiceStorage73.getAllInvoices();
        Invoice invoice77 = null;
        invoiceStorage73.addInvoice(invoice77);
        InvoiceStorage invoiceStorage79 = new InvoiceStorage();
        Invoice invoice80 = null;
        invoiceStorage79.addInvoice(invoice80);
        java.util.List<Invoice> invoiceList82 = invoiceStorage79.getAllInvoices();
        Invoice invoice83 = null;
        invoiceStorage79.addInvoice(invoice83);
        java.util.List<Invoice> invoiceList85 = invoiceStorage79.getAllInvoices();
        invoiceStorage73.addAllInvoices(invoiceList85);
        java.util.List<Invoice> invoiceList87 = invoiceStorage73.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList87);
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNull(invoice57);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList76);
        org.junit.Assert.assertNotNull(invoiceList82);
        org.junit.Assert.assertNotNull(invoiceList85);
        org.junit.Assert.assertNotNull(invoiceList87);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0578");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        Invoice invoice8 = null;
        invoiceStorage7.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage7.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList15 = invoiceStorage14.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage14.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage14.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage14.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage14.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage14.addInvoice(invoice22);
        Invoice invoice24 = null;
        invoiceStorage14.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage14.getAllInvoices();
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        Invoice invoice28 = null;
        invoiceStorage27.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage27.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage27.addInvoice(invoice31);
        Invoice invoice34 = invoiceStorage27.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList35 = invoiceStorage27.getAllInvoices();
        invoiceStorage14.addAllInvoices(invoiceList35);
        invoiceStorage0.addAllInvoices(invoiceList35);
        Invoice invoice38 = null;
        invoiceStorage0.addInvoice(invoice38);
        java.lang.Class<?> wildcardClass40 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNull(invoice34);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0579");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass12 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0580");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(1);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage12.getAllInvoices();
        Invoice invoice21 = invoiceStorage12.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        invoiceStorage22.addAllInvoices(invoiceList33);
        invoiceStorage12.addAllInvoices(invoiceList33);
        invoiceStorage0.addAllInvoices(invoiceList33);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList38 = invoiceStorage37.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage37.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage37.addInvoice(invoice42);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage44.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        InvoiceStorage invoiceStorage49 = new InvoiceStorage();
        Invoice invoice50 = null;
        invoiceStorage49.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage49.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList52);
        invoiceStorage37.addAllInvoices(invoiceList52);
        Invoice invoice55 = null;
        invoiceStorage37.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage37.getAllInvoices();
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList59 = invoiceStorage58.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage58.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage58.getAllInvoices();
        InvoiceStorage invoiceStorage63 = new InvoiceStorage();
        Invoice invoice64 = null;
        invoiceStorage63.addInvoice(invoice64);
        java.util.List<Invoice> invoiceList66 = invoiceStorage63.getAllInvoices();
        invoiceStorage58.addAllInvoices(invoiceList66);
        Invoice invoice69 = invoiceStorage58.getInvoice(0);
        InvoiceStorage invoiceStorage70 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList71 = invoiceStorage70.getAllInvoices();
        Invoice invoice72 = null;
        invoiceStorage70.addInvoice(invoice72);
        java.util.List<Invoice> invoiceList74 = invoiceStorage70.getAllInvoices();
        Invoice invoice75 = null;
        invoiceStorage70.addInvoice(invoice75);
        InvoiceStorage invoiceStorage77 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList78 = invoiceStorage77.getAllInvoices();
        Invoice invoice79 = null;
        invoiceStorage77.addInvoice(invoice79);
        java.util.List<Invoice> invoiceList81 = invoiceStorage77.getAllInvoices();
        InvoiceStorage invoiceStorage82 = new InvoiceStorage();
        Invoice invoice83 = null;
        invoiceStorage82.addInvoice(invoice83);
        java.util.List<Invoice> invoiceList85 = invoiceStorage82.getAllInvoices();
        invoiceStorage77.addAllInvoices(invoiceList85);
        invoiceStorage70.addAllInvoices(invoiceList85);
        invoiceStorage58.addAllInvoices(invoiceList85);
        invoiceStorage37.addAllInvoices(invoiceList85);
        java.util.List<Invoice> invoiceList90 = invoiceStorage37.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList90);
        java.lang.Class<?> wildcardClass92 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNull(invoice69);
        org.junit.Assert.assertNotNull(invoiceList71);
        org.junit.Assert.assertNotNull(invoiceList74);
        org.junit.Assert.assertNotNull(invoiceList78);
        org.junit.Assert.assertNotNull(invoiceList81);
        org.junit.Assert.assertNotNull(invoiceList85);
        org.junit.Assert.assertNotNull(invoiceList90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0581");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        invoiceStorage14.addAllInvoices(invoiceList19);
        Invoice invoice22 = invoiceStorage14.getInvoice(0);
        Invoice invoice23 = null;
        invoiceStorage14.addInvoice(invoice23);
        Invoice invoice25 = null;
        invoiceStorage14.addInvoice(invoice25);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage27.getAllInvoices();
        invoiceStorage14.addAllInvoices(invoiceList37);
        invoiceStorage6.addAllInvoices(invoiceList37);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        Invoice invoice46 = null;
        invoiceStorage45.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage45.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage40.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList50);
        invoiceStorage0.addAllInvoices(invoiceList50);
        java.lang.Class<?> wildcardClass53 = invoiceList50.getClass();
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNull(invoice22);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0582");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        Invoice invoice5 = null;
        invoiceStorage4.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage4.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage4.addInvoice(invoice8);
        Invoice invoice11 = invoiceStorage4.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList12 = invoiceStorage4.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice19 = invoiceStorage0.getInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0583");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        Invoice invoice12 = null;
        invoiceStorage5.addInvoice(invoice12);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList15 = invoiceStorage14.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage14.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage14.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList20 = invoiceStorage14.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList24 = invoiceStorage23.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage23.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage23.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage23.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage23.addInvoice(invoice31);
        Invoice invoice33 = null;
        invoiceStorage23.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage23.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage36.addInvoice(invoice40);
        Invoice invoice43 = invoiceStorage36.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList44 = invoiceStorage36.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList44);
        invoiceStorage0.addAllInvoices(invoiceList44);
        Invoice invoice47 = null;
        invoiceStorage0.addInvoice(invoice47);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice50 = invoiceStorage0.getInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNull(invoice43);
        org.junit.Assert.assertNotNull(invoiceList44);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0584");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage0.getInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice16 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNull(invoice14);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0585");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList40);
        invoiceStorage24.addAllInvoices(invoiceList40);
        invoiceStorage0.addAllInvoices(invoiceList40);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage46.getAllInvoices();
        Invoice invoice50 = null;
        invoiceStorage46.addInvoice(invoice50);
        Invoice invoice53 = invoiceStorage46.getInvoice((int) (byte) 1);
        invoiceStorage46.deleteInvoice((int) (short) 0);
        Invoice invoice56 = null;
        invoiceStorage46.addInvoice(invoice56);
        java.util.List<Invoice> invoiceList58 = invoiceStorage46.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList58);
        Invoice invoice61 = invoiceStorage0.getInvoice(1);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice63 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNull(invoice53);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNull(invoice61);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0586");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0587");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        Invoice invoice30 = null;
        invoiceStorage0.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice34 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0588");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        Invoice invoice12 = null;
        invoiceStorage9.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage16.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage16.getAllInvoices();
        invoiceStorage9.addAllInvoices(invoiceList25);
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.lang.Class<?> wildcardClass28 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0589");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList18 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList19 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage10.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList23 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList29);
        Invoice invoice31 = null;
        invoiceStorage24.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage24.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList33);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList33);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0590");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage10.getAllInvoices();
        invoiceStorage10.deleteInvoice(0);
        java.util.List<Invoice> invoiceList26 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList26);
        invoiceStorage0.deleteInvoice((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice31 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0591");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass10 = invoiceList9.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0592");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass8 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0593");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice39 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage40.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage40.getAllInvoices();
        Invoice invoice49 = invoiceStorage40.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList50 = invoiceStorage40.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList50);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage52.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage52.addInvoice(invoice57);
        Invoice invoice59 = null;
        invoiceStorage52.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage52.getAllInvoices();
        invoiceStorage52.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        Invoice invoice65 = null;
        invoiceStorage64.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage64.getAllInvoices();
        java.util.List<Invoice> invoiceList68 = invoiceStorage64.getAllInvoices();
        invoiceStorage52.addAllInvoices(invoiceList68);
        InvoiceStorage invoiceStorage70 = new InvoiceStorage();
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList72 = invoiceStorage71.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage71.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage71.getAllInvoices();
        invoiceStorage70.addAllInvoices(invoiceList75);
        invoiceStorage52.addAllInvoices(invoiceList75);
        invoiceStorage0.addAllInvoices(invoiceList75);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNull(invoice49);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0594");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage8.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList16);
        Invoice invoice19 = invoiceStorage8.getInvoice(0);
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage20.addInvoice(invoice25);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList35);
        invoiceStorage20.addAllInvoices(invoiceList35);
        invoiceStorage8.addAllInvoices(invoiceList35);
        invoiceStorage0.addAllInvoices(invoiceList35);
        Invoice invoice41 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice42 = null;
        invoiceStorage0.addInvoice(invoice42);
        Invoice invoice45 = invoiceStorage0.getInvoice((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNull(invoice41);
        org.junit.Assert.assertNull(invoice45);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0595");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0596");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage0.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass22 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0597");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage0.getInvoice(0);
        Invoice invoice22 = null;
        invoiceStorage0.addInvoice(invoice22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass27 = invoiceList26.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0598");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass6 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0599");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage18.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage18.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage18.getAllInvoices();
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        Invoice invoice27 = null;
        invoiceStorage26.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage26.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage26.addInvoice(invoice30);
        Invoice invoice32 = null;
        invoiceStorage26.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage34.addInvoice(invoice39);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        invoiceStorage34.addAllInvoices(invoiceList45);
        invoiceStorage26.addAllInvoices(invoiceList45);
        invoiceStorage18.addAllInvoices(invoiceList45);
        invoiceStorage0.addAllInvoices(invoiceList45);
        Invoice invoice50 = null;
        invoiceStorage0.addInvoice(invoice50);
        java.lang.Class<?> wildcardClass52 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0600");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice(0);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice14 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0601");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        Invoice invoice12 = null;
        invoiceStorage5.addInvoice(invoice12);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList15 = invoiceStorage14.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage14.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage14.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList20 = invoiceStorage14.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList24 = invoiceStorage23.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage23.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage23.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage23.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage23.addInvoice(invoice31);
        invoiceStorage23.deleteInvoice(0);
        Invoice invoice35 = null;
        invoiceStorage23.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage23.getAllInvoices();
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        java.util.List<Invoice> invoiceList42 = invoiceStorage38.getAllInvoices();
        java.util.List<Invoice> invoiceList43 = invoiceStorage38.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList43);
        invoiceStorage0.addAllInvoices(invoiceList43);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList43);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0602");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        Invoice invoice21 = null;
        invoiceStorage20.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage20.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage20.addInvoice(invoice24);
        Invoice invoice27 = invoiceStorage20.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList29 = invoiceStorage28.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage28.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage28.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage28.getAllInvoices();
        java.util.List<Invoice> invoiceList36 = invoiceStorage28.getAllInvoices();
        invoiceStorage28.deleteInvoice(0);
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList40 = invoiceStorage39.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage39.addInvoice(invoice41);
        Invoice invoice44 = invoiceStorage39.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList45 = invoiceStorage39.getAllInvoices();
        invoiceStorage28.addAllInvoices(invoiceList45);
        Invoice invoice47 = null;
        invoiceStorage28.addInvoice(invoice47);
        InvoiceStorage invoiceStorage49 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList50 = invoiceStorage49.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage49.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage49.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage49.addInvoice(invoice54);
        InvoiceStorage invoiceStorage56 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList57 = invoiceStorage56.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage56.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage56.getAllInvoices();
        InvoiceStorage invoiceStorage61 = new InvoiceStorage();
        Invoice invoice62 = null;
        invoiceStorage61.addInvoice(invoice62);
        java.util.List<Invoice> invoiceList64 = invoiceStorage61.getAllInvoices();
        invoiceStorage56.addAllInvoices(invoiceList64);
        invoiceStorage49.addAllInvoices(invoiceList64);
        invoiceStorage28.addAllInvoices(invoiceList64);
        invoiceStorage20.addAllInvoices(invoiceList64);
        invoiceStorage0.addAllInvoices(invoiceList64);
        java.util.List<Invoice> invoiceList70 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice72 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNull(invoice27);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNull(invoice44);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList70);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0603");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage0.getInvoice(0);
        Invoice invoice22 = null;
        invoiceStorage0.addInvoice(invoice22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass27 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0604");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 1);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        invoiceStorage0.deleteInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList15 = invoiceStorage14.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage14.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage14.getAllInvoices();
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        invoiceStorage14.addAllInvoices(invoiceList22);
        Invoice invoice25 = invoiceStorage14.getInvoice(0);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage26.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage26.addInvoice(invoice31);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList34 = invoiceStorage33.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage33.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage33.getAllInvoices();
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        invoiceStorage33.addAllInvoices(invoiceList41);
        invoiceStorage26.addAllInvoices(invoiceList41);
        invoiceStorage14.addAllInvoices(invoiceList41);
        Invoice invoice46 = invoiceStorage14.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList47 = invoiceStorage14.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNull(invoice25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNull(invoice46);
        org.junit.Assert.assertNotNull(invoiceList47);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0605");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        invoiceStorage0.deleteInvoice(1);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0606");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice12 = invoiceStorage0.getInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0607");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        Invoice invoice24 = invoiceStorage19.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList35 = invoiceStorage25.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList35);
        invoiceStorage0.addAllInvoices(invoiceList35);
        Invoice invoice38 = null;
        invoiceStorage0.addInvoice(invoice38);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        Invoice invoice41 = null;
        invoiceStorage40.addInvoice(invoice41);
        Invoice invoice43 = null;
        invoiceStorage40.addInvoice(invoice43);
        Invoice invoice45 = null;
        invoiceStorage40.addInvoice(invoice45);
        Invoice invoice47 = null;
        invoiceStorage40.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage40.getAllInvoices();
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        Invoice invoice51 = null;
        invoiceStorage50.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage50.getAllInvoices();
        java.util.List<Invoice> invoiceList54 = invoiceStorage50.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList54);
        InvoiceStorage invoiceStorage56 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList57 = invoiceStorage56.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage56.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage56.getAllInvoices();
        InvoiceStorage invoiceStorage61 = new InvoiceStorage();
        Invoice invoice62 = null;
        invoiceStorage61.addInvoice(invoice62);
        java.util.List<Invoice> invoiceList64 = invoiceStorage61.getAllInvoices();
        invoiceStorage56.addAllInvoices(invoiceList64);
        java.util.List<Invoice> invoiceList66 = invoiceStorage56.getAllInvoices();
        java.util.List<Invoice> invoiceList67 = invoiceStorage56.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList67);
        invoiceStorage0.addAllInvoices(invoiceList67);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNotNull(invoiceList67);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0608");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList5 = invoiceStorage4.getAllInvoices();
        Invoice invoice6 = null;
        invoiceStorage4.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage4.getAllInvoices();
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        invoiceStorage4.addAllInvoices(invoiceList12);
        invoiceStorage0.addAllInvoices(invoiceList12);
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage16.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList22 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList24 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        Invoice invoice29 = invoiceStorage25.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        invoiceStorage30.addAllInvoices(invoiceList38);
        invoiceStorage25.addAllInvoices(invoiceList38);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage41.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage41.getAllInvoices();
        InvoiceStorage invoiceStorage49 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList50 = invoiceStorage49.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage49.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage49.getAllInvoices();
        InvoiceStorage invoiceStorage54 = new InvoiceStorage();
        Invoice invoice55 = null;
        invoiceStorage54.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage54.getAllInvoices();
        invoiceStorage49.addAllInvoices(invoiceList57);
        invoiceStorage41.addAllInvoices(invoiceList57);
        invoiceStorage25.addAllInvoices(invoiceList57);
        invoiceStorage25.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList63 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList64 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList65 = invoiceStorage25.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList65);
        invoiceStorage0.addAllInvoices(invoiceList65);
        java.lang.Class<?> wildcardClass68 = invoiceList65.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNull(invoice29);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList63);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0609");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice14 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0610");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = null;
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.addAllInvoices(invoiceList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice9);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0611");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage6.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice18 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList14);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0612");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.lang.Class<?> wildcardClass12 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0613");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage17.addInvoice(invoice21);
        Invoice invoice24 = invoiceStorage17.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList25 = invoiceStorage17.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList25);
        invoiceStorage0.addAllInvoices(invoiceList25);
        invoiceStorage0.deleteInvoice(1);
        Invoice invoice30 = null;
        invoiceStorage0.addInvoice(invoice30);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice33 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList25);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0614");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList18 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList19 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage10.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage23.addInvoice(invoice26);
        Invoice invoice28 = null;
        invoiceStorage23.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage30.addInvoice(invoice35);
        Invoice invoice37 = null;
        invoiceStorage30.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage30.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage23.getAllInvoices();
        InvoiceStorage invoiceStorage42 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList43 = invoiceStorage42.getAllInvoices();
        Invoice invoice44 = null;
        invoiceStorage42.addInvoice(invoice44);
        Invoice invoice47 = invoiceStorage42.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage48 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList49 = invoiceStorage48.getAllInvoices();
        Invoice invoice50 = null;
        invoiceStorage48.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage48.getAllInvoices();
        Invoice invoice53 = null;
        invoiceStorage48.addInvoice(invoice53);
        java.util.List<Invoice> invoiceList55 = invoiceStorage48.getAllInvoices();
        java.util.List<Invoice> invoiceList56 = invoiceStorage48.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage48.getAllInvoices();
        java.util.List<Invoice> invoiceList58 = invoiceStorage48.getAllInvoices();
        invoiceStorage42.addAllInvoices(invoiceList58);
        invoiceStorage23.addAllInvoices(invoiceList58);
        invoiceStorage0.addAllInvoices(invoiceList58);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNull(invoice47);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList55);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList58);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0615");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList40);
        invoiceStorage24.addAllInvoices(invoiceList40);
        invoiceStorage0.addAllInvoices(invoiceList40);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList46 = invoiceStorage45.getAllInvoices();
        Invoice invoice47 = null;
        invoiceStorage45.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage45.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList49);
        Invoice invoice52 = invoiceStorage44.getInvoice(0);
        java.util.List<Invoice> invoiceList53 = invoiceStorage44.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList53);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNull(invoice52);
        org.junit.Assert.assertNotNull(invoiceList53);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0616");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        Invoice invoice8 = null;
        invoiceStorage7.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage7.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage7.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage7.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage19.addInvoice(invoice23);
        Invoice invoice26 = invoiceStorage19.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList27 = invoiceStorage19.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList27);
        invoiceStorage7.addAllInvoices(invoiceList27);
        Invoice invoice31 = invoiceStorage7.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList32 = invoiceStorage7.getAllInvoices();
        invoiceStorage7.deleteInvoice(1);
        java.util.List<Invoice> invoiceList35 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList35);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNull(invoice26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNull(invoice31);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0617");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage22.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList29);
        java.lang.Class<?> wildcardClass31 = invoiceList29.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0618");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        java.lang.Class<?> wildcardClass10 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0619");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList25 = invoiceStorage0.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage0.addInvoice(invoice26);
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList25);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0620");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList13);
        Invoice invoice16 = invoiceStorage8.getInvoice(0);
        Invoice invoice17 = null;
        invoiceStorage8.addInvoice(invoice17);
        Invoice invoice19 = null;
        invoiceStorage8.addInvoice(invoice19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        Invoice invoice27 = null;
        invoiceStorage26.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage26.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage21.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList31);
        invoiceStorage0.addAllInvoices(invoiceList31);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList31);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0621");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        java.util.List<Invoice> invoiceList18 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList24);
        Invoice invoice27 = invoiceStorage19.getInvoice(0);
        Invoice invoice28 = null;
        invoiceStorage19.addInvoice(invoice28);
        Invoice invoice30 = null;
        invoiceStorage19.addInvoice(invoice30);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage32.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList42);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage44.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        Invoice invoice49 = null;
        invoiceStorage44.addInvoice(invoice49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage44.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage44.addInvoice(invoice52);
        Invoice invoice54 = null;
        invoiceStorage44.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage44.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList56);
        invoiceStorage0.addAllInvoices(invoiceList56);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice60 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNull(invoice27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList56);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0622");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage0.getInvoice(0);
        Invoice invoice22 = null;
        invoiceStorage0.addInvoice(invoice22);
        java.lang.Class<?> wildcardClass24 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0623");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage25.addInvoice(invoice33);
        Invoice invoice35 = null;
        invoiceStorage25.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage25.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList37);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice40 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 9");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList37);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0624");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage0.getInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNull(invoice15);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0625");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList17);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0626");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass13 = invoiceList12.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0627");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList15 = invoiceStorage14.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage14.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage14.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage14.addInvoice(invoice19);
        Invoice invoice21 = null;
        invoiceStorage14.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage14.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList34 = invoiceStorage33.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage33.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage33.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList37);
        Invoice invoice40 = invoiceStorage32.getInvoice(0);
        Invoice invoice41 = null;
        invoiceStorage32.addInvoice(invoice41);
        Invoice invoice43 = null;
        invoiceStorage32.addInvoice(invoice43);
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList46 = invoiceStorage45.getAllInvoices();
        Invoice invoice47 = null;
        invoiceStorage45.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage45.getAllInvoices();
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        Invoice invoice51 = null;
        invoiceStorage50.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage50.getAllInvoices();
        invoiceStorage45.addAllInvoices(invoiceList53);
        java.util.List<Invoice> invoiceList55 = invoiceStorage45.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList55);
        invoiceStorage24.addAllInvoices(invoiceList55);
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList59 = invoiceStorage58.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage58.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage58.getAllInvoices();
        InvoiceStorage invoiceStorage63 = new InvoiceStorage();
        Invoice invoice64 = null;
        invoiceStorage63.addInvoice(invoice64);
        java.util.List<Invoice> invoiceList66 = invoiceStorage63.getAllInvoices();
        invoiceStorage58.addAllInvoices(invoiceList66);
        java.util.List<Invoice> invoiceList68 = invoiceStorage58.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList68);
        invoiceStorage14.addAllInvoices(invoiceList68);
        invoiceStorage0.addAllInvoices(invoiceList68);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice73 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNull(invoice40);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList55);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNotNull(invoiceList68);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0628");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        Invoice invoice13 = null;
        invoiceStorage0.addInvoice(invoice13);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice16 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0629");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage7.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage7.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice21 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0630");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage6.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        Invoice invoice15 = null;
        invoiceStorage14.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage14.getAllInvoices();
        java.util.List<Invoice> invoiceList18 = invoiceStorage14.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage14.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage14.getAllInvoices();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        Invoice invoice23 = null;
        invoiceStorage22.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage22.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage22.addInvoice(invoice26);
        Invoice invoice28 = null;
        invoiceStorage22.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage30.addInvoice(invoice35);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        invoiceStorage30.addAllInvoices(invoiceList41);
        invoiceStorage22.addAllInvoices(invoiceList41);
        invoiceStorage14.addAllInvoices(invoiceList41);
        invoiceStorage0.addAllInvoices(invoiceList41);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList41);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0631");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.lang.Class<?> wildcardClass14 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0632");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        Invoice invoice31 = invoiceStorage0.getInvoice((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNull(invoice31);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0633");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass8 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0634");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        Invoice invoice13 = null;
        invoiceStorage0.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList15);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0635");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass11 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0636");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        Invoice invoice8 = null;
        invoiceStorage7.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage7.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList15 = invoiceStorage14.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage14.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage14.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage14.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage14.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage14.addInvoice(invoice22);
        Invoice invoice24 = null;
        invoiceStorage14.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage14.getAllInvoices();
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        Invoice invoice28 = null;
        invoiceStorage27.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage27.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage27.addInvoice(invoice31);
        Invoice invoice34 = invoiceStorage27.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList35 = invoiceStorage27.getAllInvoices();
        invoiceStorage14.addAllInvoices(invoiceList35);
        invoiceStorage0.addAllInvoices(invoiceList35);
        Invoice invoice38 = null;
        invoiceStorage0.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage0.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage0.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice45 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNull(invoice34);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0637");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0638");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        Invoice invoice28 = null;
        invoiceStorage25.addInvoice(invoice28);
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        Invoice invoice32 = null;
        invoiceStorage25.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage25.getAllInvoices();
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        java.util.List<Invoice> invoiceList39 = invoiceStorage35.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList39);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList42 = invoiceStorage41.getAllInvoices();
        Invoice invoice43 = null;
        invoiceStorage41.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage46.getAllInvoices();
        invoiceStorage41.addAllInvoices(invoiceList49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList52 = invoiceStorage41.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList52);
        invoiceStorage0.addAllInvoices(invoiceList52);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList52);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0639");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage30.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage30.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList38 = invoiceStorage30.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        java.util.List<Invoice> invoiceList41 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass42 = invoiceList41.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0640");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList26);
        Invoice invoice29 = invoiceStorage21.getInvoice(0);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage30.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage30.getAllInvoices();
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage38.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage38.addInvoice(invoice44);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList47 = invoiceStorage46.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage46.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage46.addInvoice(invoice51);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        invoiceStorage46.addAllInvoices(invoiceList57);
        invoiceStorage38.addAllInvoices(invoiceList57);
        invoiceStorage30.addAllInvoices(invoiceList57);
        invoiceStorage21.addAllInvoices(invoiceList57);
        Invoice invoice62 = null;
        invoiceStorage21.addInvoice(invoice62);
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList65 = invoiceStorage64.getAllInvoices();
        Invoice invoice66 = null;
        invoiceStorage64.addInvoice(invoice66);
        Invoice invoice69 = invoiceStorage64.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList70 = invoiceStorage64.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList70);
        invoiceStorage0.addAllInvoices(invoiceList70);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.lang.Class<?> wildcardClass75 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice29);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNull(invoice69);
        org.junit.Assert.assertNotNull(invoiceList70);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0641");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice23 = null;
        invoiceStorage0.addInvoice(invoice23);
        Invoice invoice25 = null;
        invoiceStorage0.addInvoice(invoice25);
        Invoice invoice27 = null;
        invoiceStorage0.addInvoice(invoice27);
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0642");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        Invoice invoice24 = invoiceStorage19.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList35 = invoiceStorage25.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList35);
        invoiceStorage0.addAllInvoices(invoiceList35);
        Invoice invoice38 = null;
        invoiceStorage0.addInvoice(invoice38);
        Invoice invoice40 = null;
        invoiceStorage0.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass43 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0643");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList14);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        Invoice invoice22 = null;
        invoiceStorage21.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage21.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage16.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList27);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice30 = invoiceStorage0.getInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0644");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        Invoice invoice16 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage17.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage17.getAllInvoices();
        invoiceStorage17.deleteInvoice((int) (short) 1);
        Invoice invoice27 = null;
        invoiceStorage17.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage17.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList29);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice32 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList29);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0645");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage0.addInvoice(invoice15);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice18 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList14);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0646");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        Invoice invoice24 = invoiceStorage13.getInvoice(0);
        invoiceStorage13.deleteInvoice((int) (short) 0);
        Invoice invoice27 = null;
        invoiceStorage13.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage29.addInvoice(invoice34);
        Invoice invoice36 = null;
        invoiceStorage29.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage29.getAllInvoices();
        invoiceStorage29.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList41 = invoiceStorage29.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList41);
        invoiceStorage0.addAllInvoices(invoiceList41);
        Invoice invoice45 = invoiceStorage0.getInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice47 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNull(invoice45);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0647");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice18 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0648");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.lang.Class<?> wildcardClass10 = invoiceList8.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0649");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage27.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        Invoice invoice35 = null;
        invoiceStorage34.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage34.getAllInvoices();
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList42 = invoiceStorage41.getAllInvoices();
        Invoice invoice43 = null;
        invoiceStorage41.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage41.addInvoice(invoice46);
        Invoice invoice48 = null;
        invoiceStorage41.addInvoice(invoice48);
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList51 = invoiceStorage50.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage50.addInvoice(invoice52);
        Invoice invoice55 = invoiceStorage50.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList56 = invoiceStorage50.getAllInvoices();
        invoiceStorage41.addAllInvoices(invoiceList56);
        invoiceStorage41.deleteInvoice(0);
        InvoiceStorage invoiceStorage60 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList61 = invoiceStorage60.getAllInvoices();
        Invoice invoice62 = null;
        invoiceStorage60.addInvoice(invoice62);
        Invoice invoice65 = invoiceStorage60.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage66 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList67 = invoiceStorage66.getAllInvoices();
        Invoice invoice68 = null;
        invoiceStorage66.addInvoice(invoice68);
        java.util.List<Invoice> invoiceList70 = invoiceStorage66.getAllInvoices();
        Invoice invoice71 = null;
        invoiceStorage66.addInvoice(invoice71);
        java.util.List<Invoice> invoiceList73 = invoiceStorage66.getAllInvoices();
        java.util.List<Invoice> invoiceList74 = invoiceStorage66.getAllInvoices();
        java.util.List<Invoice> invoiceList75 = invoiceStorage66.getAllInvoices();
        java.util.List<Invoice> invoiceList76 = invoiceStorage66.getAllInvoices();
        invoiceStorage60.addAllInvoices(invoiceList76);
        invoiceStorage41.addAllInvoices(invoiceList76);
        invoiceStorage0.addAllInvoices(invoiceList76);
        java.lang.Class<?> wildcardClass80 = invoiceList76.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNull(invoice55);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNull(invoice65);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList70);
        org.junit.Assert.assertNotNull(invoiceList73);
        org.junit.Assert.assertNotNull(invoiceList74);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNotNull(invoiceList76);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0650");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass10 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0651");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage10.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage15.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage15.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage15.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.lang.Class<?> wildcardClass27 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0652");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage13.addInvoice(invoice18);
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        invoiceStorage20.addAllInvoices(invoiceList28);
        invoiceStorage13.addAllInvoices(invoiceList28);
        invoiceStorage0.addAllInvoices(invoiceList28);
        Invoice invoice33 = invoiceStorage0.getInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice35 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNull(invoice33);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0653");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList40);
        invoiceStorage24.addAllInvoices(invoiceList40);
        invoiceStorage0.addAllInvoices(invoiceList40);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList46 = invoiceStorage45.getAllInvoices();
        Invoice invoice47 = null;
        invoiceStorage45.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage45.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList49);
        Invoice invoice52 = invoiceStorage44.getInvoice(0);
        java.util.List<Invoice> invoiceList53 = invoiceStorage44.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList53);
        Invoice invoice55 = null;
        invoiceStorage0.addInvoice(invoice55);
        Invoice invoice57 = null;
        invoiceStorage0.addInvoice(invoice57);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNull(invoice52);
        org.junit.Assert.assertNotNull(invoiceList53);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0654");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage10.getInvoice((int) (short) 0);
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList18 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList18);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList24);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0655");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage10.getAllInvoices();
        invoiceStorage10.deleteInvoice(0);
        java.util.List<Invoice> invoiceList26 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList26);
        java.lang.Class<?> wildcardClass28 = invoiceList26.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0656");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        java.lang.Class<?> wildcardClass23 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0657");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList40);
        invoiceStorage24.addAllInvoices(invoiceList40);
        invoiceStorage0.addAllInvoices(invoiceList40);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList46 = invoiceStorage45.getAllInvoices();
        Invoice invoice47 = null;
        invoiceStorage45.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage45.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList49);
        Invoice invoice52 = invoiceStorage44.getInvoice(0);
        java.util.List<Invoice> invoiceList53 = invoiceStorage44.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList53);
        java.lang.Class<?> wildcardClass55 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNull(invoice52);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0658");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage0.addInvoice(invoice15);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage17.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage22.getAllInvoices();
        java.util.List<Invoice> invoiceList30 = invoiceStorage22.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage17.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList32);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList32);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0659");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        Invoice invoice24 = invoiceStorage13.getInvoice(0);
        invoiceStorage13.deleteInvoice((int) (short) 0);
        Invoice invoice27 = null;
        invoiceStorage13.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage29.addInvoice(invoice34);
        Invoice invoice36 = null;
        invoiceStorage29.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage29.getAllInvoices();
        invoiceStorage29.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList41 = invoiceStorage29.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList41);
        invoiceStorage0.addAllInvoices(invoiceList41);
        Invoice invoice45 = invoiceStorage0.getInvoice(1);
        java.util.List<Invoice> invoiceList46 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNotNull(invoiceList46);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0660");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        java.lang.Class<?> wildcardClass11 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0661");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage15.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage15.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage15.addInvoice(invoice23);
        invoiceStorage15.deleteInvoice(0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage27.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList37);
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        Invoice invoice40 = null;
        invoiceStorage39.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage39.getAllInvoices();
        java.util.List<Invoice> invoiceList43 = invoiceStorage39.getAllInvoices();
        Invoice invoice44 = null;
        invoiceStorage39.addInvoice(invoice44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage39.getAllInvoices();
        InvoiceStorage invoiceStorage47 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList48 = invoiceStorage47.getAllInvoices();
        Invoice invoice49 = null;
        invoiceStorage47.addInvoice(invoice49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage47.getAllInvoices();
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        Invoice invoice53 = null;
        invoiceStorage52.addInvoice(invoice53);
        java.util.List<Invoice> invoiceList55 = invoiceStorage52.getAllInvoices();
        invoiceStorage47.addAllInvoices(invoiceList55);
        invoiceStorage39.addAllInvoices(invoiceList55);
        invoiceStorage15.addAllInvoices(invoiceList55);
        InvoiceStorage invoiceStorage59 = new InvoiceStorage();
        InvoiceStorage invoiceStorage60 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList61 = invoiceStorage60.getAllInvoices();
        Invoice invoice62 = null;
        invoiceStorage60.addInvoice(invoice62);
        java.util.List<Invoice> invoiceList64 = invoiceStorage60.getAllInvoices();
        invoiceStorage59.addAllInvoices(invoiceList64);
        Invoice invoice67 = invoiceStorage59.getInvoice(0);
        java.util.List<Invoice> invoiceList68 = invoiceStorage59.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList68);
        invoiceStorage0.addAllInvoices(invoiceList68);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice72 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList55);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNull(invoice67);
        org.junit.Assert.assertNotNull(invoiceList68);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0662");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0663");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList17);
        Invoice invoice20 = invoiceStorage12.getInvoice(0);
        Invoice invoice21 = null;
        invoiceStorage12.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage12.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList29);
        invoiceStorage12.deleteInvoice(0);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        invoiceStorage33.addAllInvoices(invoiceList38);
        Invoice invoice41 = invoiceStorage33.getInvoice(0);
        InvoiceStorage invoiceStorage42 = new InvoiceStorage();
        Invoice invoice43 = null;
        invoiceStorage42.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage42.getAllInvoices();
        java.util.List<Invoice> invoiceList46 = invoiceStorage42.getAllInvoices();
        Invoice invoice47 = null;
        invoiceStorage42.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage42.getAllInvoices();
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        Invoice invoice51 = null;
        invoiceStorage50.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage50.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage50.addInvoice(invoice54);
        Invoice invoice56 = null;
        invoiceStorage50.addInvoice(invoice56);
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList59 = invoiceStorage58.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage58.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage58.getAllInvoices();
        Invoice invoice63 = null;
        invoiceStorage58.addInvoice(invoice63);
        InvoiceStorage invoiceStorage65 = new InvoiceStorage();
        Invoice invoice66 = null;
        invoiceStorage65.addInvoice(invoice66);
        java.util.List<Invoice> invoiceList68 = invoiceStorage65.getAllInvoices();
        java.util.List<Invoice> invoiceList69 = invoiceStorage65.getAllInvoices();
        invoiceStorage58.addAllInvoices(invoiceList69);
        invoiceStorage50.addAllInvoices(invoiceList69);
        invoiceStorage42.addAllInvoices(invoiceList69);
        invoiceStorage33.addAllInvoices(invoiceList69);
        Invoice invoice74 = null;
        invoiceStorage33.addInvoice(invoice74);
        InvoiceStorage invoiceStorage76 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList77 = invoiceStorage76.getAllInvoices();
        Invoice invoice78 = null;
        invoiceStorage76.addInvoice(invoice78);
        Invoice invoice81 = invoiceStorage76.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList82 = invoiceStorage76.getAllInvoices();
        invoiceStorage33.addAllInvoices(invoiceList82);
        invoiceStorage12.addAllInvoices(invoiceList82);
        invoiceStorage0.addAllInvoices(invoiceList82);
        Invoice invoice86 = null;
        invoiceStorage0.addInvoice(invoice86);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNull(invoice20);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNull(invoice41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList69);
        org.junit.Assert.assertNotNull(invoiceList77);
        org.junit.Assert.assertNull(invoice81);
        org.junit.Assert.assertNotNull(invoiceList82);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0664");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage10.getInvoice((int) (short) 0);
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList19 = invoiceStorage18.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage18.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage18.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList22);
        Invoice invoice25 = invoiceStorage17.getInvoice(0);
        Invoice invoice26 = null;
        invoiceStorage17.addInvoice(invoice26);
        Invoice invoice28 = null;
        invoiceStorage17.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        invoiceStorage30.addAllInvoices(invoiceList38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage30.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList40);
        invoiceStorage10.addAllInvoices(invoiceList40);
        invoiceStorage0.addAllInvoices(invoiceList40);
        Invoice invoice44 = null;
        invoiceStorage0.addInvoice(invoice44);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNull(invoice25);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList40);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0665");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice6 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0666");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        Invoice invoice30 = null;
        invoiceStorage0.addInvoice(invoice30);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        Invoice invoice37 = null;
        invoiceStorage32.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage32.getAllInvoices();
        Invoice invoice41 = invoiceStorage32.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList42 = invoiceStorage32.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList42);
        java.lang.Class<?> wildcardClass44 = invoiceList42.getClass();
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNull(invoice41);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0667");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice6 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0668");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage11.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList18 = invoiceStorage17.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage17.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        Invoice invoice23 = null;
        invoiceStorage22.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage22.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage17.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList30);
        invoiceStorage0.deleteInvoice(1);
        java.lang.Class<?> wildcardClass34 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0669");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0670");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage6.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice15 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0671");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage10.addInvoice(invoice14);
        Invoice invoice17 = invoiceStorage10.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList19 = invoiceStorage18.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage18.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage18.getAllInvoices();
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList26);
        Invoice invoice29 = invoiceStorage18.getInvoice(0);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage30.addInvoice(invoice35);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList38 = invoiceStorage37.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage37.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        InvoiceStorage invoiceStorage42 = new InvoiceStorage();
        Invoice invoice43 = null;
        invoiceStorage42.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage42.getAllInvoices();
        invoiceStorage37.addAllInvoices(invoiceList45);
        invoiceStorage30.addAllInvoices(invoiceList45);
        invoiceStorage18.addAllInvoices(invoiceList45);
        invoiceStorage10.addAllInvoices(invoiceList45);
        Invoice invoice51 = invoiceStorage10.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage52.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage52.addInvoice(invoice57);
        java.util.List<Invoice> invoiceList59 = invoiceStorage52.getAllInvoices();
        java.util.List<Invoice> invoiceList60 = invoiceStorage52.getAllInvoices();
        java.util.List<Invoice> invoiceList61 = invoiceStorage52.getAllInvoices();
        java.util.List<Invoice> invoiceList62 = invoiceStorage52.getAllInvoices();
        java.util.List<Invoice> invoiceList63 = invoiceStorage52.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList63);
        invoiceStorage0.addAllInvoices(invoiceList63);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice67 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice29);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNull(invoice51);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList63);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0672");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList5 = invoiceStorage4.getAllInvoices();
        Invoice invoice6 = null;
        invoiceStorage4.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage4.getAllInvoices();
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        invoiceStorage4.addAllInvoices(invoiceList12);
        invoiceStorage0.addAllInvoices(invoiceList12);
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0673");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        Invoice invoice23 = null;
        invoiceStorage22.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage22.getAllInvoices();
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage22.getAllInvoices();
        java.util.List<Invoice> invoiceList30 = invoiceStorage22.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList30);
        java.lang.Class<?> wildcardClass32 = invoiceList30.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0674");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList12 = null;
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.addAllInvoices(invoiceList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0675");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        Invoice invoice8 = null;
        invoiceStorage7.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage7.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList24 = invoiceStorage16.getAllInvoices();
        invoiceStorage16.deleteInvoice(0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        Invoice invoice32 = invoiceStorage27.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList33 = invoiceStorage27.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList33);
        Invoice invoice35 = null;
        invoiceStorage16.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage16.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList37);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.lang.Class<?> wildcardClass41 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNull(invoice32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0676");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage5.addInvoice(invoice13);
        invoiceStorage5.deleteInvoice(0);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList18 = invoiceStorage17.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage17.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        Invoice invoice23 = null;
        invoiceStorage22.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage22.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage17.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList27);
        Invoice invoice29 = null;
        invoiceStorage5.addInvoice(invoice29);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage35.addInvoice(invoice39);
        Invoice invoice42 = invoiceStorage35.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList43 = invoiceStorage35.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList43);
        invoiceStorage5.addAllInvoices(invoiceList43);
        java.util.List<Invoice> invoiceList46 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList47 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 9");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList49);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0677");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        Invoice invoice20 = invoiceStorage13.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList21 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList21);
        invoiceStorage0.deleteInvoice(0);
        Invoice invoice25 = null;
        invoiceStorage0.addInvoice(invoice25);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice28 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNull(invoice20);
        org.junit.Assert.assertNotNull(invoiceList21);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0678");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage12.getAllInvoices();
        Invoice invoice21 = invoiceStorage12.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        invoiceStorage22.addAllInvoices(invoiceList33);
        invoiceStorage12.addAllInvoices(invoiceList33);
        invoiceStorage0.addAllInvoices(invoiceList33);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0679");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0680");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList29 = invoiceStorage28.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage28.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        Invoice invoice34 = null;
        invoiceStorage33.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage33.getAllInvoices();
        invoiceStorage28.addAllInvoices(invoiceList36);
        invoiceStorage27.addAllInvoices(invoiceList36);
        Invoice invoice39 = null;
        invoiceStorage27.addInvoice(invoice39);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage41.addInvoice(invoice44);
        Invoice invoice46 = null;
        invoiceStorage41.addInvoice(invoice46);
        Invoice invoice48 = null;
        invoiceStorage41.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList51 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList52 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList53 = invoiceStorage41.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList53);
        invoiceStorage0.addAllInvoices(invoiceList53);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.lang.Class<?> wildcardClass58 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0681");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        Invoice invoice16 = invoiceStorage0.getInvoice((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0682");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage20.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage20.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage20.getAllInvoices();
        invoiceStorage20.deleteInvoice(0);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage31.getAllInvoices();
        invoiceStorage20.addAllInvoices(invoiceList41);
        invoiceStorage0.addAllInvoices(invoiceList41);
        java.lang.Class<?> wildcardClass44 = invoiceList41.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0683");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage0.addInvoice(invoice13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage19.addInvoice(invoice23);
        Invoice invoice26 = invoiceStorage19.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList27 = invoiceStorage19.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList27);
        invoiceStorage15.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        Invoice invoice32 = null;
        invoiceStorage31.addInvoice(invoice32);
        Invoice invoice34 = null;
        invoiceStorage31.addInvoice(invoice34);
        Invoice invoice36 = null;
        invoiceStorage31.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage31.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList38);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList42 = invoiceStorage41.getAllInvoices();
        Invoice invoice43 = null;
        invoiceStorage41.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList45);
        Invoice invoice48 = invoiceStorage40.getInvoice(0);
        Invoice invoice49 = null;
        invoiceStorage40.addInvoice(invoice49);
        Invoice invoice51 = null;
        invoiceStorage40.addInvoice(invoice51);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList57);
        invoiceStorage40.deleteInvoice(0);
        invoiceStorage40.deleteInvoice((int) (byte) 1);
        invoiceStorage40.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage65 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList66 = invoiceStorage65.getAllInvoices();
        Invoice invoice67 = null;
        invoiceStorage65.addInvoice(invoice67);
        java.util.List<Invoice> invoiceList69 = invoiceStorage65.getAllInvoices();
        Invoice invoice70 = null;
        invoiceStorage65.addInvoice(invoice70);
        java.util.List<Invoice> invoiceList72 = invoiceStorage65.getAllInvoices();
        java.util.List<Invoice> invoiceList73 = invoiceStorage65.getAllInvoices();
        java.util.List<Invoice> invoiceList74 = invoiceStorage65.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList74);
        invoiceStorage15.addAllInvoices(invoiceList74);
        invoiceStorage0.addAllInvoices(invoiceList74);
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNull(invoice26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNull(invoice48);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNotNull(invoiceList69);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList73);
        org.junit.Assert.assertNotNull(invoiceList74);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0684");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice12 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList10);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0685");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        Invoice invoice9 = null;
        invoiceStorage8.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage8.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage8.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage8.addInvoice(invoice14);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList27);
        invoiceStorage8.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        java.util.List<Invoice> invoiceList31 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass32 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0686");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList5 = invoiceStorage4.getAllInvoices();
        Invoice invoice6 = null;
        invoiceStorage4.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage4.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage4.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage4.getAllInvoices();
        java.util.List<Invoice> invoiceList12 = invoiceStorage4.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage4.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage4.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList14);
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice19 = invoiceStorage0.getInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0687");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass13 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0688");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass14 = invoiceList13.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0689");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice11 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList9);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0690");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice18 = null;
        invoiceStorage12.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage12.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList29);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        Invoice invoice42 = invoiceStorage31.getInvoice(0);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage43.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage43.addInvoice(invoice48);
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList51 = invoiceStorage50.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage50.addInvoice(invoice52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage50.getAllInvoices();
        InvoiceStorage invoiceStorage55 = new InvoiceStorage();
        Invoice invoice56 = null;
        invoiceStorage55.addInvoice(invoice56);
        java.util.List<Invoice> invoiceList58 = invoiceStorage55.getAllInvoices();
        invoiceStorage50.addAllInvoices(invoiceList58);
        invoiceStorage43.addAllInvoices(invoiceList58);
        invoiceStorage31.addAllInvoices(invoiceList58);
        invoiceStorage24.addAllInvoices(invoiceList58);
        invoiceStorage12.addAllInvoices(invoiceList58);
        invoiceStorage0.addAllInvoices(invoiceList58);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice66 = invoiceStorage0.getInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList58);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0691");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass5 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0692");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage10.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage10.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage10.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage10.getAllInvoices();
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage23.addInvoice(invoice27);
        Invoice invoice30 = invoiceStorage23.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList31 = invoiceStorage23.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList31);
        invoiceStorage0.addAllInvoices(invoiceList31);
        java.util.List<Invoice> invoiceList34 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass35 = invoiceList34.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice30);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0693");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage0.addInvoice(invoice14);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0694");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList18 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList19 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage10.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList23 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass24 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0695");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage19.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage27.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        Invoice invoice40 = null;
        invoiceStorage39.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage39.getAllInvoices();
        invoiceStorage34.addAllInvoices(invoiceList42);
        invoiceStorage27.addAllInvoices(invoiceList42);
        Invoice invoice45 = null;
        invoiceStorage27.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage27.getAllInvoices();
        InvoiceStorage invoiceStorage48 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList49 = invoiceStorage48.getAllInvoices();
        Invoice invoice50 = null;
        invoiceStorage48.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage48.getAllInvoices();
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        invoiceStorage48.addAllInvoices(invoiceList56);
        Invoice invoice59 = invoiceStorage48.getInvoice(0);
        InvoiceStorage invoiceStorage60 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList61 = invoiceStorage60.getAllInvoices();
        Invoice invoice62 = null;
        invoiceStorage60.addInvoice(invoice62);
        java.util.List<Invoice> invoiceList64 = invoiceStorage60.getAllInvoices();
        Invoice invoice65 = null;
        invoiceStorage60.addInvoice(invoice65);
        InvoiceStorage invoiceStorage67 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList68 = invoiceStorage67.getAllInvoices();
        Invoice invoice69 = null;
        invoiceStorage67.addInvoice(invoice69);
        java.util.List<Invoice> invoiceList71 = invoiceStorage67.getAllInvoices();
        InvoiceStorage invoiceStorage72 = new InvoiceStorage();
        Invoice invoice73 = null;
        invoiceStorage72.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage72.getAllInvoices();
        invoiceStorage67.addAllInvoices(invoiceList75);
        invoiceStorage60.addAllInvoices(invoiceList75);
        invoiceStorage48.addAllInvoices(invoiceList75);
        invoiceStorage27.addAllInvoices(invoiceList75);
        java.util.List<Invoice> invoiceList80 = invoiceStorage27.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList80);
        invoiceStorage0.addAllInvoices(invoiceList80);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNull(invoice59);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList71);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNotNull(invoiceList80);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0696");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList25 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(1);
        java.lang.Class<?> wildcardClass28 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0697");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        Invoice invoice13 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNull(invoice13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0698");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass8 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0699");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0700");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList27);
        invoiceStorage12.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        Invoice invoice42 = invoiceStorage31.getInvoice(0);
        invoiceStorage31.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList45 = invoiceStorage31.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList45);
        Invoice invoice47 = null;
        invoiceStorage0.addInvoice(invoice47);
        Invoice invoice49 = null;
        invoiceStorage0.addInvoice(invoice49);
        Invoice invoice51 = null;
        invoiceStorage0.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice55 = invoiceStorage0.getInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList53);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0701");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        invoiceStorage0.deleteInvoice(1);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList18 = invoiceStorage17.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage17.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage17.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList25 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList26 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage17.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage17.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage17.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList30);
        java.lang.Class<?> wildcardClass32 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0702");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        java.util.List<Invoice> invoiceList42 = invoiceStorage38.getAllInvoices();
        java.util.List<Invoice> invoiceList43 = invoiceStorage38.getAllInvoices();
        invoiceStorage38.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage46.getAllInvoices();
        Invoice invoice50 = null;
        invoiceStorage46.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage46.getAllInvoices();
        java.util.List<Invoice> invoiceList53 = invoiceStorage46.getAllInvoices();
        java.util.List<Invoice> invoiceList54 = invoiceStorage46.getAllInvoices();
        invoiceStorage38.addAllInvoices(invoiceList54);
        invoiceStorage0.addAllInvoices(invoiceList54);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList54);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0703");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        Invoice invoice27 = null;
        invoiceStorage26.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage26.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList29);
        Invoice invoice32 = invoiceStorage21.getInvoice(0);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList34 = invoiceStorage33.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage33.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage33.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage33.addInvoice(invoice38);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        Invoice invoice41 = null;
        invoiceStorage40.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage40.getAllInvoices();
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        invoiceStorage33.addAllInvoices(invoiceList44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage33.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList46);
        invoiceStorage0.addAllInvoices(invoiceList46);
        java.util.List<Invoice> invoiceList49 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass50 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNull(invoice32);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0704");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass13 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0705");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage5.addInvoice(invoice9);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage11.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage11.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList17);
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0706");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        Invoice invoice8 = null;
        invoiceStorage7.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage7.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList15 = invoiceStorage14.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage14.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage14.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage14.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage14.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage14.addInvoice(invoice22);
        Invoice invoice24 = null;
        invoiceStorage14.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage14.getAllInvoices();
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        Invoice invoice28 = null;
        invoiceStorage27.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage27.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage27.addInvoice(invoice31);
        Invoice invoice34 = invoiceStorage27.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList35 = invoiceStorage27.getAllInvoices();
        invoiceStorage14.addAllInvoices(invoiceList35);
        invoiceStorage0.addAllInvoices(invoiceList35);
        java.util.List<Invoice> invoiceList38 = invoiceStorage0.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage0.addInvoice(invoice39);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice42 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNull(invoice34);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0707");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList20);
        Invoice invoice23 = invoiceStorage15.getInvoice(0);
        Invoice invoice24 = null;
        invoiceStorage15.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage15.addInvoice(invoice26);
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        Invoice invoice29 = null;
        invoiceStorage28.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage28.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage28.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage28.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage36.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage36.getAllInvoices();
        java.util.List<Invoice> invoiceList44 = invoiceStorage36.getAllInvoices();
        java.util.List<Invoice> invoiceList45 = invoiceStorage36.getAllInvoices();
        java.util.List<Invoice> invoiceList46 = invoiceStorage36.getAllInvoices();
        java.util.List<Invoice> invoiceList47 = invoiceStorage36.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList47);
        invoiceStorage0.addAllInvoices(invoiceList47);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice23);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList47);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0708");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList14);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        Invoice invoice22 = null;
        invoiceStorage21.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage21.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage16.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList27);
        Invoice invoice30 = invoiceStorage0.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        Invoice invoice32 = null;
        invoiceStorage31.addInvoice(invoice32);
        Invoice invoice34 = null;
        invoiceStorage31.addInvoice(invoice34);
        Invoice invoice36 = null;
        invoiceStorage31.addInvoice(invoice36);
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList39 = invoiceStorage38.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage38.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage38.getAllInvoices();
        Invoice invoice43 = null;
        invoiceStorage38.addInvoice(invoice43);
        Invoice invoice45 = null;
        invoiceStorage38.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage38.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList47);
        invoiceStorage0.addAllInvoices(invoiceList47);
        java.lang.Class<?> wildcardClass50 = invoiceList47.getClass();
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNull(invoice30);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0709");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        Invoice invoice5 = null;
        invoiceStorage4.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage4.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage4.addInvoice(invoice8);
        Invoice invoice11 = invoiceStorage4.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList12 = invoiceStorage4.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0710");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice38 = null;
        invoiceStorage0.addInvoice(invoice38);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice41 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0711");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage0.addInvoice(invoice15);
        java.lang.Class<?> wildcardClass17 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0712");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass9 = invoiceList8.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0713");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList27);
        invoiceStorage12.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        Invoice invoice42 = invoiceStorage31.getInvoice(0);
        invoiceStorage31.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList45 = invoiceStorage31.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList45);
        Invoice invoice47 = null;
        invoiceStorage0.addInvoice(invoice47);
        invoiceStorage0.deleteInvoice(1);
        java.lang.Class<?> wildcardClass51 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0714");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        Invoice invoice15 = null;
        invoiceStorage14.addInvoice(invoice15);
        Invoice invoice17 = null;
        invoiceStorage14.addInvoice(invoice17);
        Invoice invoice19 = null;
        invoiceStorage14.addInvoice(invoice19);
        Invoice invoice21 = null;
        invoiceStorage14.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage14.getAllInvoices();
        invoiceStorage14.deleteInvoice(1);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage26.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage26.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage26.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage26.addInvoice(invoice34);
        invoiceStorage26.deleteInvoice(0);
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList39 = invoiceStorage38.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage38.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage38.getAllInvoices();
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        Invoice invoice44 = null;
        invoiceStorage43.addInvoice(invoice44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage43.getAllInvoices();
        invoiceStorage38.addAllInvoices(invoiceList46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage38.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList48);
        Invoice invoice50 = null;
        invoiceStorage26.addInvoice(invoice50);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        InvoiceStorage invoiceStorage56 = new InvoiceStorage();
        Invoice invoice57 = null;
        invoiceStorage56.addInvoice(invoice57);
        java.util.List<Invoice> invoiceList59 = invoiceStorage56.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage56.addInvoice(invoice60);
        Invoice invoice63 = invoiceStorage56.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList64 = invoiceStorage56.getAllInvoices();
        invoiceStorage52.addAllInvoices(invoiceList64);
        invoiceStorage26.addAllInvoices(invoiceList64);
        InvoiceStorage invoiceStorage67 = new InvoiceStorage();
        Invoice invoice68 = null;
        invoiceStorage67.addInvoice(invoice68);
        java.util.List<Invoice> invoiceList70 = invoiceStorage67.getAllInvoices();
        java.util.List<Invoice> invoiceList71 = invoiceStorage67.getAllInvoices();
        java.util.List<Invoice> invoiceList72 = invoiceStorage67.getAllInvoices();
        InvoiceStorage invoiceStorage73 = new InvoiceStorage();
        Invoice invoice74 = null;
        invoiceStorage73.addInvoice(invoice74);
        java.util.List<Invoice> invoiceList76 = invoiceStorage73.getAllInvoices();
        InvoiceStorage invoiceStorage77 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList78 = invoiceStorage77.getAllInvoices();
        Invoice invoice79 = null;
        invoiceStorage77.addInvoice(invoice79);
        java.util.List<Invoice> invoiceList81 = invoiceStorage77.getAllInvoices();
        Invoice invoice82 = null;
        invoiceStorage77.addInvoice(invoice82);
        java.util.List<Invoice> invoiceList84 = invoiceStorage77.getAllInvoices();
        java.util.List<Invoice> invoiceList85 = invoiceStorage77.getAllInvoices();
        java.util.List<Invoice> invoiceList86 = invoiceStorage77.getAllInvoices();
        java.util.List<Invoice> invoiceList87 = invoiceStorage77.getAllInvoices();
        invoiceStorage73.addAllInvoices(invoiceList87);
        invoiceStorage67.addAllInvoices(invoiceList87);
        invoiceStorage26.addAllInvoices(invoiceList87);
        invoiceStorage14.addAllInvoices(invoiceList87);
        invoiceStorage0.addAllInvoices(invoiceList87);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNull(invoice63);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList70);
        org.junit.Assert.assertNotNull(invoiceList71);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList76);
        org.junit.Assert.assertNotNull(invoiceList78);
        org.junit.Assert.assertNotNull(invoiceList81);
        org.junit.Assert.assertNotNull(invoiceList84);
        org.junit.Assert.assertNotNull(invoiceList85);
        org.junit.Assert.assertNotNull(invoiceList86);
        org.junit.Assert.assertNotNull(invoiceList87);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0715");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage0.getInvoice((int) (byte) 0);
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        invoiceStorage0.deleteInvoice(0);
        java.lang.Class<?> wildcardClass20 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice15);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0716");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        Invoice invoice18 = invoiceStorage7.getInvoice(0);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage19.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage26.getAllInvoices();
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        Invoice invoice32 = null;
        invoiceStorage31.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage31.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList34);
        invoiceStorage19.addAllInvoices(invoiceList34);
        invoiceStorage7.addAllInvoices(invoiceList34);
        invoiceStorage0.addAllInvoices(invoiceList34);
        invoiceStorage0.deleteInvoice(0);
        java.util.List<Invoice> invoiceList41 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice18);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList41);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0717");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0718");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        Invoice invoice30 = null;
        invoiceStorage0.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        Invoice invoice34 = null;
        invoiceStorage33.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage33.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList39 = invoiceStorage38.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage38.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage38.getAllInvoices();
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        Invoice invoice44 = null;
        invoiceStorage43.addInvoice(invoice44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage43.getAllInvoices();
        invoiceStorage38.addAllInvoices(invoiceList46);
        invoiceStorage33.addAllInvoices(invoiceList46);
        invoiceStorage0.addAllInvoices(invoiceList46);
        Invoice invoice50 = null;
        invoiceStorage0.addInvoice(invoice50);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList46);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0719");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage27.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        Invoice invoice35 = null;
        invoiceStorage34.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage34.getAllInvoices();
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice42 = invoiceStorage0.getInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList38);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0720");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice9);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0721");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList14);
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass19 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0722");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        java.util.List<Invoice> invoiceList18 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0723");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice11 = invoiceStorage0.getInvoice((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0724");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage21.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList30 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList31 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList32 = invoiceStorage21.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList32);
        Invoice invoice34 = null;
        invoiceStorage0.addInvoice(invoice34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage36.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage36.getAllInvoices();
        Invoice invoice45 = invoiceStorage36.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        Invoice invoice50 = invoiceStorage46.getInvoice((int) (short) 0);
        Invoice invoice51 = null;
        invoiceStorage46.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage46.getAllInvoices();
        java.util.List<Invoice> invoiceList54 = invoiceStorage46.getAllInvoices();
        invoiceStorage36.addAllInvoices(invoiceList54);
        invoiceStorage0.addAllInvoices(invoiceList54);
        java.lang.Class<?> wildcardClass57 = invoiceList54.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNull(invoice50);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0725");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        Invoice invoice20 = invoiceStorage13.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList21 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList21);
        invoiceStorage0.deleteInvoice(0);
        java.lang.Class<?> wildcardClass25 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNull(invoice20);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0726");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList19 = invoiceStorage18.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass22 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0727");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice(0);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass13 = invoiceList12.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0728");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(1);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage12.getAllInvoices();
        Invoice invoice21 = invoiceStorage12.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        invoiceStorage22.addAllInvoices(invoiceList33);
        invoiceStorage12.addAllInvoices(invoiceList33);
        invoiceStorage0.addAllInvoices(invoiceList33);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList38 = invoiceStorage37.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage37.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage37.addInvoice(invoice42);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage44.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        InvoiceStorage invoiceStorage49 = new InvoiceStorage();
        Invoice invoice50 = null;
        invoiceStorage49.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage49.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList52);
        invoiceStorage37.addAllInvoices(invoiceList52);
        Invoice invoice55 = null;
        invoiceStorage37.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage37.getAllInvoices();
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList59 = invoiceStorage58.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage58.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage58.getAllInvoices();
        InvoiceStorage invoiceStorage63 = new InvoiceStorage();
        Invoice invoice64 = null;
        invoiceStorage63.addInvoice(invoice64);
        java.util.List<Invoice> invoiceList66 = invoiceStorage63.getAllInvoices();
        invoiceStorage58.addAllInvoices(invoiceList66);
        Invoice invoice69 = invoiceStorage58.getInvoice(0);
        InvoiceStorage invoiceStorage70 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList71 = invoiceStorage70.getAllInvoices();
        Invoice invoice72 = null;
        invoiceStorage70.addInvoice(invoice72);
        java.util.List<Invoice> invoiceList74 = invoiceStorage70.getAllInvoices();
        Invoice invoice75 = null;
        invoiceStorage70.addInvoice(invoice75);
        InvoiceStorage invoiceStorage77 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList78 = invoiceStorage77.getAllInvoices();
        Invoice invoice79 = null;
        invoiceStorage77.addInvoice(invoice79);
        java.util.List<Invoice> invoiceList81 = invoiceStorage77.getAllInvoices();
        InvoiceStorage invoiceStorage82 = new InvoiceStorage();
        Invoice invoice83 = null;
        invoiceStorage82.addInvoice(invoice83);
        java.util.List<Invoice> invoiceList85 = invoiceStorage82.getAllInvoices();
        invoiceStorage77.addAllInvoices(invoiceList85);
        invoiceStorage70.addAllInvoices(invoiceList85);
        invoiceStorage58.addAllInvoices(invoiceList85);
        invoiceStorage37.addAllInvoices(invoiceList85);
        java.util.List<Invoice> invoiceList90 = invoiceStorage37.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList90);
        java.util.List<Invoice> invoiceList92 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList93 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass94 = invoiceList93.getClass();
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNull(invoice69);
        org.junit.Assert.assertNotNull(invoiceList71);
        org.junit.Assert.assertNotNull(invoiceList74);
        org.junit.Assert.assertNotNull(invoiceList78);
        org.junit.Assert.assertNotNull(invoiceList81);
        org.junit.Assert.assertNotNull(invoiceList85);
        org.junit.Assert.assertNotNull(invoiceList90);
        org.junit.Assert.assertNotNull(invoiceList92);
        org.junit.Assert.assertNotNull(invoiceList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0729");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice11 = invoiceStorage0.getInvoice((int) (byte) 0);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice15 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice11);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0730");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        Invoice invoice27 = null;
        invoiceStorage26.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage26.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList29);
        Invoice invoice32 = invoiceStorage21.getInvoice(0);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList34 = invoiceStorage33.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage33.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage33.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage33.addInvoice(invoice38);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        Invoice invoice46 = null;
        invoiceStorage45.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage45.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList48);
        invoiceStorage33.addAllInvoices(invoiceList48);
        invoiceStorage21.addAllInvoices(invoiceList48);
        invoiceStorage0.addAllInvoices(invoiceList48);
        java.lang.Class<?> wildcardClass53 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNull(invoice32);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0731");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage0.addInvoice(invoice14);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice17 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0732");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage30.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage30.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList38 = invoiceStorage30.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        java.util.List<Invoice> invoiceList41 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList42 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList43 = invoiceStorage0.getAllInvoices();
        Invoice invoice45 = invoiceStorage0.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList46 = null;
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.addAllInvoices(invoiceList46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNull(invoice45);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0733");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        Invoice invoice12 = invoiceStorage0.getInvoice((int) (short) 0);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice12);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0734");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage11.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        Invoice invoice22 = null;
        invoiceStorage21.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage21.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList24);
        invoiceStorage11.addAllInvoices(invoiceList24);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage27.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        Invoice invoice35 = null;
        invoiceStorage34.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage34.getAllInvoices();
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList38);
        invoiceStorage11.addAllInvoices(invoiceList38);
        Invoice invoice41 = null;
        invoiceStorage11.addInvoice(invoice41);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage43.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage43.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage43.getAllInvoices();
        Invoice invoice52 = invoiceStorage43.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList53 = invoiceStorage43.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList53);
        invoiceStorage0.addAllInvoices(invoiceList53);
        java.util.List<Invoice> invoiceList56 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNull(invoice15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNull(invoice52);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0735");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        Invoice invoice21 = null;
        invoiceStorage0.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList28);
        Invoice invoice31 = invoiceStorage23.getInvoice(0);
        Invoice invoice32 = null;
        invoiceStorage23.addInvoice(invoice32);
        Invoice invoice34 = null;
        invoiceStorage23.addInvoice(invoice34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage36.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage36.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList42);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage44.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        Invoice invoice49 = null;
        invoiceStorage44.addInvoice(invoice49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList52 = invoiceStorage44.getAllInvoices();
        invoiceStorage44.deleteInvoice(0);
        InvoiceStorage invoiceStorage55 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList56 = invoiceStorage55.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage55.addInvoice(invoice57);
        Invoice invoice60 = invoiceStorage55.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList61 = invoiceStorage55.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList61);
        Invoice invoice63 = null;
        invoiceStorage44.addInvoice(invoice63);
        java.util.List<Invoice> invoiceList65 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList66 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList67 = invoiceStorage44.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList67);
        invoiceStorage0.addAllInvoices(invoiceList67);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 9");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNull(invoice31);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNull(invoice60);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNotNull(invoiceList67);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0736");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList15 = invoiceStorage14.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage14.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage14.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage14.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage14.getAllInvoices();
        Invoice invoice23 = invoiceStorage14.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList24 = invoiceStorage14.getAllInvoices();
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage25.addInvoice(invoice29);
        Invoice invoice32 = invoiceStorage25.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList33 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage25.getAllInvoices();
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList36 = invoiceStorage35.getAllInvoices();
        Invoice invoice37 = null;
        invoiceStorage35.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage35.getAllInvoices();
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        Invoice invoice41 = null;
        invoiceStorage40.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage40.getAllInvoices();
        invoiceStorage35.addAllInvoices(invoiceList43);
        Invoice invoice46 = invoiceStorage35.getInvoice(0);
        InvoiceStorage invoiceStorage47 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList48 = invoiceStorage47.getAllInvoices();
        Invoice invoice49 = null;
        invoiceStorage47.addInvoice(invoice49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage47.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage47.addInvoice(invoice52);
        InvoiceStorage invoiceStorage54 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList55 = invoiceStorage54.getAllInvoices();
        Invoice invoice56 = null;
        invoiceStorage54.addInvoice(invoice56);
        java.util.List<Invoice> invoiceList58 = invoiceStorage54.getAllInvoices();
        InvoiceStorage invoiceStorage59 = new InvoiceStorage();
        Invoice invoice60 = null;
        invoiceStorage59.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage59.getAllInvoices();
        invoiceStorage54.addAllInvoices(invoiceList62);
        invoiceStorage47.addAllInvoices(invoiceList62);
        invoiceStorage35.addAllInvoices(invoiceList62);
        invoiceStorage25.addAllInvoices(invoiceList62);
        invoiceStorage14.addAllInvoices(invoiceList62);
        invoiceStorage0.addAllInvoices(invoiceList62);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice70 = invoiceStorage0.getInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice23);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNull(invoice32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNull(invoice46);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList55);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNotNull(invoiceList62);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0737");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice17 = null;
        invoiceStorage0.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        invoiceStorage24.addAllInvoices(invoiceList39);
        Invoice invoice42 = null;
        invoiceStorage24.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList46 = invoiceStorage45.getAllInvoices();
        Invoice invoice47 = null;
        invoiceStorage45.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage45.getAllInvoices();
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        Invoice invoice51 = null;
        invoiceStorage50.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage50.getAllInvoices();
        invoiceStorage45.addAllInvoices(invoiceList53);
        Invoice invoice56 = invoiceStorage45.getInvoice(0);
        InvoiceStorage invoiceStorage57 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList58 = invoiceStorage57.getAllInvoices();
        Invoice invoice59 = null;
        invoiceStorage57.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage57.getAllInvoices();
        Invoice invoice62 = null;
        invoiceStorage57.addInvoice(invoice62);
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList65 = invoiceStorage64.getAllInvoices();
        Invoice invoice66 = null;
        invoiceStorage64.addInvoice(invoice66);
        java.util.List<Invoice> invoiceList68 = invoiceStorage64.getAllInvoices();
        InvoiceStorage invoiceStorage69 = new InvoiceStorage();
        Invoice invoice70 = null;
        invoiceStorage69.addInvoice(invoice70);
        java.util.List<Invoice> invoiceList72 = invoiceStorage69.getAllInvoices();
        invoiceStorage64.addAllInvoices(invoiceList72);
        invoiceStorage57.addAllInvoices(invoiceList72);
        invoiceStorage45.addAllInvoices(invoiceList72);
        invoiceStorage24.addAllInvoices(invoiceList72);
        invoiceStorage19.addAllInvoices(invoiceList72);
        invoiceStorage0.addAllInvoices(invoiceList72);
        java.lang.Class<?> wildcardClass79 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNull(invoice56);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0738");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList14);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        Invoice invoice22 = null;
        invoiceStorage21.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage21.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage16.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList27);
        Invoice invoice30 = invoiceStorage0.getInvoice((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass31 = invoice30.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNull(invoice30);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0739");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice26 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.lang.Class<?> wildcardClass27 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNull(invoice26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0740");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList15);
        Invoice invoice18 = invoiceStorage10.getInvoice(0);
        Invoice invoice19 = null;
        invoiceStorage10.addInvoice(invoice19);
        Invoice invoice21 = null;
        invoiceStorage10.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList24 = invoiceStorage23.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage23.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        Invoice invoice29 = null;
        invoiceStorage28.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage28.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage23.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList33);
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList36 = invoiceStorage35.getAllInvoices();
        Invoice invoice37 = null;
        invoiceStorage35.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage35.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage35.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage35.getAllInvoices();
        Invoice invoice43 = null;
        invoiceStorage35.addInvoice(invoice43);
        Invoice invoice45 = null;
        invoiceStorage35.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage35.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList47);
        invoiceStorage0.addAllInvoices(invoiceList47);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice18);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList47);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0741");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice9 = invoiceStorage0.getInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList7);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0742");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass24 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0743");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList29 = invoiceStorage28.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage28.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        Invoice invoice34 = null;
        invoiceStorage33.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage33.getAllInvoices();
        invoiceStorage28.addAllInvoices(invoiceList36);
        invoiceStorage27.addAllInvoices(invoiceList36);
        Invoice invoice39 = null;
        invoiceStorage27.addInvoice(invoice39);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage41.addInvoice(invoice44);
        Invoice invoice46 = null;
        invoiceStorage41.addInvoice(invoice46);
        Invoice invoice48 = null;
        invoiceStorage41.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList51 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList52 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList53 = invoiceStorage41.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList53);
        invoiceStorage0.addAllInvoices(invoiceList53);
        java.util.List<Invoice> invoiceList56 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList59 = invoiceStorage58.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage58.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage58.getAllInvoices();
        Invoice invoice63 = null;
        invoiceStorage58.addInvoice(invoice63);
        java.util.List<Invoice> invoiceList65 = invoiceStorage58.getAllInvoices();
        Invoice invoice66 = null;
        invoiceStorage58.addInvoice(invoice66);
        invoiceStorage58.deleteInvoice(0);
        Invoice invoice70 = null;
        invoiceStorage58.addInvoice(invoice70);
        java.util.List<Invoice> invoiceList72 = invoiceStorage58.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage58.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage58.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList75);
        java.lang.Class<?> wildcardClass77 = invoiceList75.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0744");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        Invoice invoice10 = invoiceStorage0.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass12 = invoiceList11.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0745");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage21.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage21.getAllInvoices();
        invoiceStorage21.deleteInvoice(0);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage32.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList38 = invoiceStorage32.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList38);
        Invoice invoice40 = null;
        invoiceStorage21.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList43 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList44 = invoiceStorage21.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList44);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList44);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0746");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage25.addInvoice(invoice33);
        Invoice invoice35 = null;
        invoiceStorage25.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage25.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList37);
        Invoice invoice39 = null;
        invoiceStorage0.addInvoice(invoice39);
        Invoice invoice42 = invoiceStorage0.getInvoice((int) (byte) 1);
        Invoice invoice43 = null;
        invoiceStorage0.addInvoice(invoice43);
        Invoice invoice46 = invoiceStorage0.getInvoice(10);
        Invoice invoice47 = null;
        invoiceStorage0.addInvoice(invoice47);
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNull(invoice46);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0747");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage9.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage17.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage17.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList36);
        invoiceStorage17.addAllInvoices(invoiceList36);
        invoiceStorage9.addAllInvoices(invoiceList36);
        invoiceStorage0.addAllInvoices(invoiceList36);
        Invoice invoice41 = null;
        invoiceStorage0.addInvoice(invoice41);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        Invoice invoice48 = invoiceStorage43.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList49 = invoiceStorage43.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList49);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNull(invoice48);
        org.junit.Assert.assertNotNull(invoiceList49);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0748");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice39 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        Invoice invoice46 = null;
        invoiceStorage45.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage45.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList48);
        Invoice invoice51 = invoiceStorage40.getInvoice(0);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage52.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage52.addInvoice(invoice57);
        InvoiceStorage invoiceStorage59 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList60 = invoiceStorage59.getAllInvoices();
        Invoice invoice61 = null;
        invoiceStorage59.addInvoice(invoice61);
        java.util.List<Invoice> invoiceList63 = invoiceStorage59.getAllInvoices();
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        Invoice invoice65 = null;
        invoiceStorage64.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage64.getAllInvoices();
        invoiceStorage59.addAllInvoices(invoiceList67);
        invoiceStorage52.addAllInvoices(invoiceList67);
        invoiceStorage40.addAllInvoices(invoiceList67);
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList72 = invoiceStorage71.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage71.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage71.getAllInvoices();
        InvoiceStorage invoiceStorage76 = new InvoiceStorage();
        Invoice invoice77 = null;
        invoiceStorage76.addInvoice(invoice77);
        java.util.List<Invoice> invoiceList79 = invoiceStorage76.getAllInvoices();
        invoiceStorage71.addAllInvoices(invoiceList79);
        Invoice invoice82 = invoiceStorage71.getInvoice(0);
        invoiceStorage71.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList85 = invoiceStorage71.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList85);
        invoiceStorage0.addAllInvoices(invoiceList85);
        InvoiceStorage invoiceStorage88 = new InvoiceStorage();
        Invoice invoice89 = null;
        invoiceStorage88.addInvoice(invoice89);
        java.util.List<Invoice> invoiceList91 = invoiceStorage88.getAllInvoices();
        Invoice invoice92 = null;
        invoiceStorage88.addInvoice(invoice92);
        Invoice invoice95 = invoiceStorage88.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList96 = invoiceStorage88.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList96);
        Invoice invoice99 = invoiceStorage0.getInvoice(1);
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNull(invoice51);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList63);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNotNull(invoiceList79);
        org.junit.Assert.assertNull(invoice82);
        org.junit.Assert.assertNotNull(invoiceList85);
        org.junit.Assert.assertNotNull(invoiceList91);
        org.junit.Assert.assertNull(invoice95);
        org.junit.Assert.assertNotNull(invoiceList96);
        org.junit.Assert.assertNull(invoice99);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0749");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage6.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage0.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList18 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList18);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0750");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0751");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0752");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice15 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0753");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice15 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0754");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage5.addInvoice(invoice13);
        invoiceStorage5.deleteInvoice(0);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList18 = invoiceStorage17.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage17.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        Invoice invoice23 = null;
        invoiceStorage22.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage22.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage17.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList27);
        Invoice invoice29 = null;
        invoiceStorage5.addInvoice(invoice29);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage35.addInvoice(invoice39);
        Invoice invoice42 = invoiceStorage35.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList43 = invoiceStorage35.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList43);
        invoiceStorage5.addAllInvoices(invoiceList43);
        java.util.List<Invoice> invoiceList46 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList47 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList49);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0755");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        Invoice invoice27 = null;
        invoiceStorage0.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        invoiceStorage30.addAllInvoices(invoiceList38);
        invoiceStorage29.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        Invoice invoice42 = null;
        invoiceStorage0.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage0.addInvoice(invoice44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice48 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 9");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList46);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0756");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage0.addInvoice(invoice14);
        java.lang.Class<?> wildcardClass16 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0757");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage6.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        java.lang.Class<?> wildcardClass18 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0758");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        Invoice invoice10 = invoiceStorage5.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage11.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList19 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage23.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage23.getAllInvoices();
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        Invoice invoice32 = null;
        invoiceStorage31.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage31.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage31.addInvoice(invoice35);
        Invoice invoice37 = null;
        invoiceStorage31.addInvoice(invoice37);
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList40 = invoiceStorage39.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage39.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage39.getAllInvoices();
        Invoice invoice44 = null;
        invoiceStorage39.addInvoice(invoice44);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage46.getAllInvoices();
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        invoiceStorage39.addAllInvoices(invoiceList50);
        invoiceStorage31.addAllInvoices(invoiceList50);
        invoiceStorage23.addAllInvoices(invoiceList50);
        invoiceStorage5.addAllInvoices(invoiceList50);
        invoiceStorage0.addAllInvoices(invoiceList50);
        Invoice invoice56 = null;
        invoiceStorage0.addInvoice(invoice56);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNull(invoice10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList50);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0759");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice39 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        Invoice invoice46 = null;
        invoiceStorage45.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage45.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList48);
        Invoice invoice51 = invoiceStorage40.getInvoice(0);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage52.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage52.addInvoice(invoice57);
        InvoiceStorage invoiceStorage59 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList60 = invoiceStorage59.getAllInvoices();
        Invoice invoice61 = null;
        invoiceStorage59.addInvoice(invoice61);
        java.util.List<Invoice> invoiceList63 = invoiceStorage59.getAllInvoices();
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        Invoice invoice65 = null;
        invoiceStorage64.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage64.getAllInvoices();
        invoiceStorage59.addAllInvoices(invoiceList67);
        invoiceStorage52.addAllInvoices(invoiceList67);
        invoiceStorage40.addAllInvoices(invoiceList67);
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList72 = invoiceStorage71.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage71.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage71.getAllInvoices();
        InvoiceStorage invoiceStorage76 = new InvoiceStorage();
        Invoice invoice77 = null;
        invoiceStorage76.addInvoice(invoice77);
        java.util.List<Invoice> invoiceList79 = invoiceStorage76.getAllInvoices();
        invoiceStorage71.addAllInvoices(invoiceList79);
        Invoice invoice82 = invoiceStorage71.getInvoice(0);
        invoiceStorage71.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList85 = invoiceStorage71.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList85);
        invoiceStorage0.addAllInvoices(invoiceList85);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice89 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNull(invoice51);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList63);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNotNull(invoiceList79);
        org.junit.Assert.assertNull(invoice82);
        org.junit.Assert.assertNotNull(invoiceList85);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0760");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        Invoice invoice14 = invoiceStorage0.getInvoice(0);
        Invoice invoice16 = invoiceStorage0.getInvoice((int) (byte) 1);
        Invoice invoice18 = invoiceStorage0.getInvoice((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice20 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNull(invoice18);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0761");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        Invoice invoice24 = invoiceStorage19.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList35 = invoiceStorage25.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList35);
        invoiceStorage0.addAllInvoices(invoiceList35);
        Invoice invoice38 = null;
        invoiceStorage0.addInvoice(invoice38);
        Invoice invoice40 = null;
        invoiceStorage0.addInvoice(invoice40);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice43 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList35);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0762");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        invoiceStorage24.addAllInvoices(invoiceList39);
        invoiceStorage0.addAllInvoices(invoiceList39);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0763");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList26 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0764");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage0.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        Invoice invoice22 = null;
        invoiceStorage21.addInvoice(invoice22);
        Invoice invoice24 = null;
        invoiceStorage21.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage21.addInvoice(invoice26);
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList29 = invoiceStorage28.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage28.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage28.addInvoice(invoice33);
        Invoice invoice35 = null;
        invoiceStorage28.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage28.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage21.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList39);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice42 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList39);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0765");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage6.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage0.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0766");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice17 = null;
        invoiceStorage0.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        invoiceStorage24.addAllInvoices(invoiceList39);
        Invoice invoice42 = null;
        invoiceStorage24.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList46 = invoiceStorage45.getAllInvoices();
        Invoice invoice47 = null;
        invoiceStorage45.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage45.getAllInvoices();
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        Invoice invoice51 = null;
        invoiceStorage50.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage50.getAllInvoices();
        invoiceStorage45.addAllInvoices(invoiceList53);
        Invoice invoice56 = invoiceStorage45.getInvoice(0);
        InvoiceStorage invoiceStorage57 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList58 = invoiceStorage57.getAllInvoices();
        Invoice invoice59 = null;
        invoiceStorage57.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage57.getAllInvoices();
        Invoice invoice62 = null;
        invoiceStorage57.addInvoice(invoice62);
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList65 = invoiceStorage64.getAllInvoices();
        Invoice invoice66 = null;
        invoiceStorage64.addInvoice(invoice66);
        java.util.List<Invoice> invoiceList68 = invoiceStorage64.getAllInvoices();
        InvoiceStorage invoiceStorage69 = new InvoiceStorage();
        Invoice invoice70 = null;
        invoiceStorage69.addInvoice(invoice70);
        java.util.List<Invoice> invoiceList72 = invoiceStorage69.getAllInvoices();
        invoiceStorage64.addAllInvoices(invoiceList72);
        invoiceStorage57.addAllInvoices(invoiceList72);
        invoiceStorage45.addAllInvoices(invoiceList72);
        invoiceStorage24.addAllInvoices(invoiceList72);
        invoiceStorage19.addAllInvoices(invoiceList72);
        invoiceStorage0.addAllInvoices(invoiceList72);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice80 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNull(invoice56);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList72);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0767");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage21.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList30 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList31 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList32 = invoiceStorage21.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList32);
        java.lang.Class<?> wildcardClass34 = invoiceList32.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0768");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass12 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0769");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice13 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0770");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage0.addInvoice(invoice14);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice17 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0771");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass23 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0772");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList13);
        Invoice invoice16 = invoiceStorage8.getInvoice(0);
        Invoice invoice17 = null;
        invoiceStorage8.addInvoice(invoice17);
        Invoice invoice19 = null;
        invoiceStorage8.addInvoice(invoice19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        Invoice invoice27 = null;
        invoiceStorage26.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage26.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage21.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList31);
        invoiceStorage0.addAllInvoices(invoiceList31);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice35 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList31);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0773");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage10.addInvoice(invoice14);
        Invoice invoice17 = invoiceStorage10.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList19 = invoiceStorage18.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage18.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage18.getAllInvoices();
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList26);
        Invoice invoice29 = invoiceStorage18.getInvoice(0);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage30.addInvoice(invoice35);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList38 = invoiceStorage37.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage37.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        InvoiceStorage invoiceStorage42 = new InvoiceStorage();
        Invoice invoice43 = null;
        invoiceStorage42.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage42.getAllInvoices();
        invoiceStorage37.addAllInvoices(invoiceList45);
        invoiceStorage30.addAllInvoices(invoiceList45);
        invoiceStorage18.addAllInvoices(invoiceList45);
        invoiceStorage10.addAllInvoices(invoiceList45);
        Invoice invoice51 = invoiceStorage10.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage52.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage52.addInvoice(invoice57);
        java.util.List<Invoice> invoiceList59 = invoiceStorage52.getAllInvoices();
        java.util.List<Invoice> invoiceList60 = invoiceStorage52.getAllInvoices();
        java.util.List<Invoice> invoiceList61 = invoiceStorage52.getAllInvoices();
        java.util.List<Invoice> invoiceList62 = invoiceStorage52.getAllInvoices();
        java.util.List<Invoice> invoiceList63 = invoiceStorage52.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList63);
        invoiceStorage0.addAllInvoices(invoiceList63);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice67 = invoiceStorage0.getInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice29);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNull(invoice51);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList63);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0774");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage10.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage10.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage10.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage10.getAllInvoices();
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage23.addInvoice(invoice27);
        Invoice invoice30 = invoiceStorage23.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList31 = invoiceStorage23.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList31);
        invoiceStorage0.addAllInvoices(invoiceList31);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice30);
        org.junit.Assert.assertNotNull(invoiceList31);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0775");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        java.util.List<Invoice> invoiceList18 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage21.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage21.getAllInvoices();
        invoiceStorage21.deleteInvoice(0);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage32.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList38 = invoiceStorage32.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice42 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0776");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        Invoice invoice27 = null;
        invoiceStorage26.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage26.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList29);
        Invoice invoice32 = invoiceStorage21.getInvoice(0);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList34 = invoiceStorage33.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage33.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage33.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage33.addInvoice(invoice38);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        Invoice invoice41 = null;
        invoiceStorage40.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage40.getAllInvoices();
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        invoiceStorage33.addAllInvoices(invoiceList44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage33.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList46);
        invoiceStorage0.addAllInvoices(invoiceList46);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNull(invoice32);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList46);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0777");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass13 = invoiceList12.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0778");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage11.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList18 = invoiceStorage17.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage17.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        Invoice invoice23 = null;
        invoiceStorage22.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage22.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage17.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList30);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList30);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0779");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass9 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0780");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        Invoice invoice5 = null;
        invoiceStorage4.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage4.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage4.addInvoice(invoice8);
        Invoice invoice11 = invoiceStorage4.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList12 = invoiceStorage4.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass16 = invoiceList15.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0781");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList23 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0782");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 1);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice14 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0783");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList15);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList18 = invoiceStorage17.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage17.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        Invoice invoice23 = null;
        invoiceStorage22.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage22.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList25);
        Invoice invoice28 = invoiceStorage17.getInvoice(0);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage29.addInvoice(invoice34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage41.getAllInvoices();
        invoiceStorage36.addAllInvoices(invoiceList44);
        invoiceStorage29.addAllInvoices(invoiceList44);
        invoiceStorage17.addAllInvoices(invoiceList44);
        invoiceStorage10.addAllInvoices(invoiceList44);
        invoiceStorage0.addAllInvoices(invoiceList44);
        java.lang.Class<?> wildcardClass50 = invoiceList44.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNull(invoice28);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0784");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList17);
        Invoice invoice20 = invoiceStorage12.getInvoice(0);
        Invoice invoice21 = null;
        invoiceStorage12.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage12.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList29);
        invoiceStorage12.deleteInvoice(0);
        invoiceStorage12.deleteInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        invoiceStorage35.addAllInvoices(invoiceList40);
        Invoice invoice43 = invoiceStorage35.getInvoice(0);
        Invoice invoice44 = null;
        invoiceStorage35.addInvoice(invoice44);
        Invoice invoice46 = null;
        invoiceStorage35.addInvoice(invoice46);
        InvoiceStorage invoiceStorage48 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList49 = invoiceStorage48.getAllInvoices();
        Invoice invoice50 = null;
        invoiceStorage48.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage48.getAllInvoices();
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        invoiceStorage48.addAllInvoices(invoiceList56);
        java.util.List<Invoice> invoiceList58 = invoiceStorage48.getAllInvoices();
        invoiceStorage35.addAllInvoices(invoiceList58);
        invoiceStorage12.addAllInvoices(invoiceList58);
        invoiceStorage0.addAllInvoices(invoiceList58);
        java.lang.Class<?> wildcardClass62 = invoiceList58.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNull(invoice20);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNull(invoice43);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0785");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList40);
        invoiceStorage24.addAllInvoices(invoiceList40);
        invoiceStorage0.addAllInvoices(invoiceList40);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage46.getAllInvoices();
        Invoice invoice50 = null;
        invoiceStorage46.addInvoice(invoice50);
        Invoice invoice53 = invoiceStorage46.getInvoice((int) (byte) 1);
        invoiceStorage46.deleteInvoice((int) (short) 0);
        Invoice invoice56 = null;
        invoiceStorage46.addInvoice(invoice56);
        java.util.List<Invoice> invoiceList58 = invoiceStorage46.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList58);
        Invoice invoice61 = invoiceStorage0.getInvoice(1);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice63 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNull(invoice53);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNull(invoice61);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0786");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        Invoice invoice30 = null;
        invoiceStorage0.addInvoice(invoice30);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0787");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage10.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList16 = invoiceStorage10.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage10.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList23);
        invoiceStorage0.addAllInvoices(invoiceList23);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage26.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage26.addInvoice(invoice31);
        Invoice invoice33 = null;
        invoiceStorage26.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage26.getAllInvoices();
        invoiceStorage26.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList38 = invoiceStorage26.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList38);
        java.lang.Class<?> wildcardClass40 = invoiceList38.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNull(invoice15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0788");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        Invoice invoice8 = null;
        invoiceStorage7.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage7.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage7.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage7.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage19.addInvoice(invoice23);
        Invoice invoice26 = invoiceStorage19.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList27 = invoiceStorage19.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList27);
        invoiceStorage7.addAllInvoices(invoiceList27);
        Invoice invoice31 = invoiceStorage7.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList32 = invoiceStorage7.getAllInvoices();
        invoiceStorage7.deleteInvoice(1);
        java.util.List<Invoice> invoiceList35 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList35);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNull(invoice26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNull(invoice31);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0789");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.lang.Class<?> wildcardClass12 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0790");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        Invoice invoice21 = null;
        invoiceStorage0.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList28);
        Invoice invoice31 = invoiceStorage23.getInvoice(0);
        Invoice invoice32 = null;
        invoiceStorage23.addInvoice(invoice32);
        Invoice invoice34 = null;
        invoiceStorage23.addInvoice(invoice34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage36.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage36.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList42);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage44.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        Invoice invoice49 = null;
        invoiceStorage44.addInvoice(invoice49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList52 = invoiceStorage44.getAllInvoices();
        invoiceStorage44.deleteInvoice(0);
        InvoiceStorage invoiceStorage55 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList56 = invoiceStorage55.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage55.addInvoice(invoice57);
        Invoice invoice60 = invoiceStorage55.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList61 = invoiceStorage55.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList61);
        Invoice invoice63 = null;
        invoiceStorage44.addInvoice(invoice63);
        java.util.List<Invoice> invoiceList65 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList66 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList67 = invoiceStorage44.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList67);
        invoiceStorage0.addAllInvoices(invoiceList67);
        java.lang.Class<?> wildcardClass70 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNull(invoice31);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNull(invoice60);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0791");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        Invoice invoice23 = invoiceStorage0.getInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList24 = null;
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.addAllInvoices(invoiceList24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice23);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0792");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage9.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage17.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage17.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList36);
        invoiceStorage17.addAllInvoices(invoiceList36);
        invoiceStorage9.addAllInvoices(invoiceList36);
        invoiceStorage0.addAllInvoices(invoiceList36);
        Invoice invoice42 = invoiceStorage0.getInvoice(1);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice44 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNull(invoice42);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0793");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage10.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList16 = invoiceStorage10.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage10.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList23);
        invoiceStorage0.addAllInvoices(invoiceList23);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage26.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage26.addInvoice(invoice31);
        Invoice invoice33 = null;
        invoiceStorage26.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage26.getAllInvoices();
        invoiceStorage26.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList38 = invoiceStorage26.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList38);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice41 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNull(invoice15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0794");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage0.addInvoice(invoice15);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage17.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage22.getAllInvoices();
        java.util.List<Invoice> invoiceList30 = invoiceStorage22.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage17.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList32);
        java.lang.Class<?> wildcardClass34 = invoiceList32.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0795");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage0.getAllInvoices();
        Invoice invoice27 = invoiceStorage0.getInvoice((int) (short) 0);
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNull(invoice27);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0796");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage10.addInvoice(invoice14);
        Invoice invoice17 = invoiceStorage10.getInvoice((int) (byte) 1);
        invoiceStorage10.deleteInvoice((int) (short) 0);
        Invoice invoice20 = null;
        invoiceStorage10.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice25 = invoiceStorage0.getInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList22);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0797");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0798");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList17);
        Invoice invoice20 = invoiceStorage12.getInvoice(0);
        Invoice invoice21 = null;
        invoiceStorage12.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage12.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList29);
        invoiceStorage0.addAllInvoices(invoiceList29);
        java.lang.Class<?> wildcardClass32 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNull(invoice20);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0799");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0800");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList26 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass27 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0801");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList20);
        Invoice invoice23 = invoiceStorage15.getInvoice(0);
        Invoice invoice24 = null;
        invoiceStorage15.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage15.addInvoice(invoice26);
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        Invoice invoice29 = null;
        invoiceStorage28.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage28.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage28.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage28.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage36.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage36.getAllInvoices();
        java.util.List<Invoice> invoiceList44 = invoiceStorage36.getAllInvoices();
        java.util.List<Invoice> invoiceList45 = invoiceStorage36.getAllInvoices();
        java.util.List<Invoice> invoiceList46 = invoiceStorage36.getAllInvoices();
        java.util.List<Invoice> invoiceList47 = invoiceStorage36.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList47);
        invoiceStorage0.addAllInvoices(invoiceList47);
        java.util.List<Invoice> invoiceList50 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice23);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0802");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage6.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage18.addInvoice(invoice22);
        Invoice invoice24 = null;
        invoiceStorage18.addInvoice(invoice24);
        Invoice invoice27 = invoiceStorage18.getInvoice((int) (short) 1);
        Invoice invoice28 = null;
        invoiceStorage18.addInvoice(invoice28);
        Invoice invoice30 = null;
        invoiceStorage18.addInvoice(invoice30);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList34 = invoiceStorage33.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage33.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage33.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList37);
        Invoice invoice39 = null;
        invoiceStorage32.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage32.getAllInvoices();
        java.util.List<Invoice> invoiceList42 = invoiceStorage32.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList42);
        invoiceStorage0.addAllInvoices(invoiceList42);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice27);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList42);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0803");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (byte) 1);
        Invoice invoice25 = null;
        invoiceStorage0.addInvoice(invoice25);
        invoiceStorage0.deleteInvoice((int) (short) 1);
        java.lang.Class<?> wildcardClass29 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0804");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(1);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice14 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0805");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList7);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0806");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage22.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList29);
        Invoice invoice31 = null;
        invoiceStorage0.addInvoice(invoice31);
        invoiceStorage0.deleteInvoice(0);
        Invoice invoice36 = invoiceStorage0.getInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = invoice36.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNull(invoice36);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0807");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass9 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0808");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0809");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage11.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList18 = invoiceStorage17.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage17.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        Invoice invoice23 = null;
        invoiceStorage22.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage22.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage17.getAllInvoices();
        invoiceStorage6.addAllInvoices(invoiceList28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList30);
        invoiceStorage0.deleteInvoice(1);
        Invoice invoice34 = null;
        invoiceStorage0.addInvoice(invoice34);
        Invoice invoice36 = null;
        invoiceStorage0.addInvoice(invoice36);
        java.lang.Class<?> wildcardClass38 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0810");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage5.addInvoice(invoice9);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage11.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage11.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList17);
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice23 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0811");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList15);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0812");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList26);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0813");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        invoiceStorage0.deleteInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        Invoice invoice15 = null;
        invoiceStorage14.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage14.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage14.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage14.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList22 = invoiceStorage14.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage14.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice26 = invoiceStorage0.getInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0814");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage8.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage8.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage8.getAllInvoices();
        Invoice invoice17 = invoiceStorage8.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList18 = invoiceStorage8.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList18);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice23 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList18);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0815");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage30.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage30.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList38 = invoiceStorage30.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        java.util.List<Invoice> invoiceList41 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice43 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0816");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList33);
        Invoice invoice36 = invoiceStorage25.getInvoice(0);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList38 = invoiceStorage37.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage37.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage37.addInvoice(invoice42);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        Invoice invoice45 = null;
        invoiceStorage44.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        invoiceStorage37.addAllInvoices(invoiceList48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage37.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList50);
        Invoice invoice52 = null;
        invoiceStorage25.addInvoice(invoice52);
        InvoiceStorage invoiceStorage54 = new InvoiceStorage();
        InvoiceStorage invoiceStorage55 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList56 = invoiceStorage55.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage55.addInvoice(invoice57);
        java.util.List<Invoice> invoiceList59 = invoiceStorage55.getAllInvoices();
        InvoiceStorage invoiceStorage60 = new InvoiceStorage();
        Invoice invoice61 = null;
        invoiceStorage60.addInvoice(invoice61);
        java.util.List<Invoice> invoiceList63 = invoiceStorage60.getAllInvoices();
        invoiceStorage55.addAllInvoices(invoiceList63);
        invoiceStorage54.addAllInvoices(invoiceList63);
        invoiceStorage25.addAllInvoices(invoiceList63);
        invoiceStorage0.addAllInvoices(invoiceList63);
        java.lang.Class<?> wildcardClass68 = invoiceList63.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice36);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList63);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0817");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        Invoice invoice17 = invoiceStorage13.getInvoice((int) (short) 0);
        Invoice invoice18 = null;
        invoiceStorage13.addInvoice(invoice18);
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        invoiceStorage20.addAllInvoices(invoiceList25);
        Invoice invoice28 = invoiceStorage20.getInvoice(0);
        Invoice invoice29 = null;
        invoiceStorage20.addInvoice(invoice29);
        Invoice invoice31 = null;
        invoiceStorage20.addInvoice(invoice31);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList34 = invoiceStorage33.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage33.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage33.getAllInvoices();
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        invoiceStorage33.addAllInvoices(invoiceList41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage33.getAllInvoices();
        invoiceStorage20.addAllInvoices(invoiceList43);
        invoiceStorage13.addAllInvoices(invoiceList43);
        invoiceStorage0.addAllInvoices(invoiceList43);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice48 = invoiceStorage0.getInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNull(invoice28);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList43);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0818");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        Invoice invoice17 = invoiceStorage13.getInvoice((int) (short) 0);
        Invoice invoice18 = null;
        invoiceStorage13.addInvoice(invoice18);
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        invoiceStorage20.addAllInvoices(invoiceList25);
        Invoice invoice28 = invoiceStorage20.getInvoice(0);
        Invoice invoice29 = null;
        invoiceStorage20.addInvoice(invoice29);
        Invoice invoice31 = null;
        invoiceStorage20.addInvoice(invoice31);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList34 = invoiceStorage33.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage33.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage33.getAllInvoices();
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        invoiceStorage33.addAllInvoices(invoiceList41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage33.getAllInvoices();
        invoiceStorage20.addAllInvoices(invoiceList43);
        invoiceStorage13.addAllInvoices(invoiceList43);
        invoiceStorage0.addAllInvoices(invoiceList43);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice48 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNull(invoice28);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList43);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0819");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass13 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0820");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0821");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        Invoice invoice21 = null;
        invoiceStorage20.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage20.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList23);
        Invoice invoice26 = invoiceStorage15.getInvoice(0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList29 = invoiceStorage28.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage28.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        Invoice invoice40 = null;
        invoiceStorage39.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage39.getAllInvoices();
        invoiceStorage34.addAllInvoices(invoiceList42);
        Invoice invoice45 = invoiceStorage34.getInvoice(0);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList47 = invoiceStorage46.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage46.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage46.addInvoice(invoice51);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList54 = invoiceStorage53.getAllInvoices();
        Invoice invoice55 = null;
        invoiceStorage53.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        Invoice invoice59 = null;
        invoiceStorage58.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage58.getAllInvoices();
        invoiceStorage53.addAllInvoices(invoiceList61);
        invoiceStorage46.addAllInvoices(invoiceList61);
        invoiceStorage34.addAllInvoices(invoiceList61);
        invoiceStorage27.addAllInvoices(invoiceList61);
        invoiceStorage27.deleteInvoice(0);
        java.util.List<Invoice> invoiceList68 = invoiceStorage27.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList68);
        invoiceStorage0.addAllInvoices(invoiceList68);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice72 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNull(invoice26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList68);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0822");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList26);
        Invoice invoice29 = invoiceStorage21.getInvoice(0);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage30.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage30.getAllInvoices();
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage38.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage38.addInvoice(invoice44);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList47 = invoiceStorage46.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage46.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage46.addInvoice(invoice51);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        invoiceStorage46.addAllInvoices(invoiceList57);
        invoiceStorage38.addAllInvoices(invoiceList57);
        invoiceStorage30.addAllInvoices(invoiceList57);
        invoiceStorage21.addAllInvoices(invoiceList57);
        Invoice invoice62 = null;
        invoiceStorage21.addInvoice(invoice62);
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList65 = invoiceStorage64.getAllInvoices();
        Invoice invoice66 = null;
        invoiceStorage64.addInvoice(invoice66);
        Invoice invoice69 = invoiceStorage64.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList70 = invoiceStorage64.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList70);
        invoiceStorage0.addAllInvoices(invoiceList70);
        Invoice invoice74 = invoiceStorage0.getInvoice((int) (byte) 0);
        invoiceStorage0.deleteInvoice(0);
        java.lang.Class<?> wildcardClass77 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice29);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNull(invoice69);
        org.junit.Assert.assertNotNull(invoiceList70);
        org.junit.Assert.assertNull(invoice74);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0823");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage11.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        Invoice invoice22 = null;
        invoiceStorage21.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage21.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList24);
        invoiceStorage11.addAllInvoices(invoiceList24);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        Invoice invoice28 = null;
        invoiceStorage27.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage27.getAllInvoices();
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage27.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage27.getAllInvoices();
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList36 = invoiceStorage35.getAllInvoices();
        Invoice invoice37 = null;
        invoiceStorage35.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage35.getAllInvoices();
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        Invoice invoice41 = null;
        invoiceStorage40.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage40.getAllInvoices();
        invoiceStorage35.addAllInvoices(invoiceList43);
        invoiceStorage27.addAllInvoices(invoiceList43);
        invoiceStorage11.addAllInvoices(invoiceList43);
        invoiceStorage11.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList49 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList51 = invoiceStorage50.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage50.addInvoice(invoice52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage50.getAllInvoices();
        Invoice invoice55 = null;
        invoiceStorage50.addInvoice(invoice55);
        InvoiceStorage invoiceStorage57 = new InvoiceStorage();
        Invoice invoice58 = null;
        invoiceStorage57.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage57.getAllInvoices();
        java.util.List<Invoice> invoiceList61 = invoiceStorage57.getAllInvoices();
        invoiceStorage50.addAllInvoices(invoiceList61);
        java.util.List<Invoice> invoiceList63 = invoiceStorage50.getAllInvoices();
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList65 = invoiceStorage64.getAllInvoices();
        Invoice invoice66 = null;
        invoiceStorage64.addInvoice(invoice66);
        java.util.List<Invoice> invoiceList68 = invoiceStorage64.getAllInvoices();
        Invoice invoice69 = null;
        invoiceStorage64.addInvoice(invoice69);
        java.util.List<Invoice> invoiceList71 = invoiceStorage64.getAllInvoices();
        Invoice invoice72 = null;
        invoiceStorage64.addInvoice(invoice72);
        Invoice invoice74 = null;
        invoiceStorage64.addInvoice(invoice74);
        java.util.List<Invoice> invoiceList76 = invoiceStorage64.getAllInvoices();
        InvoiceStorage invoiceStorage77 = new InvoiceStorage();
        Invoice invoice78 = null;
        invoiceStorage77.addInvoice(invoice78);
        java.util.List<Invoice> invoiceList80 = invoiceStorage77.getAllInvoices();
        Invoice invoice81 = null;
        invoiceStorage77.addInvoice(invoice81);
        Invoice invoice84 = invoiceStorage77.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList85 = invoiceStorage77.getAllInvoices();
        invoiceStorage64.addAllInvoices(invoiceList85);
        invoiceStorage50.addAllInvoices(invoiceList85);
        java.util.List<Invoice> invoiceList88 = invoiceStorage50.getAllInvoices();
        InvoiceStorage invoiceStorage89 = new InvoiceStorage();
        InvoiceStorage invoiceStorage90 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList91 = invoiceStorage90.getAllInvoices();
        Invoice invoice92 = null;
        invoiceStorage90.addInvoice(invoice92);
        java.util.List<Invoice> invoiceList94 = invoiceStorage90.getAllInvoices();
        invoiceStorage89.addAllInvoices(invoiceList94);
        java.util.List<Invoice> invoiceList96 = invoiceStorage89.getAllInvoices();
        invoiceStorage50.addAllInvoices(invoiceList96);
        invoiceStorage11.addAllInvoices(invoiceList96);
        invoiceStorage0.addAllInvoices(invoiceList96);
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList63);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList71);
        org.junit.Assert.assertNotNull(invoiceList76);
        org.junit.Assert.assertNotNull(invoiceList80);
        org.junit.Assert.assertNull(invoice84);
        org.junit.Assert.assertNotNull(invoiceList85);
        org.junit.Assert.assertNotNull(invoiceList88);
        org.junit.Assert.assertNotNull(invoiceList91);
        org.junit.Assert.assertNotNull(invoiceList94);
        org.junit.Assert.assertNotNull(invoiceList96);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0824");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage15.addInvoice(invoice20);
        Invoice invoice22 = null;
        invoiceStorage15.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage15.getAllInvoices();
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage25.addInvoice(invoice33);
        Invoice invoice35 = null;
        invoiceStorage25.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage25.getAllInvoices();
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage38.addInvoice(invoice42);
        Invoice invoice45 = invoiceStorage38.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList46 = invoiceStorage38.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList46);
        invoiceStorage15.addAllInvoices(invoiceList46);
        java.util.List<Invoice> invoiceList49 = invoiceStorage15.getAllInvoices();
        java.util.List<Invoice> invoiceList50 = invoiceStorage15.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 1);
        invoiceStorage0.deleteInvoice(0);
        java.util.List<Invoice> invoiceList57 = null;
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.addAllInvoices(invoiceList57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList52);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0825");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage18.addInvoice(invoice22);
        Invoice invoice24 = null;
        invoiceStorage18.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage26.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage26.addInvoice(invoice31);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        Invoice invoice34 = null;
        invoiceStorage33.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage33.getAllInvoices();
        java.util.List<Invoice> invoiceList37 = invoiceStorage33.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList37);
        invoiceStorage18.addAllInvoices(invoiceList37);
        invoiceStorage0.addAllInvoices(invoiceList37);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice42 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList37);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0826");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        Invoice invoice23 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice27 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice23);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0827");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList27);
        invoiceStorage12.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        java.lang.Class<?> wildcardClass31 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0828");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice30 = invoiceStorage0.getInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0829");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice39 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        Invoice invoice46 = null;
        invoiceStorage45.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage45.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList48);
        Invoice invoice51 = invoiceStorage40.getInvoice(0);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage52.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage52.addInvoice(invoice57);
        InvoiceStorage invoiceStorage59 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList60 = invoiceStorage59.getAllInvoices();
        Invoice invoice61 = null;
        invoiceStorage59.addInvoice(invoice61);
        java.util.List<Invoice> invoiceList63 = invoiceStorage59.getAllInvoices();
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        Invoice invoice65 = null;
        invoiceStorage64.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage64.getAllInvoices();
        invoiceStorage59.addAllInvoices(invoiceList67);
        invoiceStorage52.addAllInvoices(invoiceList67);
        invoiceStorage40.addAllInvoices(invoiceList67);
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList72 = invoiceStorage71.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage71.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage71.getAllInvoices();
        InvoiceStorage invoiceStorage76 = new InvoiceStorage();
        Invoice invoice77 = null;
        invoiceStorage76.addInvoice(invoice77);
        java.util.List<Invoice> invoiceList79 = invoiceStorage76.getAllInvoices();
        invoiceStorage71.addAllInvoices(invoiceList79);
        Invoice invoice82 = invoiceStorage71.getInvoice(0);
        invoiceStorage71.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList85 = invoiceStorage71.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList85);
        invoiceStorage0.addAllInvoices(invoiceList85);
        InvoiceStorage invoiceStorage88 = new InvoiceStorage();
        Invoice invoice89 = null;
        invoiceStorage88.addInvoice(invoice89);
        java.util.List<Invoice> invoiceList91 = invoiceStorage88.getAllInvoices();
        Invoice invoice92 = null;
        invoiceStorage88.addInvoice(invoice92);
        Invoice invoice95 = invoiceStorage88.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList96 = invoiceStorage88.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList96);
        java.util.List<Invoice> invoiceList98 = invoiceStorage0.getAllInvoices();
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNull(invoice51);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList63);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNotNull(invoiceList79);
        org.junit.Assert.assertNull(invoice82);
        org.junit.Assert.assertNotNull(invoiceList85);
        org.junit.Assert.assertNotNull(invoiceList91);
        org.junit.Assert.assertNull(invoice95);
        org.junit.Assert.assertNotNull(invoiceList96);
        org.junit.Assert.assertNotNull(invoiceList98);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0830");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0831");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage11.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        Invoice invoice22 = null;
        invoiceStorage21.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage21.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList24);
        invoiceStorage11.addAllInvoices(invoiceList24);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage27.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        Invoice invoice35 = null;
        invoiceStorage34.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage34.getAllInvoices();
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList38);
        invoiceStorage11.addAllInvoices(invoiceList38);
        Invoice invoice41 = null;
        invoiceStorage11.addInvoice(invoice41);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage43.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage43.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage43.getAllInvoices();
        Invoice invoice52 = invoiceStorage43.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList53 = invoiceStorage43.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList53);
        invoiceStorage0.addAllInvoices(invoiceList53);
        InvoiceStorage invoiceStorage56 = new InvoiceStorage();
        Invoice invoice57 = null;
        invoiceStorage56.addInvoice(invoice57);
        Invoice invoice60 = invoiceStorage56.getInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList61 = invoiceStorage56.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList61);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNull(invoice15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNull(invoice52);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNull(invoice60);
        org.junit.Assert.assertNotNull(invoiceList61);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0832");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        Invoice invoice24 = invoiceStorage13.getInvoice(0);
        invoiceStorage13.deleteInvoice((int) (short) 0);
        Invoice invoice27 = null;
        invoiceStorage13.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage29.addInvoice(invoice34);
        Invoice invoice36 = null;
        invoiceStorage29.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage29.getAllInvoices();
        invoiceStorage29.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList41 = invoiceStorage29.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList41);
        invoiceStorage0.addAllInvoices(invoiceList41);
        Invoice invoice45 = invoiceStorage0.getInvoice(1);
        java.util.List<Invoice> invoiceList46 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass47 = invoiceList46.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0833");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        Invoice invoice12 = null;
        invoiceStorage9.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage16.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage16.getAllInvoices();
        invoiceStorage9.addAllInvoices(invoiceList25);
        invoiceStorage0.addAllInvoices(invoiceList25);
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        java.lang.Class<?> wildcardClass30 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0834");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList25 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(1);
        java.util.List<Invoice> invoiceList28 = invoiceStorage0.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage0.addInvoice(invoice29);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0835");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        invoiceStorage0.deleteInvoice(1);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0836");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        Invoice invoice21 = null;
        invoiceStorage0.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList24 = invoiceStorage23.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage23.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        Invoice invoice29 = null;
        invoiceStorage28.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage28.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList31);
        Invoice invoice34 = invoiceStorage23.getInvoice(0);
        invoiceStorage23.deleteInvoice((int) (short) 0);
        Invoice invoice37 = null;
        invoiceStorage23.addInvoice(invoice37);
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList40 = invoiceStorage39.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage39.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage39.getAllInvoices();
        Invoice invoice44 = null;
        invoiceStorage39.addInvoice(invoice44);
        Invoice invoice46 = null;
        invoiceStorage39.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage39.getAllInvoices();
        invoiceStorage39.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList51 = invoiceStorage39.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList51);
        invoiceStorage0.addAllInvoices(invoiceList51);
        java.lang.Class<?> wildcardClass54 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNull(invoice34);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0837");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        java.lang.Class<?> wildcardClass30 = invoiceList27.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNull(invoice15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0838");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        Invoice invoice17 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList19 = invoiceStorage18.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage18.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage18.getAllInvoices();
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList26);
        Invoice invoice29 = invoiceStorage18.getInvoice(0);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        invoiceStorage30.addAllInvoices(invoiceList35);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList38 = invoiceStorage37.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage37.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        InvoiceStorage invoiceStorage42 = new InvoiceStorage();
        Invoice invoice43 = null;
        invoiceStorage42.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage42.getAllInvoices();
        invoiceStorage37.addAllInvoices(invoiceList45);
        Invoice invoice48 = invoiceStorage37.getInvoice(0);
        InvoiceStorage invoiceStorage49 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList50 = invoiceStorage49.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage49.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage49.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage49.addInvoice(invoice54);
        InvoiceStorage invoiceStorage56 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList57 = invoiceStorage56.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage56.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage56.getAllInvoices();
        InvoiceStorage invoiceStorage61 = new InvoiceStorage();
        Invoice invoice62 = null;
        invoiceStorage61.addInvoice(invoice62);
        java.util.List<Invoice> invoiceList64 = invoiceStorage61.getAllInvoices();
        invoiceStorage56.addAllInvoices(invoiceList64);
        invoiceStorage49.addAllInvoices(invoiceList64);
        invoiceStorage37.addAllInvoices(invoiceList64);
        invoiceStorage30.addAllInvoices(invoiceList64);
        invoiceStorage30.deleteInvoice(0);
        java.util.List<Invoice> invoiceList71 = invoiceStorage30.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList71);
        invoiceStorage0.addAllInvoices(invoiceList71);
        Invoice invoice74 = null;
        invoiceStorage0.addInvoice(invoice74);
        InvoiceStorage invoiceStorage76 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList77 = invoiceStorage76.getAllInvoices();
        Invoice invoice78 = null;
        invoiceStorage76.addInvoice(invoice78);
        java.util.List<Invoice> invoiceList80 = invoiceStorage76.getAllInvoices();
        Invoice invoice81 = null;
        invoiceStorage76.addInvoice(invoice81);
        InvoiceStorage invoiceStorage83 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList84 = invoiceStorage83.getAllInvoices();
        Invoice invoice85 = null;
        invoiceStorage83.addInvoice(invoice85);
        java.util.List<Invoice> invoiceList87 = invoiceStorage83.getAllInvoices();
        InvoiceStorage invoiceStorage88 = new InvoiceStorage();
        Invoice invoice89 = null;
        invoiceStorage88.addInvoice(invoice89);
        java.util.List<Invoice> invoiceList91 = invoiceStorage88.getAllInvoices();
        invoiceStorage83.addAllInvoices(invoiceList91);
        invoiceStorage76.addAllInvoices(invoiceList91);
        Invoice invoice94 = null;
        invoiceStorage76.addInvoice(invoice94);
        java.util.List<Invoice> invoiceList96 = invoiceStorage76.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList96);
        Invoice invoice98 = null;
        invoiceStorage0.addInvoice(invoice98);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNull(invoice48);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList71);
        org.junit.Assert.assertNotNull(invoiceList77);
        org.junit.Assert.assertNotNull(invoiceList80);
        org.junit.Assert.assertNotNull(invoiceList84);
        org.junit.Assert.assertNotNull(invoiceList87);
        org.junit.Assert.assertNotNull(invoiceList91);
        org.junit.Assert.assertNotNull(invoiceList96);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0839");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList40);
        invoiceStorage24.addAllInvoices(invoiceList40);
        invoiceStorage0.addAllInvoices(invoiceList40);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList46 = invoiceStorage45.getAllInvoices();
        Invoice invoice47 = null;
        invoiceStorage45.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage45.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList49);
        Invoice invoice52 = invoiceStorage44.getInvoice(0);
        java.util.List<Invoice> invoiceList53 = invoiceStorage44.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList53);
        Invoice invoice55 = null;
        invoiceStorage0.addInvoice(invoice55);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNull(invoice52);
        org.junit.Assert.assertNotNull(invoiceList53);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0840");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice39 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage40.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage40.getAllInvoices();
        Invoice invoice49 = invoiceStorage40.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList50 = invoiceStorage40.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList50);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage52.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage52.addInvoice(invoice57);
        Invoice invoice59 = null;
        invoiceStorage52.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage52.getAllInvoices();
        invoiceStorage52.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        Invoice invoice65 = null;
        invoiceStorage64.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage64.getAllInvoices();
        java.util.List<Invoice> invoiceList68 = invoiceStorage64.getAllInvoices();
        invoiceStorage52.addAllInvoices(invoiceList68);
        InvoiceStorage invoiceStorage70 = new InvoiceStorage();
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList72 = invoiceStorage71.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage71.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage71.getAllInvoices();
        invoiceStorage70.addAllInvoices(invoiceList75);
        invoiceStorage52.addAllInvoices(invoiceList75);
        invoiceStorage0.addAllInvoices(invoiceList75);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice80 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNull(invoice49);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0841");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList18 = invoiceStorage17.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage17.addInvoice(invoice19);
        Invoice invoice22 = invoiceStorage17.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList23 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList24 = invoiceStorage17.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList24);
        java.lang.Class<?> wildcardClass26 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNull(invoice22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0842");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        Invoice invoice10 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage11.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage11.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage11.addInvoice(invoice19);
        invoiceStorage11.deleteInvoice(0);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList24 = invoiceStorage23.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage23.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        Invoice invoice29 = null;
        invoiceStorage28.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage28.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage23.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList33);
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        java.util.List<Invoice> invoiceList39 = invoiceStorage35.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage35.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage35.getAllInvoices();
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage43.getAllInvoices();
        InvoiceStorage invoiceStorage48 = new InvoiceStorage();
        Invoice invoice49 = null;
        invoiceStorage48.addInvoice(invoice49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage48.getAllInvoices();
        invoiceStorage43.addAllInvoices(invoiceList51);
        invoiceStorage35.addAllInvoices(invoiceList51);
        invoiceStorage11.addAllInvoices(invoiceList51);
        invoiceStorage11.deleteInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage57 = new InvoiceStorage();
        Invoice invoice58 = null;
        invoiceStorage57.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage57.getAllInvoices();
        Invoice invoice61 = null;
        invoiceStorage57.addInvoice(invoice61);
        Invoice invoice64 = invoiceStorage57.getInvoice((int) (byte) 1);
        invoiceStorage57.deleteInvoice((int) (short) 0);
        Invoice invoice67 = null;
        invoiceStorage57.addInvoice(invoice67);
        java.util.List<Invoice> invoiceList69 = invoiceStorage57.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList69);
        invoiceStorage0.addAllInvoices(invoiceList69);
        Invoice invoice73 = invoiceStorage0.getInvoice(0);
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNull(invoice64);
        org.junit.Assert.assertNotNull(invoiceList69);
        org.junit.Assert.assertNull(invoice73);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0843");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        Invoice invoice17 = invoiceStorage13.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList19 = invoiceStorage18.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage18.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage18.getAllInvoices();
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList26);
        invoiceStorage13.addAllInvoices(invoiceList26);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage29.addInvoice(invoice34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        invoiceStorage29.addAllInvoices(invoiceList40);
        invoiceStorage13.addAllInvoices(invoiceList40);
        invoiceStorage0.addAllInvoices(invoiceList40);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList40);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0844");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage30.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage30.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList38 = invoiceStorage30.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        Invoice invoice42 = invoiceStorage0.getInvoice(1);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice46 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNull(invoice42);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0845");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage0.addInvoice(invoice15);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage17.addInvoice(invoice21);
        Invoice invoice24 = invoiceStorage17.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage29.addInvoice(invoice33);
        Invoice invoice36 = invoiceStorage29.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList37 = invoiceStorage29.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList37);
        invoiceStorage17.addAllInvoices(invoiceList37);
        Invoice invoice41 = invoiceStorage17.getInvoice((int) (short) 1);
        invoiceStorage17.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        InvoiceStorage invoiceStorage45 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList46 = invoiceStorage45.getAllInvoices();
        Invoice invoice47 = null;
        invoiceStorage45.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage45.getAllInvoices();
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        Invoice invoice51 = null;
        invoiceStorage50.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage50.getAllInvoices();
        invoiceStorage45.addAllInvoices(invoiceList53);
        invoiceStorage44.addAllInvoices(invoiceList53);
        Invoice invoice56 = null;
        invoiceStorage44.addInvoice(invoice56);
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        Invoice invoice59 = null;
        invoiceStorage58.addInvoice(invoice59);
        Invoice invoice61 = null;
        invoiceStorage58.addInvoice(invoice61);
        Invoice invoice63 = null;
        invoiceStorage58.addInvoice(invoice63);
        Invoice invoice65 = null;
        invoiceStorage58.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage58.getAllInvoices();
        java.util.List<Invoice> invoiceList68 = invoiceStorage58.getAllInvoices();
        java.util.List<Invoice> invoiceList69 = invoiceStorage58.getAllInvoices();
        java.util.List<Invoice> invoiceList70 = invoiceStorage58.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList70);
        invoiceStorage17.addAllInvoices(invoiceList70);
        java.util.List<Invoice> invoiceList73 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList74 = invoiceStorage17.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList74);
        Invoice invoice76 = null;
        invoiceStorage0.addInvoice(invoice76);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice79 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 12");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice36);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNull(invoice41);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList69);
        org.junit.Assert.assertNotNull(invoiceList70);
        org.junit.Assert.assertNotNull(invoiceList73);
        org.junit.Assert.assertNotNull(invoiceList74);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0846");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList27);
        invoiceStorage12.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        Invoice invoice32 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList33 = invoiceStorage0.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage0.addInvoice(invoice34);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNull(invoice32);
        org.junit.Assert.assertNotNull(invoiceList33);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0847");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0848");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage0.addInvoice(invoice14);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0849");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        Invoice invoice17 = invoiceStorage12.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList19 = invoiceStorage18.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage18.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage18.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage18.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage18.getAllInvoices();
        java.util.List<Invoice> invoiceList26 = invoiceStorage18.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage18.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage18.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage30.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage30.getAllInvoices();
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        Invoice invoice39 = null;
        invoiceStorage38.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage38.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage38.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage38.addInvoice(invoice44);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList47 = invoiceStorage46.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage46.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage46.addInvoice(invoice51);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        invoiceStorage46.addAllInvoices(invoiceList57);
        invoiceStorage38.addAllInvoices(invoiceList57);
        invoiceStorage30.addAllInvoices(invoiceList57);
        invoiceStorage12.addAllInvoices(invoiceList57);
        invoiceStorage0.addAllInvoices(invoiceList57);
        java.util.List<Invoice> invoiceList63 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList63);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0850");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage0.addInvoice(invoice13);
        Invoice invoice15 = null;
        invoiceStorage0.addInvoice(invoice15);
        Invoice invoice17 = null;
        invoiceStorage0.addInvoice(invoice17);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0851");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0852");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList15 = invoiceStorage14.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage14.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage14.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage14.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage14.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage14.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage14.getAllInvoices();
        java.util.List<Invoice> invoiceList24 = invoiceStorage14.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList24);
        invoiceStorage0.addAllInvoices(invoiceList24);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage27.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        Invoice invoice35 = null;
        invoiceStorage34.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage34.getAllInvoices();
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage27.getAllInvoices();
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList42 = invoiceStorage41.getAllInvoices();
        Invoice invoice43 = null;
        invoiceStorage41.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage41.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage41.getAllInvoices();
        Invoice invoice49 = null;
        invoiceStorage41.addInvoice(invoice49);
        Invoice invoice51 = null;
        invoiceStorage41.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage41.getAllInvoices();
        InvoiceStorage invoiceStorage54 = new InvoiceStorage();
        Invoice invoice55 = null;
        invoiceStorage54.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage54.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage54.addInvoice(invoice58);
        Invoice invoice61 = invoiceStorage54.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList62 = invoiceStorage54.getAllInvoices();
        invoiceStorage41.addAllInvoices(invoiceList62);
        invoiceStorage27.addAllInvoices(invoiceList62);
        InvoiceStorage invoiceStorage65 = new InvoiceStorage();
        Invoice invoice66 = null;
        invoiceStorage65.addInvoice(invoice66);
        Invoice invoice68 = null;
        invoiceStorage65.addInvoice(invoice68);
        Invoice invoice70 = null;
        invoiceStorage65.addInvoice(invoice70);
        Invoice invoice72 = null;
        invoiceStorage65.addInvoice(invoice72);
        java.util.List<Invoice> invoiceList74 = invoiceStorage65.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList74);
        invoiceStorage0.addAllInvoices(invoiceList74);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNull(invoice61);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList74);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0853");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList27);
        Invoice invoice30 = invoiceStorage19.getInvoice(0);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage31.addInvoice(invoice36);
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList39 = invoiceStorage38.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage38.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage38.getAllInvoices();
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        Invoice invoice44 = null;
        invoiceStorage43.addInvoice(invoice44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage43.getAllInvoices();
        invoiceStorage38.addAllInvoices(invoiceList46);
        invoiceStorage31.addAllInvoices(invoiceList46);
        invoiceStorage19.addAllInvoices(invoiceList46);
        invoiceStorage12.addAllInvoices(invoiceList46);
        invoiceStorage0.addAllInvoices(invoiceList46);
        java.lang.Class<?> wildcardClass52 = invoiceList46.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNull(invoice30);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0854");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0855");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage0.getInvoice((int) (byte) 0);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice15);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0856");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage18.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage18.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage18.getAllInvoices();
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        Invoice invoice27 = null;
        invoiceStorage26.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage26.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage26.addInvoice(invoice30);
        Invoice invoice32 = null;
        invoiceStorage26.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage34.addInvoice(invoice39);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        invoiceStorage34.addAllInvoices(invoiceList45);
        invoiceStorage26.addAllInvoices(invoiceList45);
        invoiceStorage18.addAllInvoices(invoiceList45);
        invoiceStorage0.addAllInvoices(invoiceList45);
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList51 = invoiceStorage50.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage50.addInvoice(invoice52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage50.getAllInvoices();
        Invoice invoice55 = null;
        invoiceStorage50.addInvoice(invoice55);
        Invoice invoice57 = null;
        invoiceStorage50.addInvoice(invoice57);
        java.util.List<Invoice> invoiceList59 = invoiceStorage50.getAllInvoices();
        invoiceStorage50.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList62 = invoiceStorage50.getAllInvoices();
        InvoiceStorage invoiceStorage63 = new InvoiceStorage();
        Invoice invoice64 = null;
        invoiceStorage63.addInvoice(invoice64);
        Invoice invoice67 = invoiceStorage63.getInvoice((int) (short) 0);
        Invoice invoice68 = null;
        invoiceStorage63.addInvoice(invoice68);
        InvoiceStorage invoiceStorage70 = new InvoiceStorage();
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList72 = invoiceStorage71.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage71.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage71.getAllInvoices();
        invoiceStorage70.addAllInvoices(invoiceList75);
        Invoice invoice78 = invoiceStorage70.getInvoice(0);
        Invoice invoice79 = null;
        invoiceStorage70.addInvoice(invoice79);
        Invoice invoice81 = null;
        invoiceStorage70.addInvoice(invoice81);
        InvoiceStorage invoiceStorage83 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList84 = invoiceStorage83.getAllInvoices();
        Invoice invoice85 = null;
        invoiceStorage83.addInvoice(invoice85);
        java.util.List<Invoice> invoiceList87 = invoiceStorage83.getAllInvoices();
        InvoiceStorage invoiceStorage88 = new InvoiceStorage();
        Invoice invoice89 = null;
        invoiceStorage88.addInvoice(invoice89);
        java.util.List<Invoice> invoiceList91 = invoiceStorage88.getAllInvoices();
        invoiceStorage83.addAllInvoices(invoiceList91);
        java.util.List<Invoice> invoiceList93 = invoiceStorage83.getAllInvoices();
        invoiceStorage70.addAllInvoices(invoiceList93);
        invoiceStorage63.addAllInvoices(invoiceList93);
        invoiceStorage50.addAllInvoices(invoiceList93);
        invoiceStorage0.addAllInvoices(invoiceList93);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNull(invoice67);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNull(invoice78);
        org.junit.Assert.assertNotNull(invoiceList84);
        org.junit.Assert.assertNotNull(invoiceList87);
        org.junit.Assert.assertNotNull(invoiceList91);
        org.junit.Assert.assertNotNull(invoiceList93);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0857");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        invoiceStorage24.addAllInvoices(invoiceList39);
        invoiceStorage0.addAllInvoices(invoiceList39);
        Invoice invoice43 = null;
        invoiceStorage0.addInvoice(invoice43);
        java.lang.Class<?> wildcardClass45 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0858");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage24.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        invoiceStorage32.addAllInvoices(invoiceList40);
        invoiceStorage24.addAllInvoices(invoiceList40);
        invoiceStorage0.addAllInvoices(invoiceList40);
        Invoice invoice44 = null;
        invoiceStorage0.addInvoice(invoice44);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList40);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0859");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice14 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0860");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass26 = invoiceList25.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0861");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        Invoice invoice8 = null;
        invoiceStorage7.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage7.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass14 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0862");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage5.addInvoice(invoice9);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage11.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage11.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList17);
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice23 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0863");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList28);
        Invoice invoice31 = invoiceStorage23.getInvoice(0);
        Invoice invoice32 = null;
        invoiceStorage23.addInvoice(invoice32);
        Invoice invoice34 = null;
        invoiceStorage23.addInvoice(invoice34);
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage41.getAllInvoices();
        invoiceStorage36.addAllInvoices(invoiceList44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage36.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList46);
        InvoiceStorage invoiceStorage48 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList49 = invoiceStorage48.getAllInvoices();
        Invoice invoice50 = null;
        invoiceStorage48.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage48.getAllInvoices();
        Invoice invoice53 = null;
        invoiceStorage48.addInvoice(invoice53);
        java.util.List<Invoice> invoiceList55 = invoiceStorage48.getAllInvoices();
        Invoice invoice56 = null;
        invoiceStorage48.addInvoice(invoice56);
        Invoice invoice58 = null;
        invoiceStorage48.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage48.getAllInvoices();
        invoiceStorage23.addAllInvoices(invoiceList60);
        Invoice invoice62 = null;
        invoiceStorage23.addInvoice(invoice62);
        java.util.List<Invoice> invoiceList64 = invoiceStorage23.getAllInvoices();
        java.util.List<Invoice> invoiceList65 = invoiceStorage23.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList65);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice68 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 13");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNull(invoice31);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList55);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList65);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0864");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList5 = invoiceStorage4.getAllInvoices();
        Invoice invoice6 = null;
        invoiceStorage4.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage4.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage4.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage4.getAllInvoices();
        java.util.List<Invoice> invoiceList12 = invoiceStorage4.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage4.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage4.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0865");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        InvoiceStorage invoiceStorage3 = new InvoiceStorage();
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList5 = invoiceStorage4.getAllInvoices();
        Invoice invoice6 = null;
        invoiceStorage4.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage4.getAllInvoices();
        invoiceStorage3.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage3.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        Invoice invoice21 = null;
        invoiceStorage20.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage20.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage20.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage20.addInvoice(invoice26);
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList29 = invoiceStorage28.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage28.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage28.addInvoice(invoice33);
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        java.util.List<Invoice> invoiceList39 = invoiceStorage35.getAllInvoices();
        invoiceStorage28.addAllInvoices(invoiceList39);
        invoiceStorage20.addAllInvoices(invoiceList39);
        invoiceStorage12.addAllInvoices(invoiceList39);
        invoiceStorage3.addAllInvoices(invoiceList39);
        Invoice invoice44 = null;
        invoiceStorage3.addInvoice(invoice44);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList47 = invoiceStorage46.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage46.addInvoice(invoice48);
        Invoice invoice51 = invoiceStorage46.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList52 = invoiceStorage46.getAllInvoices();
        invoiceStorage3.addAllInvoices(invoiceList52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage3.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList54);
        Invoice invoice56 = null;
        invoiceStorage0.addInvoice(invoice56);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNull(invoice51);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList54);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0866");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        Invoice invoice9 = null;
        invoiceStorage8.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage8.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage8.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage8.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage8.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage8.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice21 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0867");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        invoiceStorage14.addAllInvoices(invoiceList19);
        Invoice invoice21 = null;
        invoiceStorage14.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage14.getAllInvoices();
        java.util.List<Invoice> invoiceList24 = invoiceStorage14.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice28 = invoiceStorage0.getInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList26);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0868");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList38 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList38);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0869");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        Invoice invoice30 = null;
        invoiceStorage0.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        Invoice invoice34 = null;
        invoiceStorage33.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage33.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList39 = invoiceStorage38.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage38.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage38.getAllInvoices();
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        Invoice invoice44 = null;
        invoiceStorage43.addInvoice(invoice44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage43.getAllInvoices();
        invoiceStorage38.addAllInvoices(invoiceList46);
        invoiceStorage33.addAllInvoices(invoiceList46);
        invoiceStorage0.addAllInvoices(invoiceList46);
        java.util.List<Invoice> invoiceList50 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList51 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList51);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0870");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice31 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0871");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage10.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList23);
        Invoice invoice26 = invoiceStorage18.getInvoice(0);
        Invoice invoice27 = null;
        invoiceStorage18.addInvoice(invoice27);
        Invoice invoice29 = null;
        invoiceStorage18.addInvoice(invoice29);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage31.getAllInvoices();
        invoiceStorage18.addAllInvoices(invoiceList41);
        invoiceStorage10.addAllInvoices(invoiceList41);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage44.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        InvoiceStorage invoiceStorage49 = new InvoiceStorage();
        Invoice invoice50 = null;
        invoiceStorage49.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage49.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage44.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList54);
        invoiceStorage0.addAllInvoices(invoiceList54);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice58 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNull(invoice26);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList54);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0872");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList27);
        invoiceStorage12.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        Invoice invoice42 = invoiceStorage31.getInvoice(0);
        invoiceStorage31.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList45 = invoiceStorage31.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList45);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice48 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList45);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0873");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        java.lang.Class<?> wildcardClass14 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0874");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(1);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage12.getAllInvoices();
        Invoice invoice20 = null;
        invoiceStorage12.addInvoice(invoice20);
        invoiceStorage12.deleteInvoice(0);
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage24.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList34);
        Invoice invoice36 = null;
        invoiceStorage12.addInvoice(invoice36);
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList39 = invoiceStorage38.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage38.addInvoice(invoice40);
        InvoiceStorage invoiceStorage42 = new InvoiceStorage();
        Invoice invoice43 = null;
        invoiceStorage42.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage42.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage42.addInvoice(invoice46);
        Invoice invoice49 = invoiceStorage42.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList50 = invoiceStorage42.getAllInvoices();
        invoiceStorage38.addAllInvoices(invoiceList50);
        invoiceStorage12.addAllInvoices(invoiceList50);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        java.util.List<Invoice> invoiceList58 = invoiceStorage53.getAllInvoices();
        InvoiceStorage invoiceStorage59 = new InvoiceStorage();
        Invoice invoice60 = null;
        invoiceStorage59.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage59.getAllInvoices();
        InvoiceStorage invoiceStorage63 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList64 = invoiceStorage63.getAllInvoices();
        Invoice invoice65 = null;
        invoiceStorage63.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage63.getAllInvoices();
        Invoice invoice68 = null;
        invoiceStorage63.addInvoice(invoice68);
        java.util.List<Invoice> invoiceList70 = invoiceStorage63.getAllInvoices();
        java.util.List<Invoice> invoiceList71 = invoiceStorage63.getAllInvoices();
        java.util.List<Invoice> invoiceList72 = invoiceStorage63.getAllInvoices();
        java.util.List<Invoice> invoiceList73 = invoiceStorage63.getAllInvoices();
        invoiceStorage59.addAllInvoices(invoiceList73);
        invoiceStorage53.addAllInvoices(invoiceList73);
        invoiceStorage12.addAllInvoices(invoiceList73);
        invoiceStorage0.addAllInvoices(invoiceList73);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNull(invoice49);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList70);
        org.junit.Assert.assertNotNull(invoiceList71);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList73);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0875");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0876");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage12.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage17.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage23.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage23.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList29);
        invoiceStorage12.addAllInvoices(invoiceList29);
        java.util.List<Invoice> invoiceList32 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList32);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0877");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList17);
        Invoice invoice20 = invoiceStorage12.getInvoice(0);
        Invoice invoice21 = null;
        invoiceStorage12.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage12.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList29);
        invoiceStorage12.deleteInvoice(0);
        invoiceStorage12.deleteInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        invoiceStorage35.addAllInvoices(invoiceList40);
        Invoice invoice43 = invoiceStorage35.getInvoice(0);
        Invoice invoice44 = null;
        invoiceStorage35.addInvoice(invoice44);
        Invoice invoice46 = null;
        invoiceStorage35.addInvoice(invoice46);
        InvoiceStorage invoiceStorage48 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList49 = invoiceStorage48.getAllInvoices();
        Invoice invoice50 = null;
        invoiceStorage48.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage48.getAllInvoices();
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        invoiceStorage48.addAllInvoices(invoiceList56);
        java.util.List<Invoice> invoiceList58 = invoiceStorage48.getAllInvoices();
        invoiceStorage35.addAllInvoices(invoiceList58);
        invoiceStorage12.addAllInvoices(invoiceList58);
        invoiceStorage0.addAllInvoices(invoiceList58);
        java.lang.Class<?> wildcardClass62 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNull(invoice20);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNull(invoice43);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0878");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage10.getInvoice((int) (short) 0);
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList18 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList18);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList18);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0879");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        Invoice invoice5 = null;
        invoiceStorage4.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage4.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage4.addInvoice(invoice8);
        Invoice invoice11 = invoiceStorage4.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList12 = invoiceStorage4.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        Invoice invoice19 = null;
        invoiceStorage16.addInvoice(invoice19);
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList28 = invoiceStorage27.getAllInvoices();
        Invoice invoice29 = null;
        invoiceStorage27.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage27.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage26.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList33);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList33);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0880");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        java.lang.Class<?> wildcardClass36 = invoiceList32.getClass();
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0881");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice18 = null;
        invoiceStorage12.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage12.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList29);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        Invoice invoice42 = invoiceStorage31.getInvoice(0);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage43.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage43.addInvoice(invoice48);
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList51 = invoiceStorage50.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage50.addInvoice(invoice52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage50.getAllInvoices();
        InvoiceStorage invoiceStorage55 = new InvoiceStorage();
        Invoice invoice56 = null;
        invoiceStorage55.addInvoice(invoice56);
        java.util.List<Invoice> invoiceList58 = invoiceStorage55.getAllInvoices();
        invoiceStorage50.addAllInvoices(invoiceList58);
        invoiceStorage43.addAllInvoices(invoiceList58);
        invoiceStorage31.addAllInvoices(invoiceList58);
        invoiceStorage24.addAllInvoices(invoiceList58);
        invoiceStorage12.addAllInvoices(invoiceList58);
        invoiceStorage0.addAllInvoices(invoiceList58);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice66 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList58);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0882");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice11 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0883");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(1);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage12.getAllInvoices();
        Invoice invoice21 = invoiceStorage12.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        invoiceStorage22.addAllInvoices(invoiceList33);
        invoiceStorage12.addAllInvoices(invoiceList33);
        invoiceStorage0.addAllInvoices(invoiceList33);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList38 = invoiceStorage37.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage37.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage37.addInvoice(invoice42);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage44.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        InvoiceStorage invoiceStorage49 = new InvoiceStorage();
        Invoice invoice50 = null;
        invoiceStorage49.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage49.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList52);
        invoiceStorage37.addAllInvoices(invoiceList52);
        Invoice invoice55 = null;
        invoiceStorage37.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage37.getAllInvoices();
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList59 = invoiceStorage58.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage58.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage58.getAllInvoices();
        InvoiceStorage invoiceStorage63 = new InvoiceStorage();
        Invoice invoice64 = null;
        invoiceStorage63.addInvoice(invoice64);
        java.util.List<Invoice> invoiceList66 = invoiceStorage63.getAllInvoices();
        invoiceStorage58.addAllInvoices(invoiceList66);
        Invoice invoice69 = invoiceStorage58.getInvoice(0);
        InvoiceStorage invoiceStorage70 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList71 = invoiceStorage70.getAllInvoices();
        Invoice invoice72 = null;
        invoiceStorage70.addInvoice(invoice72);
        java.util.List<Invoice> invoiceList74 = invoiceStorage70.getAllInvoices();
        Invoice invoice75 = null;
        invoiceStorage70.addInvoice(invoice75);
        InvoiceStorage invoiceStorage77 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList78 = invoiceStorage77.getAllInvoices();
        Invoice invoice79 = null;
        invoiceStorage77.addInvoice(invoice79);
        java.util.List<Invoice> invoiceList81 = invoiceStorage77.getAllInvoices();
        InvoiceStorage invoiceStorage82 = new InvoiceStorage();
        Invoice invoice83 = null;
        invoiceStorage82.addInvoice(invoice83);
        java.util.List<Invoice> invoiceList85 = invoiceStorage82.getAllInvoices();
        invoiceStorage77.addAllInvoices(invoiceList85);
        invoiceStorage70.addAllInvoices(invoiceList85);
        invoiceStorage58.addAllInvoices(invoiceList85);
        invoiceStorage37.addAllInvoices(invoiceList85);
        java.util.List<Invoice> invoiceList90 = invoiceStorage37.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList90);
        java.util.List<Invoice> invoiceList92 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList93 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass94 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNull(invoice69);
        org.junit.Assert.assertNotNull(invoiceList71);
        org.junit.Assert.assertNotNull(invoiceList74);
        org.junit.Assert.assertNotNull(invoiceList78);
        org.junit.Assert.assertNotNull(invoiceList81);
        org.junit.Assert.assertNotNull(invoiceList85);
        org.junit.Assert.assertNotNull(invoiceList90);
        org.junit.Assert.assertNotNull(invoiceList92);
        org.junit.Assert.assertNotNull(invoiceList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0884");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice14 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0885");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage8.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage8.addInvoice(invoice13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        Invoice invoice21 = null;
        invoiceStorage20.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage20.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList23);
        invoiceStorage8.addAllInvoices(invoiceList23);
        Invoice invoice26 = null;
        invoiceStorage8.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage8.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        Invoice invoice35 = null;
        invoiceStorage34.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage34.getAllInvoices();
        invoiceStorage29.addAllInvoices(invoiceList37);
        Invoice invoice40 = invoiceStorage29.getInvoice(0);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList42 = invoiceStorage41.getAllInvoices();
        Invoice invoice43 = null;
        invoiceStorage41.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage41.addInvoice(invoice46);
        InvoiceStorage invoiceStorage48 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList49 = invoiceStorage48.getAllInvoices();
        Invoice invoice50 = null;
        invoiceStorage48.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage48.getAllInvoices();
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        invoiceStorage48.addAllInvoices(invoiceList56);
        invoiceStorage41.addAllInvoices(invoiceList56);
        invoiceStorage29.addAllInvoices(invoiceList56);
        invoiceStorage8.addAllInvoices(invoiceList56);
        java.util.List<Invoice> invoiceList61 = invoiceStorage8.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList61);
        java.lang.Class<?> wildcardClass63 = invoiceList61.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNull(invoice40);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0886");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        Invoice invoice27 = null;
        invoiceStorage0.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList29);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0887");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        Invoice invoice9 = null;
        invoiceStorage8.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage8.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage8.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage8.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage8.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage8.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice19 = invoiceStorage0.getInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0888");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice28 = invoiceStorage0.getInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0889");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice39 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage40.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage40.getAllInvoices();
        Invoice invoice49 = invoiceStorage40.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList50 = invoiceStorage40.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList50);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage52.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage52.addInvoice(invoice57);
        Invoice invoice59 = null;
        invoiceStorage52.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage52.getAllInvoices();
        invoiceStorage52.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        Invoice invoice65 = null;
        invoiceStorage64.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage64.getAllInvoices();
        java.util.List<Invoice> invoiceList68 = invoiceStorage64.getAllInvoices();
        invoiceStorage52.addAllInvoices(invoiceList68);
        InvoiceStorage invoiceStorage70 = new InvoiceStorage();
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList72 = invoiceStorage71.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage71.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage71.getAllInvoices();
        invoiceStorage70.addAllInvoices(invoiceList75);
        invoiceStorage52.addAllInvoices(invoiceList75);
        invoiceStorage0.addAllInvoices(invoiceList75);
        InvoiceStorage invoiceStorage79 = new InvoiceStorage();
        InvoiceStorage invoiceStorage80 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList81 = invoiceStorage80.getAllInvoices();
        Invoice invoice82 = null;
        invoiceStorage80.addInvoice(invoice82);
        java.util.List<Invoice> invoiceList84 = invoiceStorage80.getAllInvoices();
        InvoiceStorage invoiceStorage85 = new InvoiceStorage();
        Invoice invoice86 = null;
        invoiceStorage85.addInvoice(invoice86);
        java.util.List<Invoice> invoiceList88 = invoiceStorage85.getAllInvoices();
        invoiceStorage80.addAllInvoices(invoiceList88);
        invoiceStorage79.addAllInvoices(invoiceList88);
        invoiceStorage0.addAllInvoices(invoiceList88);
        java.lang.Class<?> wildcardClass92 = invoiceStorage0.getClass();
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNull(invoice49);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNotNull(invoiceList81);
        org.junit.Assert.assertNotNull(invoiceList84);
        org.junit.Assert.assertNotNull(invoiceList88);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0890");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        Invoice invoice27 = null;
        invoiceStorage0.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage29.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage29.getAllInvoices();
        Invoice invoice37 = null;
        invoiceStorage29.addInvoice(invoice37);
        invoiceStorage29.deleteInvoice(0);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList42 = invoiceStorage41.getAllInvoices();
        Invoice invoice43 = null;
        invoiceStorage41.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage46.getAllInvoices();
        invoiceStorage41.addAllInvoices(invoiceList49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage41.getAllInvoices();
        invoiceStorage29.addAllInvoices(invoiceList51);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage53.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage53.getAllInvoices();
        InvoiceStorage invoiceStorage61 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList62 = invoiceStorage61.getAllInvoices();
        Invoice invoice63 = null;
        invoiceStorage61.addInvoice(invoice63);
        java.util.List<Invoice> invoiceList65 = invoiceStorage61.getAllInvoices();
        InvoiceStorage invoiceStorage66 = new InvoiceStorage();
        Invoice invoice67 = null;
        invoiceStorage66.addInvoice(invoice67);
        java.util.List<Invoice> invoiceList69 = invoiceStorage66.getAllInvoices();
        invoiceStorage61.addAllInvoices(invoiceList69);
        invoiceStorage53.addAllInvoices(invoiceList69);
        invoiceStorage29.addAllInvoices(invoiceList69);
        java.util.List<Invoice> invoiceList73 = invoiceStorage29.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList73);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice76 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 11");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList69);
        org.junit.Assert.assertNotNull(invoiceList73);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0891");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.lang.Class<?> wildcardClass27 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0892");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        Invoice invoice8 = null;
        invoiceStorage7.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage7.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage16.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList22 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0893");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice12 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0894");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass11 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0895");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage8.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage8.addInvoice(invoice13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        Invoice invoice16 = null;
        invoiceStorage15.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage15.getAllInvoices();
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList19);
        invoiceStorage0.addAllInvoices(invoiceList19);
        Invoice invoice23 = invoiceStorage0.getInvoice(1);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice25 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNull(invoice23);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0896");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage0.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage0.getAllInvoices();
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0897");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage5.addInvoice(invoice13);
        invoiceStorage5.deleteInvoice(0);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList18 = invoiceStorage17.getAllInvoices();
        Invoice invoice19 = null;
        invoiceStorage17.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        Invoice invoice23 = null;
        invoiceStorage22.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage22.getAllInvoices();
        invoiceStorage17.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage17.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList27);
        Invoice invoice29 = null;
        invoiceStorage5.addInvoice(invoice29);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage35.addInvoice(invoice39);
        Invoice invoice42 = invoiceStorage35.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList43 = invoiceStorage35.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList43);
        invoiceStorage5.addAllInvoices(invoiceList43);
        java.util.List<Invoice> invoiceList46 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList47 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage0.getAllInvoices();
        Invoice invoice50 = null;
        invoiceStorage0.addInvoice(invoice50);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNull(invoice42);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList49);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0898");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage9.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage17.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage17.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList36);
        invoiceStorage17.addAllInvoices(invoiceList36);
        invoiceStorage9.addAllInvoices(invoiceList36);
        invoiceStorage0.addAllInvoices(invoiceList36);
        java.lang.Class<?> wildcardClass41 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0899");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        invoiceStorage0.deleteInvoice(0);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList28);
        Invoice invoice30 = null;
        invoiceStorage0.addInvoice(invoice30);
        Invoice invoice32 = null;
        invoiceStorage0.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage34.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage34.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage34.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage34.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList44);
        java.lang.Class<?> wildcardClass46 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0900");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice(0);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice13 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0901");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice12 = invoiceStorage0.getInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0902");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        Invoice invoice27 = null;
        invoiceStorage0.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        invoiceStorage30.addAllInvoices(invoiceList38);
        invoiceStorage29.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        Invoice invoice42 = null;
        invoiceStorage0.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage0.addInvoice(invoice44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage47 = new InvoiceStorage();
        Invoice invoice48 = null;
        invoiceStorage47.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage47.getAllInvoices();
        java.util.List<Invoice> invoiceList51 = invoiceStorage47.getAllInvoices();
        java.util.List<Invoice> invoiceList52 = invoiceStorage47.getAllInvoices();
        invoiceStorage47.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage55 = new InvoiceStorage();
        Invoice invoice56 = null;
        invoiceStorage55.addInvoice(invoice56);
        java.util.List<Invoice> invoiceList58 = invoiceStorage55.getAllInvoices();
        Invoice invoice59 = null;
        invoiceStorage55.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage55.getAllInvoices();
        java.util.List<Invoice> invoiceList62 = invoiceStorage55.getAllInvoices();
        java.util.List<Invoice> invoiceList63 = invoiceStorage55.getAllInvoices();
        invoiceStorage47.addAllInvoices(invoiceList63);
        invoiceStorage0.addAllInvoices(invoiceList63);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList63);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0903");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage12.getAllInvoices();
        Invoice invoice21 = invoiceStorage12.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        invoiceStorage22.addAllInvoices(invoiceList33);
        invoiceStorage12.addAllInvoices(invoiceList33);
        invoiceStorage0.addAllInvoices(invoiceList33);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage37.addInvoice(invoice41);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        Invoice invoice44 = null;
        invoiceStorage43.addInvoice(invoice44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage43.getAllInvoices();
        Invoice invoice47 = null;
        invoiceStorage43.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage43.getAllInvoices();
        invoiceStorage37.addAllInvoices(invoiceList49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage37.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage37.addInvoice(invoice52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage37.getAllInvoices();
        java.util.List<Invoice> invoiceList55 = invoiceStorage37.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList55);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice58 = invoiceStorage0.getInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList55);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0904");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList5 = invoiceStorage4.getAllInvoices();
        Invoice invoice6 = null;
        invoiceStorage4.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage4.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage4.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage4.getAllInvoices();
        java.util.List<Invoice> invoiceList12 = invoiceStorage4.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage4.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage4.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass17 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0905");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = invoice8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNull(invoice8);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0906");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        Invoice invoice20 = invoiceStorage13.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList21 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList21);
        invoiceStorage0.deleteInvoice((int) (short) 1);
        java.lang.Class<?> wildcardClass25 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNull(invoice20);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0907");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        Invoice invoice9 = null;
        invoiceStorage8.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage8.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage8.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage8.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage8.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage8.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        java.lang.Class<?> wildcardClass18 = invoiceList16.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0908");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0909");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        Invoice invoice10 = invoiceStorage0.getInvoice(0);
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice10);
        org.junit.Assert.assertNotNull(invoiceList11);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0910");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage6.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage0.addInvoice(invoice15);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList14);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0911");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice17 = null;
        invoiceStorage0.addInvoice(invoice17);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0912");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice21 = invoiceStorage0.getInvoice((int) (short) 1);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice25 = invoiceStorage0.getInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNull(invoice21);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0913");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage0.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0914");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        invoiceStorage0.deleteInvoice(1);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        Invoice invoice16 = null;
        invoiceStorage15.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage15.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        invoiceStorage20.addAllInvoices(invoiceList28);
        invoiceStorage15.addAllInvoices(invoiceList28);
        java.util.List<Invoice> invoiceList31 = invoiceStorage15.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList31);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice34 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList31);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0915");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage2 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList3 = invoiceStorage2.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage2.addInvoice(invoice4);
        java.util.List<Invoice> invoiceList6 = invoiceStorage2.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage2.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage2.getAllInvoices();
        Invoice invoice11 = invoiceStorage2.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList12 = invoiceStorage2.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage2.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        java.lang.Class<?> wildcardClass15 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0916");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        Invoice invoice24 = invoiceStorage13.getInvoice(0);
        invoiceStorage13.deleteInvoice((int) (short) 0);
        Invoice invoice27 = null;
        invoiceStorage13.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage29.addInvoice(invoice34);
        Invoice invoice36 = null;
        invoiceStorage29.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage29.getAllInvoices();
        invoiceStorage29.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList41 = invoiceStorage29.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList41);
        invoiceStorage0.addAllInvoices(invoiceList41);
        Invoice invoice45 = invoiceStorage0.getInvoice(1);
        java.util.List<Invoice> invoiceList46 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice48 = invoiceStorage0.getInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNotNull(invoiceList46);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0917");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList11 = invoiceStorage10.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage10.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage10.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage10.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage10.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage10.getAllInvoices();
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage23.addInvoice(invoice27);
        Invoice invoice30 = invoiceStorage23.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList31 = invoiceStorage23.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList31);
        invoiceStorage0.addAllInvoices(invoiceList31);
        java.util.List<Invoice> invoiceList34 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList35 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList37 = invoiceStorage36.getAllInvoices();
        Invoice invoice38 = null;
        invoiceStorage36.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage36.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage36.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage36.getAllInvoices();
        Invoice invoice44 = null;
        invoiceStorage36.addInvoice(invoice44);
        invoiceStorage36.deleteInvoice(0);
        Invoice invoice48 = null;
        invoiceStorage36.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage36.getAllInvoices();
        InvoiceStorage invoiceStorage51 = new InvoiceStorage();
        Invoice invoice52 = null;
        invoiceStorage51.addInvoice(invoice52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage51.getAllInvoices();
        java.util.List<Invoice> invoiceList55 = invoiceStorage51.getAllInvoices();
        java.util.List<Invoice> invoiceList56 = invoiceStorage51.getAllInvoices();
        invoiceStorage36.addAllInvoices(invoiceList56);
        invoiceStorage0.addAllInvoices(invoiceList56);
        java.lang.Class<?> wildcardClass59 = invoiceList56.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice30);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList55);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0918");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage15 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList16 = invoiceStorage15.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage15.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage15.getAllInvoices();
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        Invoice invoice21 = null;
        invoiceStorage20.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage20.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList23);
        Invoice invoice26 = invoiceStorage15.getInvoice(0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList29 = invoiceStorage28.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage28.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        Invoice invoice40 = null;
        invoiceStorage39.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage39.getAllInvoices();
        invoiceStorage34.addAllInvoices(invoiceList42);
        Invoice invoice45 = invoiceStorage34.getInvoice(0);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList47 = invoiceStorage46.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage46.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage46.addInvoice(invoice51);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList54 = invoiceStorage53.getAllInvoices();
        Invoice invoice55 = null;
        invoiceStorage53.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        Invoice invoice59 = null;
        invoiceStorage58.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage58.getAllInvoices();
        invoiceStorage53.addAllInvoices(invoiceList61);
        invoiceStorage46.addAllInvoices(invoiceList61);
        invoiceStorage34.addAllInvoices(invoiceList61);
        invoiceStorage27.addAllInvoices(invoiceList61);
        invoiceStorage27.deleteInvoice(0);
        java.util.List<Invoice> invoiceList68 = invoiceStorage27.getAllInvoices();
        invoiceStorage15.addAllInvoices(invoiceList68);
        invoiceStorage0.addAllInvoices(invoiceList68);
        Invoice invoice72 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice74 = invoiceStorage0.getInvoice(1);
        Invoice invoice75 = null;
        invoiceStorage0.addInvoice(invoice75);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNull(invoice26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNull(invoice72);
        org.junit.Assert.assertNull(invoice74);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0919");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0920");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass10 = invoiceList9.getClass();
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0921");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage20.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage20.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage20.getAllInvoices();
        invoiceStorage20.deleteInvoice(0);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage31.getAllInvoices();
        invoiceStorage20.addAllInvoices(invoiceList41);
        invoiceStorage0.addAllInvoices(invoiceList41);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList46 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList47 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList48);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice51 = invoiceStorage0.getInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList48);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0922");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        Invoice invoice30 = null;
        invoiceStorage0.addInvoice(invoice30);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice34 = null;
        invoiceStorage0.addInvoice(invoice34);
        Invoice invoice36 = null;
        invoiceStorage0.addInvoice(invoice36);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice39 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList27);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0923");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage27 = new InvoiceStorage();
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList29 = invoiceStorage28.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage28.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        Invoice invoice34 = null;
        invoiceStorage33.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage33.getAllInvoices();
        invoiceStorage28.addAllInvoices(invoiceList36);
        invoiceStorage27.addAllInvoices(invoiceList36);
        Invoice invoice39 = null;
        invoiceStorage27.addInvoice(invoice39);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        Invoice invoice44 = null;
        invoiceStorage41.addInvoice(invoice44);
        Invoice invoice46 = null;
        invoiceStorage41.addInvoice(invoice46);
        Invoice invoice48 = null;
        invoiceStorage41.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList51 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList52 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList53 = invoiceStorage41.getAllInvoices();
        invoiceStorage27.addAllInvoices(invoiceList53);
        invoiceStorage0.addAllInvoices(invoiceList53);
        java.util.List<Invoice> invoiceList56 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList59 = invoiceStorage58.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage58.addInvoice(invoice60);
        java.util.List<Invoice> invoiceList62 = invoiceStorage58.getAllInvoices();
        Invoice invoice63 = null;
        invoiceStorage58.addInvoice(invoice63);
        java.util.List<Invoice> invoiceList65 = invoiceStorage58.getAllInvoices();
        Invoice invoice66 = null;
        invoiceStorage58.addInvoice(invoice66);
        invoiceStorage58.deleteInvoice(0);
        Invoice invoice70 = null;
        invoiceStorage58.addInvoice(invoice70);
        java.util.List<Invoice> invoiceList72 = invoiceStorage58.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage58.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage58.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList75);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice78 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 11");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNotNull(invoiceList62);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0924");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage0.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage0.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage19.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage26.getAllInvoices();
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        Invoice invoice32 = null;
        invoiceStorage31.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage31.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList34);
        invoiceStorage19.addAllInvoices(invoiceList34);
        java.util.List<Invoice> invoiceList37 = invoiceStorage19.getAllInvoices();
        invoiceStorage19.deleteInvoice(0);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage40.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage40.getAllInvoices();
        java.util.List<Invoice> invoiceList48 = invoiceStorage40.getAllInvoices();
        invoiceStorage40.deleteInvoice(0);
        InvoiceStorage invoiceStorage51 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList52 = invoiceStorage51.getAllInvoices();
        Invoice invoice53 = null;
        invoiceStorage51.addInvoice(invoice53);
        Invoice invoice56 = invoiceStorage51.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList57 = invoiceStorage51.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList57);
        invoiceStorage19.addAllInvoices(invoiceList57);
        invoiceStorage0.addAllInvoices(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNull(invoice56);
        org.junit.Assert.assertNotNull(invoiceList57);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0925");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage22.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList29);
        Invoice invoice31 = null;
        invoiceStorage0.addInvoice(invoice31);
        invoiceStorage0.deleteInvoice(0);
        invoiceStorage0.deleteInvoice(0);
        java.lang.Class<?> wildcardClass37 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0926");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice7 = invoiceStorage0.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList9 = invoiceStorage8.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage8.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage12.addInvoice(invoice16);
        Invoice invoice19 = invoiceStorage12.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList20 = invoiceStorage12.getAllInvoices();
        invoiceStorage8.addAllInvoices(invoiceList20);
        invoiceStorage0.addAllInvoices(invoiceList20);
        Invoice invoice24 = invoiceStorage0.getInvoice((int) (short) 1);
        java.lang.Class<?> wildcardClass25 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice7);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNull(invoice19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0927");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage9.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage17.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage17.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList36);
        invoiceStorage17.addAllInvoices(invoiceList36);
        invoiceStorage9.addAllInvoices(invoiceList36);
        invoiceStorage0.addAllInvoices(invoiceList36);
        invoiceStorage0.deleteInvoice(1);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList36);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0928");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage24.getAllInvoices();
        java.util.List<Invoice> invoiceList35 = invoiceStorage24.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage13.getAllInvoices();
        invoiceStorage13.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList40 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList40);
        java.lang.Class<?> wildcardClass42 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0929");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice9 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList5);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0930");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        Invoice invoice27 = null;
        invoiceStorage0.addInvoice(invoice27);
        Invoice invoice29 = null;
        invoiceStorage0.addInvoice(invoice29);
        Invoice invoice31 = null;
        invoiceStorage0.addInvoice(invoice31);
        Invoice invoice33 = null;
        invoiceStorage0.addInvoice(invoice33);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0931");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage30.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage30.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList38 = invoiceStorage30.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        Invoice invoice42 = invoiceStorage0.getInvoice(1);
        Invoice invoice43 = null;
        invoiceStorage0.addInvoice(invoice43);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNull(invoice42);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0932");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        invoiceStorage0.deleteInvoice(0);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList28);
        Invoice invoice30 = null;
        invoiceStorage0.addInvoice(invoice30);
        Invoice invoice32 = null;
        invoiceStorage0.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage34.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage34.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage34.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage34.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList44);
        Invoice invoice47 = invoiceStorage0.getInvoice((int) (short) 1);
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNull(invoice47);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0933");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice13 = invoiceStorage0.getInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList7);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0934");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        Invoice invoice19 = null;
        invoiceStorage13.addInvoice(invoice19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage21.addInvoice(invoice26);
        InvoiceStorage invoiceStorage28 = new InvoiceStorage();
        Invoice invoice29 = null;
        invoiceStorage28.addInvoice(invoice29);
        java.util.List<Invoice> invoiceList31 = invoiceStorage28.getAllInvoices();
        java.util.List<Invoice> invoiceList32 = invoiceStorage28.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList32);
        invoiceStorage13.addAllInvoices(invoiceList32);
        invoiceStorage9.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        Invoice invoice40 = null;
        invoiceStorage37.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage37.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList42);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice47 = invoiceStorage0.getInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList42);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0935");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        Invoice invoice16 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        java.util.List<Invoice> invoiceList21 = invoiceStorage17.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage17.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage17.getAllInvoices();
        invoiceStorage17.deleteInvoice((int) (short) 1);
        Invoice invoice27 = null;
        invoiceStorage17.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage17.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList29);
        Invoice invoice32 = invoiceStorage0.getInvoice((int) (byte) 1);
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNull(invoice32);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0936");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        Invoice invoice15 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage16.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage16.getAllInvoices();
        invoiceStorage16.deleteInvoice((int) (short) 0);
        Invoice invoice28 = null;
        invoiceStorage16.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage16.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage16.addInvoice(invoice31);
        InvoiceStorage invoiceStorage33 = new InvoiceStorage();
        Invoice invoice34 = null;
        invoiceStorage33.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage33.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage38 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList39 = invoiceStorage38.getAllInvoices();
        Invoice invoice40 = null;
        invoiceStorage38.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage38.getAllInvoices();
        Invoice invoice43 = null;
        invoiceStorage38.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage38.getAllInvoices();
        java.util.List<Invoice> invoiceList46 = invoiceStorage38.getAllInvoices();
        invoiceStorage33.addAllInvoices(invoiceList46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage33.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList48);
        Invoice invoice50 = null;
        invoiceStorage16.addInvoice(invoice50);
        InvoiceStorage invoiceStorage52 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList53 = invoiceStorage52.getAllInvoices();
        Invoice invoice54 = null;
        invoiceStorage52.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage52.getAllInvoices();
        Invoice invoice57 = null;
        invoiceStorage52.addInvoice(invoice57);
        Invoice invoice59 = null;
        invoiceStorage52.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage52.getAllInvoices();
        invoiceStorage52.deleteInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage64 = new InvoiceStorage();
        Invoice invoice65 = null;
        invoiceStorage64.addInvoice(invoice65);
        java.util.List<Invoice> invoiceList67 = invoiceStorage64.getAllInvoices();
        java.util.List<Invoice> invoiceList68 = invoiceStorage64.getAllInvoices();
        invoiceStorage52.addAllInvoices(invoiceList68);
        Invoice invoice70 = null;
        invoiceStorage52.addInvoice(invoice70);
        Invoice invoice73 = invoiceStorage52.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList74 = invoiceStorage52.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList74);
        invoiceStorage0.addAllInvoices(invoiceList74);
        java.lang.Class<?> wildcardClass77 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNull(invoice15);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList67);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNull(invoice73);
        org.junit.Assert.assertNotNull(invoiceList74);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0937");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice9 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0938");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList38 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList40 = invoiceStorage39.getAllInvoices();
        Invoice invoice41 = null;
        invoiceStorage39.addInvoice(invoice41);
        java.util.List<Invoice> invoiceList43 = invoiceStorage39.getAllInvoices();
        Invoice invoice44 = null;
        invoiceStorage39.addInvoice(invoice44);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        Invoice invoice47 = null;
        invoiceStorage46.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage46.getAllInvoices();
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        invoiceStorage39.addAllInvoices(invoiceList50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage39.getAllInvoices();
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList54 = invoiceStorage53.getAllInvoices();
        Invoice invoice55 = null;
        invoiceStorage53.addInvoice(invoice55);
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage53.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage53.getAllInvoices();
        Invoice invoice61 = null;
        invoiceStorage53.addInvoice(invoice61);
        Invoice invoice63 = null;
        invoiceStorage53.addInvoice(invoice63);
        java.util.List<Invoice> invoiceList65 = invoiceStorage53.getAllInvoices();
        InvoiceStorage invoiceStorage66 = new InvoiceStorage();
        Invoice invoice67 = null;
        invoiceStorage66.addInvoice(invoice67);
        java.util.List<Invoice> invoiceList69 = invoiceStorage66.getAllInvoices();
        Invoice invoice70 = null;
        invoiceStorage66.addInvoice(invoice70);
        Invoice invoice73 = invoiceStorage66.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList74 = invoiceStorage66.getAllInvoices();
        invoiceStorage53.addAllInvoices(invoiceList74);
        invoiceStorage39.addAllInvoices(invoiceList74);
        java.util.List<Invoice> invoiceList77 = invoiceStorage39.getAllInvoices();
        InvoiceStorage invoiceStorage78 = new InvoiceStorage();
        InvoiceStorage invoiceStorage79 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList80 = invoiceStorage79.getAllInvoices();
        Invoice invoice81 = null;
        invoiceStorage79.addInvoice(invoice81);
        java.util.List<Invoice> invoiceList83 = invoiceStorage79.getAllInvoices();
        invoiceStorage78.addAllInvoices(invoiceList83);
        java.util.List<Invoice> invoiceList85 = invoiceStorage78.getAllInvoices();
        invoiceStorage39.addAllInvoices(invoiceList85);
        invoiceStorage0.addAllInvoices(invoiceList85);
        invoiceStorage0.deleteInvoice(0);
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList69);
        org.junit.Assert.assertNull(invoice73);
        org.junit.Assert.assertNotNull(invoiceList74);
        org.junit.Assert.assertNotNull(invoiceList77);
        org.junit.Assert.assertNotNull(invoiceList80);
        org.junit.Assert.assertNotNull(invoiceList83);
        org.junit.Assert.assertNotNull(invoiceList85);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0939");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice24 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0940");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass19 = invoiceList18.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0941");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage9.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage17.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage17.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList36);
        invoiceStorage17.addAllInvoices(invoiceList36);
        invoiceStorage9.addAllInvoices(invoiceList36);
        invoiceStorage0.addAllInvoices(invoiceList36);
        Invoice invoice41 = null;
        invoiceStorage0.addInvoice(invoice41);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        Invoice invoice48 = invoiceStorage43.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList49 = invoiceStorage43.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList49);
        Invoice invoice51 = null;
        invoiceStorage0.addInvoice(invoice51);
        java.lang.Class<?> wildcardClass53 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNull(invoice48);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0942");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        invoiceStorage0.deleteInvoice((int) (short) 1);
        Invoice invoice26 = null;
        invoiceStorage0.addInvoice(invoice26);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0943");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage0.addInvoice(invoice26);
        Invoice invoice28 = null;
        invoiceStorage0.addInvoice(invoice28);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0944");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        invoiceStorage1.addAllInvoices(invoiceList9);
        invoiceStorage0.addAllInvoices(invoiceList9);
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        Invoice invoice15 = null;
        invoiceStorage14.addInvoice(invoice15);
        Invoice invoice17 = null;
        invoiceStorage14.addInvoice(invoice17);
        Invoice invoice19 = null;
        invoiceStorage14.addInvoice(invoice19);
        Invoice invoice21 = null;
        invoiceStorage14.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage14.getAllInvoices();
        java.util.List<Invoice> invoiceList24 = invoiceStorage14.getAllInvoices();
        java.util.List<Invoice> invoiceList25 = invoiceStorage14.getAllInvoices();
        java.util.List<Invoice> invoiceList26 = invoiceStorage14.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList26);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice29 = invoiceStorage0.getInvoice((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList26);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0945");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        Invoice invoice13 = null;
        invoiceStorage12.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList15);
        invoiceStorage0.addAllInvoices(invoiceList15);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass24 = invoiceList23.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0946");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass17 = invoiceList16.getClass();
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0947");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0948");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList10);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0949");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage9.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage17.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage17.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList36);
        invoiceStorage17.addAllInvoices(invoiceList36);
        invoiceStorage9.addAllInvoices(invoiceList36);
        invoiceStorage0.addAllInvoices(invoiceList36);
        Invoice invoice41 = null;
        invoiceStorage0.addInvoice(invoice41);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        Invoice invoice48 = invoiceStorage43.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList49 = invoiceStorage43.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage0.getAllInvoices();
        Invoice invoice53 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice55 = invoiceStorage0.getInvoice(0);
        Invoice invoice56 = null;
        invoiceStorage0.addInvoice(invoice56);
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNull(invoice48);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNull(invoice53);
        org.junit.Assert.assertNull(invoice55);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0950");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList21);
        Invoice invoice23 = null;
        invoiceStorage0.addInvoice(invoice23);
        Invoice invoice25 = null;
        invoiceStorage0.addInvoice(invoice25);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0951");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage8 = new InvoiceStorage();
        Invoice invoice9 = null;
        invoiceStorage8.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage8.getAllInvoices();
        java.util.List<Invoice> invoiceList12 = invoiceStorage8.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage8.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage8.getAllInvoices();
        invoiceStorage8.deleteInvoice((int) (short) 1);
        Invoice invoice18 = null;
        invoiceStorage8.addInvoice(invoice18);
        invoiceStorage8.deleteInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList24 = invoiceStorage23.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage23.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        invoiceStorage22.addAllInvoices(invoiceList27);
        Invoice invoice30 = invoiceStorage22.getInvoice(0);
        Invoice invoice31 = null;
        invoiceStorage22.addInvoice(invoice31);
        Invoice invoice33 = null;
        invoiceStorage22.addInvoice(invoice33);
        InvoiceStorage invoiceStorage35 = new InvoiceStorage();
        Invoice invoice36 = null;
        invoiceStorage35.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage35.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage35.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage35.getAllInvoices();
        invoiceStorage22.addAllInvoices(invoiceList41);
        InvoiceStorage invoiceStorage43 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList44 = invoiceStorage43.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage43.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage43.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage43.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage43.getAllInvoices();
        java.util.List<Invoice> invoiceList51 = invoiceStorage43.getAllInvoices();
        java.util.List<Invoice> invoiceList52 = invoiceStorage43.getAllInvoices();
        java.util.List<Invoice> invoiceList53 = invoiceStorage43.getAllInvoices();
        java.util.List<Invoice> invoiceList54 = invoiceStorage43.getAllInvoices();
        invoiceStorage22.addAllInvoices(invoiceList54);
        invoiceStorage8.addAllInvoices(invoiceList54);
        invoiceStorage0.addAllInvoices(invoiceList54);
        java.util.List<Invoice> invoiceList58 = invoiceStorage0.getAllInvoices();
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNull(invoice30);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList58);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0952");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage10.addInvoice(invoice14);
        Invoice invoice17 = invoiceStorage10.getInvoice((int) (byte) 1);
        invoiceStorage10.deleteInvoice((int) (short) 0);
        Invoice invoice20 = null;
        invoiceStorage10.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.lang.Class<?> wildcardClass24 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice17);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0953");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        Invoice invoice20 = invoiceStorage13.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList21 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList21);
        invoiceStorage0.deleteInvoice(0);
        Invoice invoice25 = null;
        invoiceStorage0.addInvoice(invoice25);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNull(invoice20);
        org.junit.Assert.assertNotNull(invoiceList21);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0954");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList17 = invoiceStorage9.getAllInvoices();
        invoiceStorage9.deleteInvoice(0);
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        Invoice invoice25 = invoiceStorage20.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList26 = invoiceStorage20.getAllInvoices();
        invoiceStorage9.addAllInvoices(invoiceList26);
        Invoice invoice28 = null;
        invoiceStorage9.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList31 = invoiceStorage30.getAllInvoices();
        Invoice invoice32 = null;
        invoiceStorage30.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage30.getAllInvoices();
        Invoice invoice35 = null;
        invoiceStorage30.addInvoice(invoice35);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList38 = invoiceStorage37.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage37.addInvoice(invoice39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        InvoiceStorage invoiceStorage42 = new InvoiceStorage();
        Invoice invoice43 = null;
        invoiceStorage42.addInvoice(invoice43);
        java.util.List<Invoice> invoiceList45 = invoiceStorage42.getAllInvoices();
        invoiceStorage37.addAllInvoices(invoiceList45);
        invoiceStorage30.addAllInvoices(invoiceList45);
        invoiceStorage9.addAllInvoices(invoiceList45);
        invoiceStorage0.addAllInvoices(invoiceList45);
        java.lang.Class<?> wildcardClass50 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice25);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList31);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0955");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList27 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice29 = invoiceStorage0.getInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0956");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        invoiceStorage0.deleteInvoice(1);
        Invoice invoice14 = null;
        invoiceStorage0.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage0.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage0.addInvoice(invoice17);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0957");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        InvoiceStorage invoiceStorage23 = new InvoiceStorage();
        Invoice invoice24 = null;
        invoiceStorage23.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage23.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage23.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList27);
        invoiceStorage0.addAllInvoices(invoiceList27);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice31 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0958");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        Invoice invoice10 = null;
        invoiceStorage0.addInvoice(invoice10);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage12.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage12.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0959");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        invoiceStorage0.deleteInvoice(0);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice26 = invoiceStorage0.getInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList17);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0960");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0961");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass8 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0962");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        java.lang.Class<?> wildcardClass18 = invoiceStorage0.getClass();
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0963");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        Invoice invoice24 = invoiceStorage19.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList35 = invoiceStorage25.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList35);
        invoiceStorage0.addAllInvoices(invoiceList35);
        Invoice invoice38 = null;
        invoiceStorage0.addInvoice(invoice38);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        Invoice invoice41 = null;
        invoiceStorage40.addInvoice(invoice41);
        Invoice invoice43 = null;
        invoiceStorage40.addInvoice(invoice43);
        Invoice invoice45 = null;
        invoiceStorage40.addInvoice(invoice45);
        Invoice invoice47 = null;
        invoiceStorage40.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage40.getAllInvoices();
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        Invoice invoice51 = null;
        invoiceStorage50.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage50.getAllInvoices();
        java.util.List<Invoice> invoiceList54 = invoiceStorage50.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList54);
        InvoiceStorage invoiceStorage56 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList57 = invoiceStorage56.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage56.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage56.getAllInvoices();
        InvoiceStorage invoiceStorage61 = new InvoiceStorage();
        Invoice invoice62 = null;
        invoiceStorage61.addInvoice(invoice62);
        java.util.List<Invoice> invoiceList64 = invoiceStorage61.getAllInvoices();
        invoiceStorage56.addAllInvoices(invoiceList64);
        java.util.List<Invoice> invoiceList66 = invoiceStorage56.getAllInvoices();
        java.util.List<Invoice> invoiceList67 = invoiceStorage56.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList67);
        invoiceStorage0.addAllInvoices(invoiceList67);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNotNull(invoiceList67);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0964");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass13 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0965");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList10 = invoiceStorage9.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage9.addInvoice(invoice11);
        Invoice invoice14 = invoiceStorage9.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList15 = invoiceStorage9.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList15);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        Invoice invoice24 = invoiceStorage19.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList34 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList35 = invoiceStorage25.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList35);
        invoiceStorage0.addAllInvoices(invoiceList35);
        Invoice invoice38 = null;
        invoiceStorage0.addInvoice(invoice38);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        Invoice invoice41 = null;
        invoiceStorage40.addInvoice(invoice41);
        Invoice invoice43 = null;
        invoiceStorage40.addInvoice(invoice43);
        Invoice invoice45 = null;
        invoiceStorage40.addInvoice(invoice45);
        Invoice invoice47 = null;
        invoiceStorage40.addInvoice(invoice47);
        java.util.List<Invoice> invoiceList49 = invoiceStorage40.getAllInvoices();
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        Invoice invoice51 = null;
        invoiceStorage50.addInvoice(invoice51);
        java.util.List<Invoice> invoiceList53 = invoiceStorage50.getAllInvoices();
        java.util.List<Invoice> invoiceList54 = invoiceStorage50.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList54);
        InvoiceStorage invoiceStorage56 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList57 = invoiceStorage56.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage56.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage56.getAllInvoices();
        InvoiceStorage invoiceStorage61 = new InvoiceStorage();
        Invoice invoice62 = null;
        invoiceStorage61.addInvoice(invoice62);
        java.util.List<Invoice> invoiceList64 = invoiceStorage61.getAllInvoices();
        invoiceStorage56.addAllInvoices(invoiceList64);
        java.util.List<Invoice> invoiceList66 = invoiceStorage56.getAllInvoices();
        java.util.List<Invoice> invoiceList67 = invoiceStorage56.getAllInvoices();
        invoiceStorage40.addAllInvoices(invoiceList67);
        invoiceStorage0.addAllInvoices(invoiceList67);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice73 = invoiceStorage0.getInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNull(invoice14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList49);
        org.junit.Assert.assertNotNull(invoiceList53);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList66);
        org.junit.Assert.assertNotNull(invoiceList67);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0966");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage25.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage25.addInvoice(invoice33);
        Invoice invoice35 = null;
        invoiceStorage25.addInvoice(invoice35);
        java.util.List<Invoice> invoiceList37 = invoiceStorage25.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList37);
        java.lang.Class<?> wildcardClass39 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList37);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0967");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        Invoice invoice18 = null;
        invoiceStorage0.addInvoice(invoice18);
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        Invoice invoice25 = null;
        invoiceStorage20.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage20.getAllInvoices();
        java.util.List<Invoice> invoiceList28 = invoiceStorage20.getAllInvoices();
        invoiceStorage20.deleteInvoice(0);
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList32 = invoiceStorage31.getAllInvoices();
        Invoice invoice33 = null;
        invoiceStorage31.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage31.getAllInvoices();
        InvoiceStorage invoiceStorage36 = new InvoiceStorage();
        Invoice invoice37 = null;
        invoiceStorage36.addInvoice(invoice37);
        java.util.List<Invoice> invoiceList39 = invoiceStorage36.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList39);
        java.util.List<Invoice> invoiceList41 = invoiceStorage31.getAllInvoices();
        invoiceStorage20.addAllInvoices(invoiceList41);
        invoiceStorage0.addAllInvoices(invoiceList41);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList46 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList47 = invoiceStorage44.getAllInvoices();
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList48);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList48);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0968");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage30.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage30.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList38 = invoiceStorage30.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        Invoice invoice44 = invoiceStorage0.getInvoice((int) (byte) 1);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNull(invoice44);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0969");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        Invoice invoice14 = null;
        invoiceStorage13.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage13.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage13.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList19);
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList22 = invoiceStorage21.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage21.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage21.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage21.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage21.getAllInvoices();
        invoiceStorage21.deleteInvoice(0);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage32.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList38 = invoiceStorage32.getAllInvoices();
        invoiceStorage21.addAllInvoices(invoiceList38);
        Invoice invoice40 = null;
        invoiceStorage21.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList43 = invoiceStorage21.getAllInvoices();
        java.util.List<Invoice> invoiceList44 = invoiceStorage21.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList44);
        java.util.List<Invoice> invoiceList46 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage47 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList48 = invoiceStorage47.getAllInvoices();
        Invoice invoice49 = null;
        invoiceStorage47.addInvoice(invoice49);
        java.util.List<Invoice> invoiceList51 = invoiceStorage47.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage47.addInvoice(invoice52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage47.getAllInvoices();
        java.util.List<Invoice> invoiceList55 = invoiceStorage47.getAllInvoices();
        invoiceStorage47.deleteInvoice(0);
        InvoiceStorage invoiceStorage58 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList59 = invoiceStorage58.getAllInvoices();
        Invoice invoice60 = null;
        invoiceStorage58.addInvoice(invoice60);
        Invoice invoice63 = invoiceStorage58.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList64 = invoiceStorage58.getAllInvoices();
        invoiceStorage47.addAllInvoices(invoiceList64);
        Invoice invoice66 = null;
        invoiceStorage47.addInvoice(invoice66);
        java.util.List<Invoice> invoiceList68 = invoiceStorage47.getAllInvoices();
        java.util.List<Invoice> invoiceList69 = invoiceStorage47.getAllInvoices();
        java.util.List<Invoice> invoiceList70 = invoiceStorage47.getAllInvoices();
        invoiceStorage47.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList73 = invoiceStorage47.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList73);
        java.lang.Class<?> wildcardClass75 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList46);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList55);
        org.junit.Assert.assertNotNull(invoiceList59);
        org.junit.Assert.assertNull(invoice63);
        org.junit.Assert.assertNotNull(invoiceList64);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList69);
        org.junit.Assert.assertNotNull(invoiceList70);
        org.junit.Assert.assertNotNull(invoiceList73);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0970");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        Invoice invoice13 = invoiceStorage0.getInvoice((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = invoice13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNull(invoice13);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0971");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage0.addInvoice(invoice8);
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        InvoiceStorage invoiceStorage30 = new InvoiceStorage();
        Invoice invoice31 = null;
        invoiceStorage30.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage30.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage30.addInvoice(invoice34);
        Invoice invoice37 = invoiceStorage30.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList38 = invoiceStorage30.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList38);
        invoiceStorage0.addAllInvoices(invoiceList38);
        java.util.List<Invoice> invoiceList41 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList42 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList43 = invoiceStorage0.getAllInvoices();
        Invoice invoice45 = invoiceStorage0.getInvoice((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNull(invoice37);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList43);
        org.junit.Assert.assertNull(invoice45);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0972");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        Invoice invoice11 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        Invoice invoice20 = null;
        invoiceStorage19.addInvoice(invoice20);
        java.util.List<Invoice> invoiceList22 = invoiceStorage19.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        invoiceStorage12.addAllInvoices(invoiceList23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList25);
        invoiceStorage0.deleteInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0973");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage13.addInvoice(invoice18);
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList21 = invoiceStorage20.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage20.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        invoiceStorage20.addAllInvoices(invoiceList28);
        invoiceStorage13.addAllInvoices(invoiceList28);
        Invoice invoice31 = null;
        invoiceStorage13.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        InvoiceStorage invoiceStorage39 = new InvoiceStorage();
        Invoice invoice40 = null;
        invoiceStorage39.addInvoice(invoice40);
        java.util.List<Invoice> invoiceList42 = invoiceStorage39.getAllInvoices();
        invoiceStorage34.addAllInvoices(invoiceList42);
        Invoice invoice45 = invoiceStorage34.getInvoice(0);
        InvoiceStorage invoiceStorage46 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList47 = invoiceStorage46.getAllInvoices();
        Invoice invoice48 = null;
        invoiceStorage46.addInvoice(invoice48);
        java.util.List<Invoice> invoiceList50 = invoiceStorage46.getAllInvoices();
        Invoice invoice51 = null;
        invoiceStorage46.addInvoice(invoice51);
        InvoiceStorage invoiceStorage53 = new InvoiceStorage();
        Invoice invoice54 = null;
        invoiceStorage53.addInvoice(invoice54);
        java.util.List<Invoice> invoiceList56 = invoiceStorage53.getAllInvoices();
        java.util.List<Invoice> invoiceList57 = invoiceStorage53.getAllInvoices();
        invoiceStorage46.addAllInvoices(invoiceList57);
        java.util.List<Invoice> invoiceList59 = invoiceStorage46.getAllInvoices();
        invoiceStorage34.addAllInvoices(invoiceList59);
        invoiceStorage13.addAllInvoices(invoiceList59);
        invoiceStorage0.addAllInvoices(invoiceList59);
        java.util.List<Invoice> invoiceList63 = null;
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.addAllInvoices(invoiceList63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNull(invoice45);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNotNull(invoiceList50);
        org.junit.Assert.assertNotNull(invoiceList56);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList59);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0974");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        InvoiceStorage invoiceStorage19 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList20 = invoiceStorage19.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage19.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage19.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        Invoice invoice25 = null;
        invoiceStorage24.addInvoice(invoice25);
        java.util.List<Invoice> invoiceList27 = invoiceStorage24.getAllInvoices();
        invoiceStorage19.addAllInvoices(invoiceList27);
        invoiceStorage12.addAllInvoices(invoiceList27);
        java.util.List<Invoice> invoiceList30 = invoiceStorage12.getAllInvoices();
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList33 = invoiceStorage32.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage32.addInvoice(invoice34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList36);
        Invoice invoice39 = invoiceStorage31.getInvoice(0);
        Invoice invoice40 = null;
        invoiceStorage31.addInvoice(invoice40);
        Invoice invoice42 = null;
        invoiceStorage31.addInvoice(invoice42);
        InvoiceStorage invoiceStorage44 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList45 = invoiceStorage44.getAllInvoices();
        Invoice invoice46 = null;
        invoiceStorage44.addInvoice(invoice46);
        java.util.List<Invoice> invoiceList48 = invoiceStorage44.getAllInvoices();
        InvoiceStorage invoiceStorage49 = new InvoiceStorage();
        Invoice invoice50 = null;
        invoiceStorage49.addInvoice(invoice50);
        java.util.List<Invoice> invoiceList52 = invoiceStorage49.getAllInvoices();
        invoiceStorage44.addAllInvoices(invoiceList52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage44.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList54);
        InvoiceStorage invoiceStorage56 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList57 = invoiceStorage56.getAllInvoices();
        Invoice invoice58 = null;
        invoiceStorage56.addInvoice(invoice58);
        java.util.List<Invoice> invoiceList60 = invoiceStorage56.getAllInvoices();
        Invoice invoice61 = null;
        invoiceStorage56.addInvoice(invoice61);
        java.util.List<Invoice> invoiceList63 = invoiceStorage56.getAllInvoices();
        Invoice invoice64 = null;
        invoiceStorage56.addInvoice(invoice64);
        Invoice invoice66 = null;
        invoiceStorage56.addInvoice(invoice66);
        java.util.List<Invoice> invoiceList68 = invoiceStorage56.getAllInvoices();
        invoiceStorage31.addAllInvoices(invoiceList68);
        invoiceStorage12.addAllInvoices(invoiceList68);
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        Invoice invoice72 = null;
        invoiceStorage71.addInvoice(invoice72);
        java.util.List<Invoice> invoiceList74 = invoiceStorage71.getAllInvoices();
        Invoice invoice75 = null;
        invoiceStorage71.addInvoice(invoice75);
        Invoice invoice78 = invoiceStorage71.getInvoice((int) (byte) 1);
        InvoiceStorage invoiceStorage79 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList80 = invoiceStorage79.getAllInvoices();
        Invoice invoice81 = null;
        invoiceStorage79.addInvoice(invoice81);
        InvoiceStorage invoiceStorage83 = new InvoiceStorage();
        Invoice invoice84 = null;
        invoiceStorage83.addInvoice(invoice84);
        java.util.List<Invoice> invoiceList86 = invoiceStorage83.getAllInvoices();
        Invoice invoice87 = null;
        invoiceStorage83.addInvoice(invoice87);
        Invoice invoice90 = invoiceStorage83.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList91 = invoiceStorage83.getAllInvoices();
        invoiceStorage79.addAllInvoices(invoiceList91);
        invoiceStorage71.addAllInvoices(invoiceList91);
        invoiceStorage12.addAllInvoices(invoiceList91);
        java.util.List<Invoice> invoiceList95 = invoiceStorage12.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList95);
        java.lang.Class<?> wildcardClass97 = invoiceList95.getClass();
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNull(invoice39);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList48);
        org.junit.Assert.assertNotNull(invoiceList52);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList57);
        org.junit.Assert.assertNotNull(invoiceList60);
        org.junit.Assert.assertNotNull(invoiceList63);
        org.junit.Assert.assertNotNull(invoiceList68);
        org.junit.Assert.assertNotNull(invoiceList74);
        org.junit.Assert.assertNull(invoice78);
        org.junit.Assert.assertNotNull(invoiceList80);
        org.junit.Assert.assertNotNull(invoiceList86);
        org.junit.Assert.assertNull(invoice90);
        org.junit.Assert.assertNotNull(invoiceList91);
        org.junit.Assert.assertNotNull(invoiceList95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0975");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0976");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        Invoice invoice11 = null;
        invoiceStorage0.addInvoice(invoice11);
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage13.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        Invoice invoice26 = null;
        invoiceStorage25.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage25.getAllInvoices();
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        invoiceStorage25.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList34 = invoiceStorage25.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList34);
        Invoice invoice36 = null;
        invoiceStorage0.addInvoice(invoice36);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList34);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0977");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        Invoice invoice9 = invoiceStorage0.getInvoice(0);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice11 = invoiceStorage0.getInvoice(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice9);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0978");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(1);
        InvoiceStorage invoiceStorage12 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList13 = invoiceStorage12.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage12.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage12.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage12.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage12.getAllInvoices();
        Invoice invoice21 = invoiceStorage12.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage22 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList23 = invoiceStorage22.getAllInvoices();
        Invoice invoice24 = null;
        invoiceStorage22.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage22.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage22.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        invoiceStorage22.addAllInvoices(invoiceList33);
        invoiceStorage12.addAllInvoices(invoiceList33);
        invoiceStorage0.addAllInvoices(invoiceList33);
        InvoiceStorage invoiceStorage37 = new InvoiceStorage();
        Invoice invoice38 = null;
        invoiceStorage37.addInvoice(invoice38);
        java.util.List<Invoice> invoiceList40 = invoiceStorage37.getAllInvoices();
        java.util.List<Invoice> invoiceList41 = invoiceStorage37.getAllInvoices();
        java.util.List<Invoice> invoiceList42 = invoiceStorage37.getAllInvoices();
        java.util.List<Invoice> invoiceList43 = invoiceStorage37.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList43);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNull(invoice21);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList40);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList42);
        org.junit.Assert.assertNotNull(invoiceList43);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0979");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList26 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList26);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0980");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0981");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        Invoice invoice8 = null;
        invoiceStorage7.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage7.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        java.lang.Class<?> wildcardClass16 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0982");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        Invoice invoice6 = null;
        invoiceStorage0.addInvoice(invoice6);
        Invoice invoice9 = invoiceStorage0.getInvoice((int) (short) 1);
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        Invoice invoice13 = null;
        invoiceStorage10.addInvoice(invoice13);
        Invoice invoice15 = null;
        invoiceStorage10.addInvoice(invoice15);
        Invoice invoice17 = null;
        invoiceStorage10.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage10.getAllInvoices();
        InvoiceStorage invoiceStorage20 = new InvoiceStorage();
        Invoice invoice21 = null;
        invoiceStorage20.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage20.getAllInvoices();
        java.util.List<Invoice> invoiceList24 = invoiceStorage20.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList24);
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList27 = invoiceStorage26.getAllInvoices();
        Invoice invoice28 = null;
        invoiceStorage26.addInvoice(invoice28);
        java.util.List<Invoice> invoiceList30 = invoiceStorage26.getAllInvoices();
        InvoiceStorage invoiceStorage31 = new InvoiceStorage();
        Invoice invoice32 = null;
        invoiceStorage31.addInvoice(invoice32);
        java.util.List<Invoice> invoiceList34 = invoiceStorage31.getAllInvoices();
        invoiceStorage26.addAllInvoices(invoiceList34);
        java.util.List<Invoice> invoiceList36 = invoiceStorage26.getAllInvoices();
        java.util.List<Invoice> invoiceList37 = invoiceStorage26.getAllInvoices();
        invoiceStorage10.addAllInvoices(invoiceList37);
        invoiceStorage0.addAllInvoices(invoiceList37);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNull(invoice9);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList34);
        org.junit.Assert.assertNotNull(invoiceList36);
        org.junit.Assert.assertNotNull(invoiceList37);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0983");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList8 = invoiceStorage7.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage7.addInvoice(invoice9);
        java.util.List<Invoice> invoiceList11 = invoiceStorage7.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage7.addInvoice(invoice12);
        Invoice invoice14 = null;
        invoiceStorage7.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage7.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice20 = invoiceStorage0.getInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList18);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0984");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage16.addInvoice(invoice21);
        java.util.List<Invoice> invoiceList23 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage24 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList25 = invoiceStorage24.getAllInvoices();
        Invoice invoice26 = null;
        invoiceStorage24.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage24.getAllInvoices();
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        Invoice invoice30 = null;
        invoiceStorage29.addInvoice(invoice30);
        java.util.List<Invoice> invoiceList32 = invoiceStorage29.getAllInvoices();
        invoiceStorage24.addAllInvoices(invoiceList32);
        invoiceStorage16.addAllInvoices(invoiceList32);
        invoiceStorage0.addAllInvoices(invoiceList32);
        invoiceStorage0.deleteInvoice((int) (short) 0);
        Invoice invoice39 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage40 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList41 = invoiceStorage40.getAllInvoices();
        Invoice invoice42 = null;
        invoiceStorage40.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage40.getAllInvoices();
        Invoice invoice45 = null;
        invoiceStorage40.addInvoice(invoice45);
        java.util.List<Invoice> invoiceList47 = invoiceStorage40.getAllInvoices();
        Invoice invoice49 = invoiceStorage40.getInvoice((int) (short) 1);
        java.util.List<Invoice> invoiceList50 = invoiceStorage40.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList50);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(invoiceList32);
        org.junit.Assert.assertNull(invoice39);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList47);
        org.junit.Assert.assertNull(invoice49);
        org.junit.Assert.assertNotNull(invoiceList50);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0985");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(1);
        java.util.List<Invoice> invoiceList12 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage13 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList14 = invoiceStorage13.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage13.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage13.getAllInvoices();
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList21);
        Invoice invoice24 = invoiceStorage13.getInvoice(0);
        invoiceStorage13.deleteInvoice((int) (short) 0);
        Invoice invoice27 = null;
        invoiceStorage13.addInvoice(invoice27);
        InvoiceStorage invoiceStorage29 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList30 = invoiceStorage29.getAllInvoices();
        Invoice invoice31 = null;
        invoiceStorage29.addInvoice(invoice31);
        java.util.List<Invoice> invoiceList33 = invoiceStorage29.getAllInvoices();
        Invoice invoice34 = null;
        invoiceStorage29.addInvoice(invoice34);
        Invoice invoice36 = null;
        invoiceStorage29.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage29.getAllInvoices();
        invoiceStorage29.deleteInvoice((int) (short) 0);
        java.util.List<Invoice> invoiceList41 = invoiceStorage29.getAllInvoices();
        invoiceStorage13.addAllInvoices(invoiceList41);
        invoiceStorage0.addAllInvoices(invoiceList41);
        java.lang.Class<?> wildcardClass44 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice24);
        org.junit.Assert.assertNotNull(invoiceList30);
        org.junit.Assert.assertNotNull(invoiceList33);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0986");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage10.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList14);
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList17 = invoiceStorage16.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage16.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage16.getAllInvoices();
        InvoiceStorage invoiceStorage21 = new InvoiceStorage();
        Invoice invoice22 = null;
        invoiceStorage21.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage21.getAllInvoices();
        invoiceStorage16.addAllInvoices(invoiceList24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage16.getAllInvoices();
        java.util.List<Invoice> invoiceList27 = invoiceStorage16.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList27);
        java.lang.Class<?> wildcardClass29 = invoiceList27.getClass();
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList27);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0987");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        Invoice invoice5 = null;
        invoiceStorage4.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage4.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage4.addInvoice(invoice8);
        Invoice invoice11 = invoiceStorage4.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList12 = invoiceStorage4.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage18.addInvoice(invoice22);
        Invoice invoice24 = null;
        invoiceStorage18.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage18.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage18.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList28);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList28);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0988");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList7 = invoiceStorage6.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage6.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage6.getAllInvoices();
        Invoice invoice11 = null;
        invoiceStorage6.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList14 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList15 = invoiceStorage6.getAllInvoices();
        java.util.List<Invoice> invoiceList16 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList16);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage18.getAllInvoices();
        Invoice invoice23 = null;
        invoiceStorage18.addInvoice(invoice23);
        java.util.List<Invoice> invoiceList25 = invoiceStorage18.getAllInvoices();
        InvoiceStorage invoiceStorage26 = new InvoiceStorage();
        Invoice invoice27 = null;
        invoiceStorage26.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage26.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage26.addInvoice(invoice30);
        Invoice invoice32 = null;
        invoiceStorage26.addInvoice(invoice32);
        InvoiceStorage invoiceStorage34 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList35 = invoiceStorage34.getAllInvoices();
        Invoice invoice36 = null;
        invoiceStorage34.addInvoice(invoice36);
        java.util.List<Invoice> invoiceList38 = invoiceStorage34.getAllInvoices();
        Invoice invoice39 = null;
        invoiceStorage34.addInvoice(invoice39);
        InvoiceStorage invoiceStorage41 = new InvoiceStorage();
        Invoice invoice42 = null;
        invoiceStorage41.addInvoice(invoice42);
        java.util.List<Invoice> invoiceList44 = invoiceStorage41.getAllInvoices();
        java.util.List<Invoice> invoiceList45 = invoiceStorage41.getAllInvoices();
        invoiceStorage34.addAllInvoices(invoiceList45);
        invoiceStorage26.addAllInvoices(invoiceList45);
        invoiceStorage18.addAllInvoices(invoiceList45);
        invoiceStorage0.addAllInvoices(invoiceList45);
        InvoiceStorage invoiceStorage50 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList51 = invoiceStorage50.getAllInvoices();
        Invoice invoice52 = null;
        invoiceStorage50.addInvoice(invoice52);
        java.util.List<Invoice> invoiceList54 = invoiceStorage50.getAllInvoices();
        Invoice invoice55 = null;
        invoiceStorage50.addInvoice(invoice55);
        InvoiceStorage invoiceStorage57 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList58 = invoiceStorage57.getAllInvoices();
        Invoice invoice59 = null;
        invoiceStorage57.addInvoice(invoice59);
        java.util.List<Invoice> invoiceList61 = invoiceStorage57.getAllInvoices();
        InvoiceStorage invoiceStorage62 = new InvoiceStorage();
        Invoice invoice63 = null;
        invoiceStorage62.addInvoice(invoice63);
        java.util.List<Invoice> invoiceList65 = invoiceStorage62.getAllInvoices();
        invoiceStorage57.addAllInvoices(invoiceList65);
        invoiceStorage50.addAllInvoices(invoiceList65);
        Invoice invoice68 = null;
        invoiceStorage50.addInvoice(invoice68);
        java.util.List<Invoice> invoiceList70 = invoiceStorage50.getAllInvoices();
        InvoiceStorage invoiceStorage71 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList72 = invoiceStorage71.getAllInvoices();
        Invoice invoice73 = null;
        invoiceStorage71.addInvoice(invoice73);
        java.util.List<Invoice> invoiceList75 = invoiceStorage71.getAllInvoices();
        InvoiceStorage invoiceStorage76 = new InvoiceStorage();
        Invoice invoice77 = null;
        invoiceStorage76.addInvoice(invoice77);
        java.util.List<Invoice> invoiceList79 = invoiceStorage76.getAllInvoices();
        invoiceStorage71.addAllInvoices(invoiceList79);
        Invoice invoice82 = invoiceStorage71.getInvoice(0);
        InvoiceStorage invoiceStorage83 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList84 = invoiceStorage83.getAllInvoices();
        Invoice invoice85 = null;
        invoiceStorage83.addInvoice(invoice85);
        java.util.List<Invoice> invoiceList87 = invoiceStorage83.getAllInvoices();
        Invoice invoice88 = null;
        invoiceStorage83.addInvoice(invoice88);
        InvoiceStorage invoiceStorage90 = new InvoiceStorage();
        Invoice invoice91 = null;
        invoiceStorage90.addInvoice(invoice91);
        java.util.List<Invoice> invoiceList93 = invoiceStorage90.getAllInvoices();
        java.util.List<Invoice> invoiceList94 = invoiceStorage90.getAllInvoices();
        invoiceStorage83.addAllInvoices(invoiceList94);
        java.util.List<Invoice> invoiceList96 = invoiceStorage83.getAllInvoices();
        invoiceStorage71.addAllInvoices(invoiceList96);
        invoiceStorage50.addAllInvoices(invoiceList96);
        invoiceStorage0.addAllInvoices(invoiceList96);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList25);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList38);
        org.junit.Assert.assertNotNull(invoiceList44);
        org.junit.Assert.assertNotNull(invoiceList45);
        org.junit.Assert.assertNotNull(invoiceList51);
        org.junit.Assert.assertNotNull(invoiceList54);
        org.junit.Assert.assertNotNull(invoiceList58);
        org.junit.Assert.assertNotNull(invoiceList61);
        org.junit.Assert.assertNotNull(invoiceList65);
        org.junit.Assert.assertNotNull(invoiceList70);
        org.junit.Assert.assertNotNull(invoiceList72);
        org.junit.Assert.assertNotNull(invoiceList75);
        org.junit.Assert.assertNotNull(invoiceList79);
        org.junit.Assert.assertNull(invoice82);
        org.junit.Assert.assertNotNull(invoiceList84);
        org.junit.Assert.assertNotNull(invoiceList87);
        org.junit.Assert.assertNotNull(invoiceList93);
        org.junit.Assert.assertNotNull(invoiceList94);
        org.junit.Assert.assertNotNull(invoiceList96);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0989");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        Invoice invoice7 = null;
        invoiceStorage0.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList11 = invoiceStorage0.getAllInvoices();
        Invoice invoice12 = null;
        invoiceStorage0.addInvoice(invoice12);
        InvoiceStorage invoiceStorage14 = new InvoiceStorage();
        Invoice invoice15 = null;
        invoiceStorage14.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage14.getAllInvoices();
        Invoice invoice18 = null;
        invoiceStorage14.addInvoice(invoice18);
        Invoice invoice20 = null;
        invoiceStorage14.addInvoice(invoice20);
        Invoice invoice22 = null;
        invoiceStorage14.addInvoice(invoice22);
        java.util.List<Invoice> invoiceList24 = invoiceStorage14.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList24);
        Invoice invoice27 = invoiceStorage0.getInvoice((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList11);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNull(invoice27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0990");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        java.util.List<Invoice> invoiceList3 = invoiceStorage0.getAllInvoices();
        Invoice invoice4 = null;
        invoiceStorage0.addInvoice(invoice4);
        InvoiceStorage invoiceStorage6 = new InvoiceStorage();
        Invoice invoice7 = null;
        invoiceStorage6.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage6.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage6.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage6.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage0.getAllInvoices();
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList3);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList14);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0991");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        Invoice invoice9 = null;
        invoiceStorage5.addInvoice(invoice9);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        Invoice invoice12 = null;
        invoiceStorage11.addInvoice(invoice12);
        java.util.List<Invoice> invoiceList14 = invoiceStorage11.getAllInvoices();
        Invoice invoice15 = null;
        invoiceStorage11.addInvoice(invoice15);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList17);
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice20 = null;
        invoiceStorage0.addInvoice(invoice20);
        // The following exception was thrown during execution in test generation
        try {
            Invoice invoice23 = invoiceStorage0.getInvoice(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList14);
        org.junit.Assert.assertNotNull(invoiceList17);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0992");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        InvoiceStorage invoiceStorage4 = new InvoiceStorage();
        Invoice invoice5 = null;
        invoiceStorage4.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage4.getAllInvoices();
        Invoice invoice8 = null;
        invoiceStorage4.addInvoice(invoice8);
        Invoice invoice11 = invoiceStorage4.getInvoice((int) (byte) 1);
        java.util.List<Invoice> invoiceList12 = invoiceStorage4.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList12);
        invoiceStorage0.deleteInvoice((int) (byte) 0);
        Invoice invoice16 = null;
        invoiceStorage0.addInvoice(invoice16);
        InvoiceStorage invoiceStorage18 = new InvoiceStorage();
        Invoice invoice19 = null;
        invoiceStorage18.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage18.getAllInvoices();
        Invoice invoice22 = null;
        invoiceStorage18.addInvoice(invoice22);
        Invoice invoice24 = null;
        invoiceStorage18.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage18.addInvoice(invoice26);
        java.util.List<Invoice> invoiceList28 = invoiceStorage18.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList28);
        java.lang.Class<?> wildcardClass30 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNull(invoice11);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0993");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        Invoice invoice23 = invoiceStorage0.getInvoice((int) (short) 0);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        java.util.List<Invoice> invoiceList26 = invoiceStorage0.getAllInvoices();
        Invoice invoice28 = invoiceStorage0.getInvoice((int) (byte) 1);
        Invoice invoice30 = invoiceStorage0.getInvoice(0);
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNull(invoice23);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNull(invoice28);
        org.junit.Assert.assertNull(invoice30);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0994");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        Invoice invoice5 = invoiceStorage0.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage7 = new InvoiceStorage();
        Invoice invoice8 = null;
        invoiceStorage7.addInvoice(invoice8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage7.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        Invoice invoice16 = null;
        invoiceStorage11.addInvoice(invoice16);
        java.util.List<Invoice> invoiceList18 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList19 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList20 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        invoiceStorage7.addAllInvoices(invoiceList21);
        invoiceStorage0.addAllInvoices(invoiceList21);
        java.util.List<Invoice> invoiceList24 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass25 = invoiceList24.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNull(invoice5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList18);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0995");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice3 = null;
        invoiceStorage0.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList6 = invoiceStorage0.getAllInvoices();
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        Invoice invoice9 = null;
        invoiceStorage0.addInvoice(invoice9);
        invoiceStorage0.deleteInvoice((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNull(invoice8);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0996");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        Invoice invoice10 = null;
        invoiceStorage5.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage5.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList13);
        Invoice invoice16 = invoiceStorage0.getInvoice(0);
        Invoice invoice17 = null;
        invoiceStorage0.addInvoice(invoice17);
        java.lang.Class<?> wildcardClass19 = invoiceStorage0.getClass();
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0997");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        Invoice invoice5 = null;
        invoiceStorage0.addInvoice(invoice5);
        java.util.List<Invoice> invoiceList7 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList8 = invoiceStorage0.getAllInvoices();
        invoiceStorage0.deleteInvoice(0);
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        Invoice invoice16 = invoiceStorage11.getInvoice((int) (byte) 0);
        java.util.List<Invoice> invoiceList17 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList17);
        Invoice invoice19 = null;
        invoiceStorage0.addInvoice(invoice19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage0.getAllInvoices();
        java.util.List<Invoice> invoiceList23 = invoiceStorage0.getAllInvoices();
        java.lang.Class<?> wildcardClass24 = invoiceStorage0.getClass();
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList7);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNull(invoice16);
        org.junit.Assert.assertNotNull(invoiceList17);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
        org.junit.Assert.assertNotNull(invoiceList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0998");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList1 = invoiceStorage0.getAllInvoices();
        Invoice invoice2 = null;
        invoiceStorage0.addInvoice(invoice2);
        java.util.List<Invoice> invoiceList4 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        Invoice invoice6 = null;
        invoiceStorage5.addInvoice(invoice6);
        java.util.List<Invoice> invoiceList8 = invoiceStorage5.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList8);
        java.util.List<Invoice> invoiceList10 = invoiceStorage0.getAllInvoices();
        InvoiceStorage invoiceStorage11 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList12 = invoiceStorage11.getAllInvoices();
        Invoice invoice13 = null;
        invoiceStorage11.addInvoice(invoice13);
        java.util.List<Invoice> invoiceList15 = invoiceStorage11.getAllInvoices();
        InvoiceStorage invoiceStorage16 = new InvoiceStorage();
        Invoice invoice17 = null;
        invoiceStorage16.addInvoice(invoice17);
        java.util.List<Invoice> invoiceList19 = invoiceStorage16.getAllInvoices();
        invoiceStorage11.addAllInvoices(invoiceList19);
        java.util.List<Invoice> invoiceList21 = invoiceStorage11.getAllInvoices();
        java.util.List<Invoice> invoiceList22 = invoiceStorage11.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList22);
        Invoice invoice24 = null;
        invoiceStorage0.addInvoice(invoice24);
        Invoice invoice26 = null;
        invoiceStorage0.addInvoice(invoice26);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(invoiceList1);
        org.junit.Assert.assertNotNull(invoiceList4);
        org.junit.Assert.assertNotNull(invoiceList8);
        org.junit.Assert.assertNotNull(invoiceList10);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList15);
        org.junit.Assert.assertNotNull(invoiceList19);
        org.junit.Assert.assertNotNull(invoiceList21);
        org.junit.Assert.assertNotNull(invoiceList22);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test0999");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        Invoice invoice1 = null;
        invoiceStorage0.addInvoice(invoice1);
        Invoice invoice4 = invoiceStorage0.getInvoice((int) (short) 0);
        InvoiceStorage invoiceStorage5 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList6 = invoiceStorage5.getAllInvoices();
        Invoice invoice7 = null;
        invoiceStorage5.addInvoice(invoice7);
        java.util.List<Invoice> invoiceList9 = invoiceStorage5.getAllInvoices();
        InvoiceStorage invoiceStorage10 = new InvoiceStorage();
        Invoice invoice11 = null;
        invoiceStorage10.addInvoice(invoice11);
        java.util.List<Invoice> invoiceList13 = invoiceStorage10.getAllInvoices();
        invoiceStorage5.addAllInvoices(invoiceList13);
        invoiceStorage0.addAllInvoices(invoiceList13);
        java.util.List<Invoice> invoiceList16 = invoiceStorage0.getAllInvoices();
        Invoice invoice17 = null;
        invoiceStorage0.addInvoice(invoice17);
        // The following exception was thrown during execution in test generation
        try {
            invoiceStorage0.deleteInvoice((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(invoice4);
        org.junit.Assert.assertNotNull(invoiceList6);
        org.junit.Assert.assertNotNull(invoiceList9);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "InvoiceStorageTest1.test1000");
        InvoiceStorage invoiceStorage0 = new InvoiceStorage();
        InvoiceStorage invoiceStorage1 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList2 = invoiceStorage1.getAllInvoices();
        Invoice invoice3 = null;
        invoiceStorage1.addInvoice(invoice3);
        java.util.List<Invoice> invoiceList5 = invoiceStorage1.getAllInvoices();
        invoiceStorage0.addAllInvoices(invoiceList5);
        Invoice invoice8 = invoiceStorage0.getInvoice(0);
        InvoiceStorage invoiceStorage9 = new InvoiceStorage();
        Invoice invoice10 = null;
        invoiceStorage9.addInvoice(invoice10);
        java.util.List<Invoice> invoiceList12 = invoiceStorage9.getAllInvoices();
        java.util.List<Invoice> invoiceList13 = invoiceStorage9.getAllInvoices();
        Invoice invoice14 = null;
        invoiceStorage9.addInvoice(invoice14);
        java.util.List<Invoice> invoiceList16 = invoiceStorage9.getAllInvoices();
        InvoiceStorage invoiceStorage17 = new InvoiceStorage();
        Invoice invoice18 = null;
        invoiceStorage17.addInvoice(invoice18);
        java.util.List<Invoice> invoiceList20 = invoiceStorage17.getAllInvoices();
        Invoice invoice21 = null;
        invoiceStorage17.addInvoice(invoice21);
        Invoice invoice23 = null;
        invoiceStorage17.addInvoice(invoice23);
        InvoiceStorage invoiceStorage25 = new InvoiceStorage();
        java.util.List<Invoice> invoiceList26 = invoiceStorage25.getAllInvoices();
        Invoice invoice27 = null;
        invoiceStorage25.addInvoice(invoice27);
        java.util.List<Invoice> invoiceList29 = invoiceStorage25.getAllInvoices();
        Invoice invoice30 = null;
        invoiceStorage25.addInvoice(invoice30);
        InvoiceStorage invoiceStorage32 = new InvoiceStorage();
        Invoice invoice33 = null;
        invoiceStorage32.addInvoice(invoice33);
        java.util.List<Invoice> invoiceList35 = invoiceStorage32.getAllInvoices();
        java.util.List<Invoice> invoiceList36 = invoiceStorage32.getAllInvoices();
        invoiceStorage25.addAllInvoices(invoiceList36);
        invoiceStorage17.addAllInvoices(invoiceList36);
        invoiceStorage9.addAllInvoices(invoiceList36);
        invoiceStorage0.addAllInvoices(invoiceList36);
        invoiceStorage0.deleteInvoice(1);
        Invoice invoice43 = null;
        invoiceStorage0.addInvoice(invoice43);
        org.junit.Assert.assertNotNull(invoiceList2);
        org.junit.Assert.assertNotNull(invoiceList5);
        org.junit.Assert.assertNull(invoice8);
        org.junit.Assert.assertNotNull(invoiceList12);
        org.junit.Assert.assertNotNull(invoiceList13);
        org.junit.Assert.assertNotNull(invoiceList16);
        org.junit.Assert.assertNotNull(invoiceList20);
        org.junit.Assert.assertNotNull(invoiceList26);
        org.junit.Assert.assertNotNull(invoiceList29);
        org.junit.Assert.assertNotNull(invoiceList35);
        org.junit.Assert.assertNotNull(invoiceList36);
    }
}

